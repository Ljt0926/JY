ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	1
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB33:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_10 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     130u, 130u, 130u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     40u, 40u, 40u, 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     10u, 10u, 10u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 143 0
  27              		.cfi_startproc
  28              	.LVL0:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 4


 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  29              		.loc 1 146 0
  30 0000 0A4B     		ldr	r3, .L2
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  31              		.loc 1 143 0
  32 0002 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 146 0
  39 0004 1C5C     		ldrb	r4, [r3, r0]
  40              	.LVL1:
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  41              		.loc 1 160 0
  42 0006 0A4B     		ldr	r3, .L2+4
  43              	.LVL2:
  44 0008 4200     		lsl	r2, r0, #1
  45 000a D15A     		ldrh	r1, [r2, r3]
  46 000c 094B     		ldr	r3, .L2+8
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  47              		.loc 1 161 0
  48 000e 0025     		mov	r5, #0
  49 0010 9E1D     		add	r6, r3, #6
  50 0012 3554     		strb	r5, [r6, r0]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  51              		.loc 1 162 0
  52 0014 1E1C     		mov	r6, r3
  53 0016 0936     		add	r6, r6, #9
  54 0018 3554     		strb	r5, [r6, r0]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  55              		.loc 1 164 0
  56 001a 0748     		ldr	r0, .L2+12
  57              	.LVL3:
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  58              		.loc 1 160 0
  59 001c D152     		strh	r1, [r2, r3]
  60              		.loc 1 164 0
  61 001e 005D     		ldrb	r0, [r0, r4]
  62 0020 1B19     		add	r3, r3, r4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 5


  63 0022 1873     		strb	r0, [r3, #12]
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  64              		.loc 1 179 0
  65 0024 054B     		ldr	r3, .L2+16
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  66              		.loc 1 191 0
  67              		@ sp needed
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  68              		.loc 1 179 0
  69 0026 D152     		strh	r1, [r2, r3]
  70              	.LVL4:
  71              		.loc 1 191 0
  72 0028 70BD     		pop	{r4, r5, r6, pc}
  73              	.L3:
  74 002a C046     		.align	2
  75              	.L2:
  76 002c 00000000 		.word	CapSense_widgetNumber
  77 0030 00000000 		.word	CapSense_sensorRaw
  78 0034 00000000 		.word	.LANCHOR0
  79 0038 00000000 		.word	.LANCHOR1
  80 003c 00000000 		.word	CapSense_rawFilterData1
  81              		.cfi_endproc
  82              	.LFE33:
  83              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  84              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  85              		.align	1
  86              		.global	CapSense_InitializeSensorBaseline
  87              		.code	16
  88              		.thumb_func
  89              		.type	CapSense_InitializeSensorBaseline, %function
  90              	CapSense_InitializeSensorBaseline:
  91              	.LFB34:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 6


 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  92              		.loc 1 219 0
  93              		.cfi_startproc
  94              	.LVL5:
  95 0000 10B5     		push	{r4, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  99              		.loc 1 219 0
 100 0002 041C     		mov	r4, r0
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 101              		.loc 1 221 0
 102 0004 FFF7FEFF 		bl	CapSense_ScanSensor
 103              	.LVL6:
 104              	.L6:
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 105              		.loc 1 222 0 discriminator 1
 106 0008 FFF7FEFF 		bl	CapSense_IsBusy
 107              	.LVL7:
 108 000c 0028     		cmp	r0, #0
 109 000e FBD1     		bne	.L6
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 110              		.loc 1 228 0
 111 0010 201C     		mov	r0, r4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 7


 112 0012 FFF7FEFF 		bl	CapSense_BaseInit
 113              	.LVL8:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 114              		.loc 1 229 0
 115              		@ sp needed
 116              	.LVL9:
 117 0016 10BD     		pop	{r4, pc}
 118              		.cfi_endproc
 119              	.LFE34:
 120              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 121              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 122              		.align	1
 123              		.global	CapSense_InitializeAllBaselines
 124              		.code	16
 125              		.thumb_func
 126              		.type	CapSense_InitializeAllBaselines, %function
 127              	CapSense_InitializeAllBaselines:
 128              	.LFB35:
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 129              		.loc 1 256 0
 130              		.cfi_startproc
 131              	.LVL10:
 132 0000 08B5     		push	{r3, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 8


 136              		.loc 1 261 0
 137 0002 0020     		mov	r0, #0
 138 0004 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 139              	.LVL11:
 140 0008 0120     		mov	r0, #1
 141 000a FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 142              	.LVL12:
 143 000e 0220     		mov	r0, #2
 144 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 145              	.LVL13:
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 146              		.loc 1 263 0
 147              		@ sp needed
 148 0014 08BD     		pop	{r3, pc}
 149              		.cfi_endproc
 150              	.LFE35:
 151              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 152              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 153              		.align	1
 154              		.global	CapSense_InitializeEnabledBaselines
 155              		.code	16
 156              		.thumb_func
 157              		.type	CapSense_InitializeEnabledBaselines, %function
 158              	CapSense_InitializeEnabledBaselines:
 159              	.LFB36:
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 160              		.loc 1 291 0
 161              		.cfi_startproc
 162 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 9


 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 166              		.loc 1 295 0
 167 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 168              	.LVL14:
 169              	.L11:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 170              		.loc 1 296 0 discriminator 1
 171 0006 FFF7FEFF 		bl	CapSense_IsBusy
 172              	.LVL15:
 173 000a 0028     		cmp	r0, #0
 174 000c FBD1     		bne	.L11
 175              		.loc 1 296 0 is_stmt 0
 176 000e 041C     		mov	r4, r0
 177              	.L14:
 178              	.LVL16:
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 179              		.loc 1 303 0 is_stmt 1
 180 0010 0648     		ldr	r0, .L18
 181 0012 211C     		mov	r1, r4
 182 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 183              	.LVL17:
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 184              		.loc 1 306 0
 185 0018 0028     		cmp	r0, #0
 186 001a 02D0     		beq	.L12
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 187              		.loc 1 309 0
 188 001c 201C     		mov	r0, r4
 189              	.LVL18:
 190 001e FFF7FEFF 		bl	CapSense_BaseInit
 191              	.LVL19:
 192              	.L12:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 193              		.loc 1 301 0
 194 0022 0134     		add	r4, r4, #1
 195              	.LVL20:
 196 0024 032C     		cmp	r4, #3
 197 0026 F3D1     		bne	.L14
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 10


 198              		.loc 1 312 0
 199              		@ sp needed
 200              	.LVL21:
 201 0028 10BD     		pop	{r4, pc}
 202              	.L19:
 203 002a C046     		.align	2
 204              	.L18:
 205 002c 00000000 		.word	CapSense_sensorEnableMask
 206              		.cfi_endproc
 207              	.LFE36:
 208              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 209              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 210              		.align	1
 211              		.global	CapSense_UpdateBaselineNoThreshold
 212              		.code	16
 213              		.thumb_func
 214              		.type	CapSense_UpdateBaselineNoThreshold, %function
 215              	CapSense_UpdateBaselineNoThreshold:
 216              	.LFB37:
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 11


 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 217              		.loc 1 356 0
 218              		.cfi_startproc
 219              	.LVL22:
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 220              		.loc 1 361 0
 221 0000 2D4B     		ldr	r3, .L40
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 222              		.loc 1 356 0
 223 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 224              		.cfi_def_cfa_offset 32
 225              		.cfi_offset 0, -32
 226              		.cfi_offset 1, -28
 227              		.cfi_offset 2, -24
 228              		.cfi_offset 4, -20
 229              		.cfi_offset 5, -16
 230              		.cfi_offset 6, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 233              		.loc 1 362 0
 234 0004 2D4A     		ldr	r2, .L40+4
 235 0006 1B5C     		ldrb	r3, [r3, r0]
 236 0008 0332     		add	r2, r2, #3
 237 000a D35C     		ldrb	r3, [r2, r3]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 238              		.loc 1 356 0
 239 000c 041C     		mov	r4, r0
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 240              		.loc 1 370 0
 241 000e 4200     		lsl	r2, r0, #1
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 242              		.loc 1 373 0
 243 0010 2B48     		ldr	r0, .L40+8
 244              	.LVL23:
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 245              		.loc 1 362 0
 246 0012 0193     		str	r3, [sp, #4]
 247              	.LVL24:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 12


 248              		.loc 1 373 0
 249 0014 0178     		ldrb	r1, [r0]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 250              		.loc 1 370 0
 251 0016 2B4B     		ldr	r3, .L40+12
 252 0018 D35A     		ldrh	r3, [r2, r3]
 253              	.LVL25:
 254              		.loc 1 373 0
 255 001a 0029     		cmp	r1, #0
 256 001c 06D0     		beq	.L21
 257              	.LVL26:
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 258              		.loc 1 394 0
 259 001e 2A49     		ldr	r1, .L40+16
 260              	.LBB8:
 261              	.LBB9:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 13


 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 14


 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 15


 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 16


 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 17


 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 18


 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 19


 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 20


 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 21


 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 22


 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 23


 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 24


1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 25


1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 26


1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 27


1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 28


1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 29


1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 30


1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 31


1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 32


1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 33


1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 34


1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 35


1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 36


1727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 37


1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 38


1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 39


1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 40


1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 41


2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 42


2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found?? */
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 43


2126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 44


2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 45


2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 46


2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 47


2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 48


2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 49


2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 262              		.loc 1 2500 0
 263 0020 555A     		ldrh	r5, [r2, r1]
 264 0022 EB18     		add	r3, r5, r3
 265              	.LVL27:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 266              		.loc 1 2501 0
 267 0024 6D00     		lsl	r5, r5, #1
 268 0026 5B19     		add	r3, r3, r5
 269              	.LVL28:
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 270              		.loc 1 2504 0
 271 0028 9B08     		lsr	r3, r3, #2
 272              	.LVL29:
 273              	.LBE9:
 274              	.LBE8:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 275              		.loc 1 395 0
 276 002a 5352     		strh	r3, [r2, r1]
 277              	.LVL30:
 278              	.L21:
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 279              		.loc 1 421 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 50


 280 002c 274F     		ldr	r7, .L40+20
 281 002e 0026     		mov	r6, #0
 282 0030 B95A     		ldrh	r1, [r7, r2]
 283 0032 8B42     		cmp	r3, r1
 284 0034 05D3     		bcc	.L22
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 285              		.loc 1 423 0
 286 0036 264A     		ldr	r2, .L40+24
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 287              		.loc 1 424 0
 288 0038 5D1A     		sub	r5, r3, r1
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 289              		.loc 1 423 0
 290 003a 1655     		strb	r6, [r2, r4]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 291              		.loc 1 424 0
 292 003c ADB2     		uxth	r5, r5
 293              	.LVL31:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 294              		.loc 1 425 0
 295 003e 0122     		mov	r2, #1
 296 0040 13E0     		b	.L23
 297              	.LVL32:
 298              	.L22:
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 299              		.loc 1 429 0
 300 0042 CD1A     		sub	r5, r1, r3
 301 0044 ADB2     		uxth	r5, r5
 302              	.LVL33:
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 303              		.loc 1 436 0
 304 0046 142D     		cmp	r5, #20
 305 0048 0ED9     		bls	.L30
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 306              		.loc 1 439 0
 307 004a 214F     		ldr	r7, .L40+24
 308 004c 0130     		add	r0, r0, #1
 309 004e 3B5D     		ldrb	r3, [r7, r4]
 310              	.LVL34:
 311 0050 025D     		ldrb	r2, [r0, r4]
 312 0052 9A42     		cmp	r2, r3
 313 0054 04D8     		bhi	.L24
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 314              		.loc 1 441 0
 315 0056 201C     		mov	r0, r4
 316 0058 FFF7FEFF 		bl	CapSense_BaseInit
 317              	.LVL35:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 318              		.loc 1 442 0
 319 005c 3E55     		strb	r6, [r7, r4]
 320 005e 01E0     		b	.L38
 321              	.L24:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 322              		.loc 1 446 0
 323 0060 0133     		add	r3, r3, #1
 324 0062 3B55     		strb	r3, [r7, r4]
 325              	.L38:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 51


 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 326              		.loc 1 430 0
 327 0064 321C     		mov	r2, r6
 328 0066 17E0     		b	.L25
 329              	.LVL36:
 330              	.L30:
 331 0068 321C     		mov	r2, r6
 332              	.LVL37:
 333              	.L23:
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 334              		.loc 1 460 0
 335 006a 019E     		ldr	r6, [sp, #4]
 336 006c B542     		cmp	r5, r6
 337 006e 03D9     		bls	.L26
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 338              		.loc 1 460 0 is_stmt 0 discriminator 1
 339 0070 132D     		cmp	r5, #19
 340 0072 11D8     		bhi	.L25
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 341              		.loc 1 462 0 is_stmt 1
 342 0074 002A     		cmp	r2, #0
 343 0076 0ED1     		bne	.L31
 344              	.L26:
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 345              		.loc 1 468 0
 346 0078 164E     		ldr	r6, .L40+28
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 347              		.loc 1 467 0
 348 007a 0802     		lsl	r0, r1, #8
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 349              		.loc 1 468 0
 350 007c 365D     		ldrb	r6, [r6, r4]
 351 007e 0643     		orr	r6, r0
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 352              		.loc 1 471 0
 353 0080 711A     		sub	r1, r6, r1
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 354              		.loc 1 478 0
 355 0082 1448     		ldr	r0, .L40+28
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 356              		.loc 1 474 0
 357 0084 CB18     		add	r3, r1, r3
 358              	.LVL38:
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 359              		.loc 1 477 0
 360 0086 1E0A     		lsr	r6, r3, #8
 361 0088 6100     		lsl	r1, r4, #1
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 362              		.loc 1 478 0
 363 008a 0355     		strb	r3, [r0, r4]
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 364              		.loc 1 480 0
 365 008c 104B     		ldr	r3, .L40+24
 366              	.LVL39:
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 367              		.loc 1 477 0
 368 008e 7E52     		strh	r6, [r7, r1]
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 52


 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 369              		.loc 1 480 0
 370 0090 0021     		mov	r1, #0
 371 0092 1955     		strb	r1, [r3, r4]
 372 0094 00E0     		b	.L25
 373              	.LVL40:
 374              	.L31:
 375 0096 0122     		mov	r2, #1
 376              	.LVL41:
 377              	.L25:
 378 0098 0C4B     		ldr	r3, .L40+20
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 379              		.loc 1 487 0
 380 009a 019E     		ldr	r6, [sp, #4]
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 381              		.loc 1 493 0
 382 009c 0933     		add	r3, r3, #9
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 383              		.loc 1 487 0
 384 009e B542     		cmp	r5, r6
 385 00a0 06D9     		bls	.L27
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 386              		.loc 1 487 0 is_stmt 0 discriminator 1
 387 00a2 002A     		cmp	r2, #0
 388 00a4 04D0     		beq	.L27
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 389              		.loc 1 493 0 is_stmt 1
 390 00a6 FF22     		mov	r2, #255
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 391              		.loc 1 491 0
 392 00a8 FF2D     		cmp	r5, #255
 393 00aa 02D8     		bhi	.L39
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 394              		.loc 1 497 0
 395 00ac 1D55     		strb	r5, [r3, r4]
 396 00ae 01E0     		b	.L20
 397              	.L27:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 398              		.loc 1 506 0
 399 00b0 0022     		mov	r2, #0
 400              	.L39:
 401 00b2 1A55     		strb	r2, [r3, r4]
 402              	.L20:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 403              		.loc 1 513 0
 404              		@ sp needed
 405              	.LVL42:
 406 00b4 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 407              	.L41:
 408 00b6 C046     		.align	2
 409              	.L40:
 410 00b8 00000000 		.word	CapSense_widgetNumber
 411 00bc 00000000 		.word	.LANCHOR1
 412 00c0 00000000 		.word	.LANCHOR2
 413 00c4 00000000 		.word	CapSense_sensorRaw
 414 00c8 00000000 		.word	CapSense_rawFilterData1
 415 00cc 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 53


 416 00d0 00000000 		.word	CapSense_lowBaselineResetCnt
 417 00d4 06000000 		.word	.LANCHOR0+6
 418              		.cfi_endproc
 419              	.LFE37:
 420              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 421              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 422              		.align	1
 423              		.global	CapSense_UpdateSensorBaseline
 424              		.code	16
 425              		.thumb_func
 426              		.type	CapSense_UpdateSensorBaseline, %function
 427              	CapSense_UpdateSensorBaseline:
 428              	.LFB38:
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 429              		.loc 1 547 0
 430              		.cfi_startproc
 431              	.LVL43:
 432 0000 08B5     		push	{r3, lr}
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 436              		.loc 1 562 0
 437 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 438              	.LVL44:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 439              		.loc 1 568 0
 440              		@ sp needed
 441 0006 08BD     		pop	{r3, pc}
 442              		.cfi_endproc
 443              	.LFE38:
 444              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 445              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 446              		.align	1
 447              		.global	CapSense_UpdateEnabledBaselines
 448              		.code	16
 449              		.thumb_func
 450              		.type	CapSense_UpdateEnabledBaselines, %function
 451              	CapSense_UpdateEnabledBaselines:
 452              	.LFB39:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 453              		.loc 1 601 0
 454              		.cfi_startproc
 455              	.LVL45:
 456 0000 10B5     		push	{r4, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 460              		.loc 1 605 0
 461 0002 0024     		mov	r4, #0
 462              	.LVL46:
 463              	.L46:
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 464              		.loc 1 607 0
 465 0004 0648     		ldr	r0, .L50
 466 0006 211C     		mov	r1, r4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 54


 467 0008 FFF7FEFF 		bl	CapSense_GetBitValue
 468              	.LVL47:
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 469              		.loc 1 609 0
 470 000c 0028     		cmp	r0, #0
 471 000e 02D0     		beq	.L44
 472              	.LVL48:
 473              	.LBB10:
 474              	.LBB11:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 475              		.loc 1 562 0
 476 0010 201C     		mov	r0, r4
 477              	.LVL49:
 478 0012 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 479              	.LVL50:
 480              	.L44:
 481              	.LBE11:
 482              	.LBE10:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 483              		.loc 1 605 0
 484 0016 0134     		add	r4, r4, #1
 485              	.LVL51:
 486 0018 032C     		cmp	r4, #3
 487 001a F3D1     		bne	.L46
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 488              		.loc 1 614 0
 489              		@ sp needed
 490              	.LVL52:
 491 001c 10BD     		pop	{r4, pc}
 492              	.L51:
 493 001e C046     		.align	2
 494              	.L50:
 495 0020 00000000 		.word	CapSense_sensorEnableMask
 496              		.cfi_endproc
 497              	.LFE39:
 498              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 499              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 500              		.align	1
 501              		.global	CapSense_UpdateWidgetBaseline
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_UpdateWidgetBaseline, %function
 505              	CapSense_UpdateWidgetBaseline:
 506              	.LFB40:
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 507              		.loc 1 646 0
 508              		.cfi_startproc
 509              	.LVL53:
 510 0000 38B5     		push	{r3, r4, r5, lr}
 511              		.cfi_def_cfa_offset 16
 512              		.cfi_offset 3, -16
 513              		.cfi_offset 4, -12
 514              		.cfi_offset 5, -8
 515              		.cfi_offset 14, -4
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 516              		.loc 1 657 0
 517 0002 0A4B     		ldr	r3, .L60
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 55


 518 0004 9A1D     		add	r2, r3, #6
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 519              		.loc 1 654 0
 520 0006 0933     		add	r3, r3, #9
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 521              		.loc 1 657 0
 522 0008 145C     		ldrb	r4, [r2, r0]
 523              	.LVL54:
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 524              		.loc 1 654 0
 525 000a 1D5C     		ldrb	r5, [r3, r0]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 526              		.loc 1 660 0
 527 000c 6519     		add	r5, r4, r5
 528              	.LVL55:
 529              	.L53:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 530              		.loc 1 662 0 discriminator 1
 531 000e AC42     		cmp	r4, r5
 532 0010 0AD2     		bcs	.L59
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 533              		.loc 1 664 0
 534 0012 0748     		ldr	r0, .L60+4
 535 0014 211C     		mov	r1, r4
 536 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 537              	.LVL56:
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 538              		.loc 1 666 0
 539 001a 0028     		cmp	r0, #0
 540 001c 02D0     		beq	.L54
 541              	.LVL57:
 542              	.LBB12:
 543              	.LBB13:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 544              		.loc 1 562 0
 545 001e 201C     		mov	r0, r4
 546              	.LVL58:
 547 0020 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 548              	.LVL59:
 549              	.L54:
 550              	.LBE13:
 551              	.LBE12:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 552              		.loc 1 662 0
 553 0024 0134     		add	r4, r4, #1
 554              	.LVL60:
 555 0026 F2E7     		b	.L53
 556              	.L59:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 557              		.loc 1 671 0
 558              		@ sp needed
 559              	.LVL61:
 560              	.LVL62:
 561 0028 38BD     		pop	{r3, r4, r5, pc}
 562              	.L61:
 563 002a C046     		.align	2
 564              	.L60:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 56


 565 002c 00000000 		.word	.LANCHOR1
 566 0030 00000000 		.word	CapSense_sensorEnableMask
 567              		.cfi_endproc
 568              	.LFE40:
 569              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 570              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 571              		.align	1
 572              		.global	CapSense_GetBaselineData
 573              		.code	16
 574              		.thumb_func
 575              		.type	CapSense_GetBaselineData, %function
 576              	CapSense_GetBaselineData:
 577              	.LFB41:
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 578              		.loc 1 695 0
 579              		.cfi_startproc
 580              	.LVL63:
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 581              		.loc 1 696 0
 582 0000 014B     		ldr	r3, .L63
 583 0002 4000     		lsl	r0, r0, #1
 584              	.LVL64:
 585 0004 185A     		ldrh	r0, [r3, r0]
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 586              		.loc 1 697 0
 587              		@ sp needed
 588 0006 7047     		bx	lr
 589              	.L64:
 590              		.align	2
 591              	.L63:
 592 0008 00000000 		.word	.LANCHOR0
 593              		.cfi_endproc
 594              	.LFE41:
 595              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 596              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 597              		.align	1
 598              		.global	CapSense_SetBaselineData
 599              		.code	16
 600              		.thumb_func
 601              		.type	CapSense_SetBaselineData, %function
 602              	CapSense_SetBaselineData:
 603              	.LFB42:
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 604              		.loc 1 722 0
 605              		.cfi_startproc
 606              	.LVL65:
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 607              		.loc 1 723 0
 608 0000 014B     		ldr	r3, .L66
 609 0002 4000     		lsl	r0, r0, #1
 610              	.LVL66:
 611 0004 C152     		strh	r1, [r0, r3]
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 612              		.loc 1 724 0
 613              		@ sp needed
 614 0006 7047     		bx	lr
 615              	.L67:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 57


 616              		.align	2
 617              	.L66:
 618 0008 00000000 		.word	.LANCHOR0
 619              		.cfi_endproc
 620              	.LFE42:
 621              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 622              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 623              		.align	1
 624              		.global	CapSense_GetDiffCountData
 625              		.code	16
 626              		.thumb_func
 627              		.type	CapSense_GetDiffCountData, %function
 628              	CapSense_GetDiffCountData:
 629              	.LFB43:
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 630              		.loc 1 749 0
 631              		.cfi_startproc
 632              	.LVL67:
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 633              		.loc 1 750 0
 634 0000 014B     		ldr	r3, .L69
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 635              		.loc 1 751 0
 636              		@ sp needed
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 637              		.loc 1 750 0
 638 0002 0933     		add	r3, r3, #9
 639 0004 185C     		ldrb	r0, [r3, r0]
 640              	.LVL68:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 641              		.loc 1 751 0
 642 0006 7047     		bx	lr
 643              	.L70:
 644              		.align	2
 645              	.L69:
 646 0008 00000000 		.word	.LANCHOR0
 647              		.cfi_endproc
 648              	.LFE43:
 649              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 650              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 651              		.align	1
 652              		.global	CapSense_SetDiffCountData
 653              		.code	16
 654              		.thumb_func
 655              		.type	CapSense_SetDiffCountData, %function
 656              	CapSense_SetDiffCountData:
 657              	.LFB44:
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 658              		.loc 1 776 0
 659              		.cfi_startproc
 660              	.LVL69:
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 661              		.loc 1 777 0
 662 0000 014B     		ldr	r3, .L72
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 663              		.loc 1 778 0
 664              		@ sp needed
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 58


 777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 665              		.loc 1 777 0
 666 0002 0933     		add	r3, r3, #9
 667 0004 1954     		strb	r1, [r3, r0]
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 668              		.loc 1 778 0
 669 0006 7047     		bx	lr
 670              	.L73:
 671              		.align	2
 672              	.L72:
 673 0008 00000000 		.word	.LANCHOR0
 674              		.cfi_endproc
 675              	.LFE44:
 676              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 677              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 678              		.align	1
 679              		.global	CapSense_GetFingerThreshold
 680              		.code	16
 681              		.thumb_func
 682              		.type	CapSense_GetFingerThreshold, %function
 683              	CapSense_GetFingerThreshold:
 684              	.LFB45:
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 685              		.loc 1 803 0
 686              		.cfi_startproc
 687              	.LVL70:
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 688              		.loc 1 804 0
 689 0000 014B     		ldr	r3, .L75
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 690              		.loc 1 805 0
 691              		@ sp needed
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 692              		.loc 1 804 0
 693 0002 1818     		add	r0, r3, r0
 694              	.LVL71:
 695 0004 007B     		ldrb	r0, [r0, #12]
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 696              		.loc 1 805 0
 697 0006 7047     		bx	lr
 698              	.L76:
 699              		.align	2
 700              	.L75:
 701 0008 00000000 		.word	.LANCHOR1
 702              		.cfi_endproc
 703              	.LFE45:
 704              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 705              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 706              		.align	1
 707              		.global	CapSense_GetNoiseThreshold
 708              		.code	16
 709              		.thumb_func
 710              		.type	CapSense_GetNoiseThreshold, %function
 711              	CapSense_GetNoiseThreshold:
 712              	.LFB46:
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 713              		.loc 1 830 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 59


 714              		.cfi_startproc
 715              	.LVL72:
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 716              		.loc 1 831 0
 717 0000 014B     		ldr	r3, .L78
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 718              		.loc 1 832 0
 719              		@ sp needed
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 720              		.loc 1 831 0
 721 0002 0333     		add	r3, r3, #3
 722 0004 185C     		ldrb	r0, [r3, r0]
 723              	.LVL73:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 724              		.loc 1 832 0
 725 0006 7047     		bx	lr
 726              	.L79:
 727              		.align	2
 728              	.L78:
 729 0008 00000000 		.word	.LANCHOR1
 730              		.cfi_endproc
 731              	.LFE46:
 732              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 733              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 734              		.align	1
 735              		.global	CapSense_GetFingerHysteresis
 736              		.code	16
 737              		.thumb_func
 738              		.type	CapSense_GetFingerHysteresis, %function
 739              	CapSense_GetFingerHysteresis:
 740              	.LFB47:
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 741              		.loc 1 858 0
 742              		.cfi_startproc
 743              	.LVL74:
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 744              		.loc 1 859 0
 745 0000 014B     		ldr	r3, .L81
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 746              		.loc 1 860 0
 747              		@ sp needed
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 748              		.loc 1 859 0
 749 0002 0F33     		add	r3, r3, #15
 750 0004 185C     		ldrb	r0, [r3, r0]
 751              	.LVL75:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 752              		.loc 1 860 0
 753 0006 7047     		bx	lr
 754              	.L82:
 755              		.align	2
 756              	.L81:
 757 0008 00000000 		.word	.LANCHOR1
 758              		.cfi_endproc
 759              	.LFE47:
 760              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 761              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 60


 762              		.align	1
 763              		.global	CapSense_GetNegativeNoiseThreshold
 764              		.code	16
 765              		.thumb_func
 766              		.type	CapSense_GetNegativeNoiseThreshold, %function
 767              	CapSense_GetNegativeNoiseThreshold:
 768              	.LFB48:
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 769              		.loc 1 886 0
 770              		.cfi_startproc
 771              	.LVL76:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 772              		.loc 1 892 0
 773 0000 1420     		mov	r0, #20
 774              	.LVL77:
 775              		@ sp needed
 776 0002 7047     		bx	lr
 777              		.cfi_endproc
 778              	.LFE48:
 779              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 780              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 781              		.align	1
 782              		.global	CapSense_CheckIsSensorActive
 783              		.code	16
 784              		.thumb_func
 785              		.type	CapSense_CheckIsSensorActive, %function
 786              	CapSense_CheckIsSensorActive:
 787              	.LFB49:
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 788              		.loc 1 1106 0
 789              		.cfi_startproc
 790              	.LVL78:
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 791              		.loc 1 1116 0
 792 0000 214B     		ldr	r3, .L90
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 793              		.loc 1 1106 0
 794 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 795              		.cfi_def_cfa_offset 20
 796              		.cfi_offset 4, -20
 797              		.cfi_offset 5, -16
 798              		.cfi_offset 6, -12
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 801              		.loc 1 1118 0
 802 0004 1D5C     		ldrb	r5, [r3, r0]
 803 0006 214B     		ldr	r3, .L90+4
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 804              		.loc 1 1106 0
 805 0008 85B0     		sub	sp, sp, #20
 806              		.cfi_def_cfa_offset 40
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 807              		.loc 1 1118 0
 808 000a 5A19     		add	r2, r3, r5
 809 000c 127B     		ldrb	r2, [r2, #12]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 61


 810              		.loc 1 1126 0
 811 000e 204E     		ldr	r6, .L90+8
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 812              		.loc 1 1118 0
 813 0010 0192     		str	r2, [sp, #4]
 814              	.LVL79:
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 815              		.loc 1 1119 0
 816 0012 1A1C     		mov	r2, r3
 817 0014 0F32     		add	r2, r2, #15
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 818              		.loc 1 1126 0
 819 0016 371C     		mov	r7, r6
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 820              		.loc 1 1106 0
 821 0018 041C     		mov	r4, r0
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 822              		.loc 1 1119 0
 823 001a 525D     		ldrb	r2, [r2, r5]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 824              		.loc 1 1120 0
 825 001c 5B5D     		ldrb	r3, [r3, r5]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 826              		.loc 1 1126 0
 827 001e 1037     		add	r7, r7, #16
 828 0020 381C     		mov	r0, r7
 829              	.LVL80:
 830 0022 211C     		mov	r1, r4
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 831              		.loc 1 1119 0
 832 0024 0292     		str	r2, [sp, #8]
 833              	.LVL81:
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 834              		.loc 1 1120 0
 835 0026 0393     		str	r3, [sp, #12]
 836              	.LVL82:
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 837              		.loc 1 1126 0
 838 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 839              	.LVL83:
 840 002c 331C     		mov	r3, r6
 841 002e 0933     		add	r3, r3, #9
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 842              		.loc 1 1129 0
 843 0030 1A5D     		ldrb	r2, [r3, r4]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 844              		.loc 1 1126 0
 845 0032 0028     		cmp	r0, #0
 846 0034 0BD0     		beq	.L85
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 847              		.loc 1 1129 0
 848 0036 0198     		ldr	r0, [sp, #4]
 849 0038 0299     		ldr	r1, [sp, #8]
 850 003a 431A     		sub	r3, r0, r1
 851 003c 9A42     		cmp	r2, r3
 852 003e 1ADA     		bge	.L87
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 62


 853              		.loc 1 1131 0
 854 0040 381C     		mov	r0, r7
 855 0042 211C     		mov	r1, r4
 856 0044 0022     		mov	r2, #0
 857 0046 FFF7FEFF 		bl	CapSense_SetBitValue
 858              	.LVL84:
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 859              		.loc 1 1133 0
 860 004a 7519     		add	r5, r6, r5
 861 004c 11E0     		b	.L88
 862              	.L85:
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 863              		.loc 1 1139 0
 864 004e 0198     		ldr	r0, [sp, #4]
 865 0050 0299     		ldr	r1, [sp, #8]
 866 0052 7519     		add	r5, r6, r5
 867 0054 4318     		add	r3, r0, r1
 868 0056 9A42     		cmp	r2, r3
 869 0058 0BDB     		blt	.L88
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 870              		.loc 1 1141 0
 871 005a 2B7B     		ldrb	r3, [r5, #12]
 872 005c 013B     		sub	r3, r3, #1
 873 005e DBB2     		uxtb	r3, r3
 874 0060 2B73     		strb	r3, [r5, #12]
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 875              		.loc 1 1143 0
 876 0062 002B     		cmp	r3, #0
 877 0064 07D1     		bne	.L87
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 878              		.loc 1 1145 0
 879 0066 381C     		mov	r0, r7
 880 0068 211C     		mov	r1, r4
 881 006a 0122     		mov	r2, #1
 882 006c FFF7FEFF 		bl	CapSense_SetBitValue
 883              	.LVL85:
 884 0070 01E0     		b	.L87
 885              	.L88:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 886              		.loc 1 1151 0
 887 0072 039B     		ldr	r3, [sp, #12]
 888 0074 2B73     		strb	r3, [r5, #12]
 889              	.L87:
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 890              		.loc 1 1155 0
 891 0076 301C     		mov	r0, r6
 892 0078 211C     		mov	r1, r4
 893 007a 1030     		add	r0, r0, #16
 894 007c FFF7FEFF 		bl	CapSense_GetBitValue
 895              	.LVL86:
 896 0080 431E     		sub	r3, r0, #1
 897 0082 9841     		sbc	r0, r0, r3
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 898              		.loc 1 1156 0
 899 0084 05B0     		add	sp, sp, #20
 900              		@ sp needed
 901              	.LVL87:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 63


 902 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 903              	.L91:
 904              		.align	2
 905              	.L90:
 906 0088 00000000 		.word	CapSense_widgetNumber
 907 008c 00000000 		.word	.LANCHOR1
 908 0090 00000000 		.word	.LANCHOR0
 909              		.cfi_endproc
 910              	.LFE49:
 911              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 912              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 913              		.align	1
 914              		.global	CapSense_CheckIsWidgetActive
 915              		.code	16
 916              		.thumb_func
 917              		.type	CapSense_CheckIsWidgetActive, %function
 918              	CapSense_CheckIsWidgetActive:
 919              	.LFB50:
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 920              		.loc 1 1188 0
 921              		.cfi_startproc
 922              	.LVL88:
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 923              		.loc 1 1189 0
 924 0000 094B     		ldr	r3, .L97
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 925              		.loc 1 1188 0
 926 0002 70B5     		push	{r4, r5, r6, lr}
 927              		.cfi_def_cfa_offset 16
 928              		.cfi_offset 4, -16
 929              		.cfi_offset 5, -12
 930              		.cfi_offset 6, -8
 931              		.cfi_offset 14, -4
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 932              		.loc 1 1189 0
 933 0004 9A1D     		add	r2, r3, #6
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 934              		.loc 1 1190 0
 935 0006 0933     		add	r3, r3, #9
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 936              		.loc 1 1189 0
 937 0008 145C     		ldrb	r4, [r2, r0]
 938              	.LVL89:
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 939              		.loc 1 1190 0
 940 000a 1E5C     		ldrb	r6, [r3, r0]
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 941              		.loc 1 1191 0
 942 000c 0025     		mov	r5, #0
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 943              		.loc 1 1190 0
 944 000e 3619     		add	r6, r6, r4
 945              	.LVL90:
 946              	.L95:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 947              		.loc 1 1196 0
 948 0010 201C     		mov	r0, r4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 64


 949 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 950              	.LVL91:
 951 0016 0028     		cmp	r0, #0
 952 0018 00D0     		beq	.L93
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 953              		.loc 1 1198 0
 954 001a 0125     		mov	r5, #1
 955              	.LVL92:
 956              	.L93:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 957              		.loc 1 1200 0
 958 001c 0134     		add	r4, r4, #1
 959              	.LVL93:
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 960              		.loc 1 1202 0
 961 001e B442     		cmp	r4, r6
 962 0020 F6D3     		bcc	.L95
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 963              		.loc 1 1207 0
 964 0022 281C     		mov	r0, r5
 965              		@ sp needed
 966              	.LVL94:
 967              	.LVL95:
 968              	.LVL96:
 969 0024 70BD     		pop	{r4, r5, r6, pc}
 970              	.L98:
 971 0026 C046     		.align	2
 972              	.L97:
 973 0028 00000000 		.word	.LANCHOR1
 974              		.cfi_endproc
 975              	.LFE50:
 976              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 977              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 978              		.align	1
 979              		.global	CapSense_CheckIsAnyWidgetActive
 980              		.code	16
 981              		.thumb_func
 982              		.type	CapSense_CheckIsAnyWidgetActive, %function
 983              	CapSense_CheckIsAnyWidgetActive:
 984              	.LFB51:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 985              		.loc 1 1234 0
 986              		.cfi_startproc
 987              	.LVL97:
 988 0000 38B5     		push	{r3, r4, r5, lr}
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 3, -16
 991              		.cfi_offset 4, -12
 992              		.cfi_offset 5, -8
 993              		.cfi_offset 14, -4
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 994              		.loc 1 1237 0
 995 0002 0025     		mov	r5, #0
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 996              		.loc 1 1239 0
 997 0004 2C1C     		mov	r4, r5
 998              	.LVL98:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 65


 999              	.L102:
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1000              		.loc 1 1241 0
 1001 0006 201C     		mov	r0, r4
 1002 0008 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1003              	.LVL99:
 1004 000c 0028     		cmp	r0, #0
 1005 000e 00D0     		beq	.L100
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1006              		.loc 1 1243 0
 1007 0010 0125     		mov	r5, #1
 1008              	.LVL100:
 1009              	.L100:
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1010              		.loc 1 1239 0
 1011 0012 0134     		add	r4, r4, #1
 1012              	.LVL101:
 1013 0014 032C     		cmp	r4, #3
 1014 0016 F6D1     		bne	.L102
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1015              		.loc 1 1250 0
 1016 0018 281C     		mov	r0, r5
 1017              		@ sp needed
 1018              	.LVL102:
 1019              	.LVL103:
 1020 001a 38BD     		pop	{r3, r4, r5, pc}
 1021              		.cfi_endproc
 1022              	.LFE51:
 1023              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1024              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1025              		.align	1
 1026              		.global	CapSense_EnableWidget
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CapSense_EnableWidget, %function
 1030              	CapSense_EnableWidget:
 1031              	.LFB52:
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1032              		.loc 1 1281 0
 1033              		.cfi_startproc
 1034              	.LVL104:
 1035 0000 38B5     		push	{r3, r4, r5, lr}
 1036              		.cfi_def_cfa_offset 16
 1037              		.cfi_offset 3, -16
 1038              		.cfi_offset 4, -12
 1039              		.cfi_offset 5, -8
 1040              		.cfi_offset 14, -4
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1041              		.loc 1 1283 0
 1042 0002 084B     		ldr	r3, .L107
 1043 0004 9A1D     		add	r2, r3, #6
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1044              		.loc 1 1284 0
 1045 0006 0933     		add	r3, r3, #9
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1046              		.loc 1 1283 0
 1047 0008 145C     		ldrb	r4, [r2, r0]
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 66


 1048              	.LVL105:
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1049              		.loc 1 1284 0
 1050 000a 1D5C     		ldrb	r5, [r3, r0]
 1051 000c 6519     		add	r5, r4, r5
 1052 000e EDB2     		uxtb	r5, r5
 1053              	.LVL106:
 1054              	.L106:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1055              		.loc 1 1289 0 discriminator 1
 1056 0010 211C     		mov	r1, r4
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1057              		.loc 1 1290 0 discriminator 1
 1058 0012 0134     		add	r4, r4, #1
 1059              	.LVL107:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1060              		.loc 1 1289 0 discriminator 1
 1061 0014 0448     		ldr	r0, .L107+4
 1062 0016 0122     		mov	r2, #1
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1063              		.loc 1 1290 0 discriminator 1
 1064 0018 E4B2     		uxtb	r4, r4
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1065              		.loc 1 1289 0 discriminator 1
 1066 001a FFF7FEFF 		bl	CapSense_SetBitValue
 1067              	.LVL108:
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1068              		.loc 1 1292 0 discriminator 1
 1069 001e AC42     		cmp	r4, r5
 1070 0020 F6D3     		bcc	.L106
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1071              		.loc 1 1293 0
 1072              		@ sp needed
 1073              	.LVL109:
 1074              	.LVL110:
 1075 0022 38BD     		pop	{r3, r4, r5, pc}
 1076              	.L108:
 1077              		.align	2
 1078              	.L107:
 1079 0024 00000000 		.word	.LANCHOR1
 1080 0028 00000000 		.word	CapSense_sensorEnableMask
 1081              		.cfi_endproc
 1082              	.LFE52:
 1083              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1084              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1085              		.align	1
 1086              		.global	CapSense_DisableWidget
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CapSense_DisableWidget, %function
 1090              	CapSense_DisableWidget:
 1091              	.LFB53:
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1092              		.loc 1 1324 0
 1093              		.cfi_startproc
 1094              	.LVL111:
 1095 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 67


 1096              		.cfi_def_cfa_offset 16
 1097              		.cfi_offset 3, -16
 1098              		.cfi_offset 4, -12
 1099              		.cfi_offset 5, -8
 1100              		.cfi_offset 14, -4
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1101              		.loc 1 1325 0
 1102 0002 084B     		ldr	r3, .L112
 1103 0004 9A1D     		add	r2, r3, #6
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1104              		.loc 1 1326 0
 1105 0006 0933     		add	r3, r3, #9
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1106              		.loc 1 1325 0
 1107 0008 145C     		ldrb	r4, [r2, r0]
 1108              	.LVL112:
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1109              		.loc 1 1326 0
 1110 000a 1D5C     		ldrb	r5, [r3, r0]
 1111 000c 6519     		add	r5, r4, r5
 1112 000e EDB2     		uxtb	r5, r5
 1113              	.LVL113:
 1114              	.L111:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1115              		.loc 1 1332 0 discriminator 1
 1116 0010 211C     		mov	r1, r4
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1117              		.loc 1 1333 0 discriminator 1
 1118 0012 0134     		add	r4, r4, #1
 1119              	.LVL114:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1120              		.loc 1 1332 0 discriminator 1
 1121 0014 0448     		ldr	r0, .L112+4
 1122 0016 0022     		mov	r2, #0
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1123              		.loc 1 1333 0 discriminator 1
 1124 0018 E4B2     		uxtb	r4, r4
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1125              		.loc 1 1332 0 discriminator 1
 1126 001a FFF7FEFF 		bl	CapSense_SetBitValue
 1127              	.LVL115:
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1128              		.loc 1 1335 0 discriminator 1
 1129 001e AC42     		cmp	r4, r5
 1130 0020 F6D3     		bcc	.L111
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1131              		.loc 1 1336 0
 1132              		@ sp needed
 1133              	.LVL116:
 1134              	.LVL117:
 1135 0022 38BD     		pop	{r3, r4, r5, pc}
 1136              	.L113:
 1137              		.align	2
 1138              	.L112:
 1139 0024 00000000 		.word	.LANCHOR1
 1140 0028 00000000 		.word	CapSense_sensorEnableMask
 1141              		.cfi_endproc
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 68


 1142              	.LFE53:
 1143              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1144              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1145              		.align	1
 1146              		.global	CapSense_IIR4Filter
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	CapSense_IIR4Filter, %function
 1150              	CapSense_IIR4Filter:
 1151              	.LFB54:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1152              		.loc 1 2496 0
 1153              		.cfi_startproc
 1154              	.LVL118:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1155              		.loc 1 2501 0
 1156 0000 4B00     		lsl	r3, r1, #1
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1157              		.loc 1 2500 0
 1158 0002 C018     		add	r0, r0, r3
 1159              	.LVL119:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1160              		.loc 1 2501 0
 1161 0004 4018     		add	r0, r0, r1
 1162              	.LVL120:
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1163              		.loc 1 2502 0
 1164 0006 8008     		lsr	r0, r0, #2
 1165              	.LVL121:
 1166              		.loc 1 2504 0
 1167 0008 80B2     		uxth	r0, r0
 1168              	.LVL122:
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1169              		.loc 1 2505 0
 1170              		@ sp needed
 1171 000a 7047     		bx	lr
 1172              		.cfi_endproc
 1173              	.LFE54:
 1174              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1175              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1176              		.align	1
 1177              		.global	CapSense_GetWidgetNumber
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	CapSense_GetWidgetNumber, %function
 1181              	CapSense_GetWidgetNumber:
 1182              	.LFB55:
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 69


2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 70


2573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 71


2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 72


2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1183              		.loc 1 2729 0
 1184              		.cfi_startproc
 1185              	.LVL123:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1186              		.loc 1 2730 0
 1187 0000 014B     		ldr	r3, .L116
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1188              		.loc 1 2731 0
 1189              		@ sp needed
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1190              		.loc 1 2730 0
 1191 0002 185C     		ldrb	r0, [r3, r0]
 1192              	.LVL124:
 1193              		.loc 1 2731 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 73


 1194 0004 7047     		bx	lr
 1195              	.L117:
 1196 0006 C046     		.align	2
 1197              	.L116:
 1198 0008 00000000 		.word	CapSense_widgetNumber
 1199              		.cfi_endproc
 1200              	.LFE55:
 1201              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1202              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1203              		.align	1
 1204              		.global	CapSense_GetLowBaselineReset
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	CapSense_GetLowBaselineReset, %function
 1208              	CapSense_GetLowBaselineReset:
 1209              	.LFB56:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1210              		.loc 1 2755 0
 1211              		.cfi_startproc
 1212              	.LVL125:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1213              		.loc 1 2756 0
 1214 0000 014B     		ldr	r3, .L119
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1215              		.loc 1 2757 0
 1216              		@ sp needed
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1217              		.loc 1 2756 0
 1218 0002 0133     		add	r3, r3, #1
 1219 0004 185C     		ldrb	r0, [r3, r0]
 1220              	.LVL126:
 1221              		.loc 1 2757 0
 1222 0006 7047     		bx	lr
 1223              	.L120:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 74


 1224              		.align	2
 1225              	.L119:
 1226 0008 00000000 		.word	.LANCHOR2
 1227              		.cfi_endproc
 1228              	.LFE56:
 1229              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1230              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1231              		.align	1
 1232              		.global	CapSense_GetDebounce
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	CapSense_GetDebounce, %function
 1236              	CapSense_GetDebounce:
 1237              	.LFB57:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1238              		.loc 1 2781 0
 1239              		.cfi_startproc
 1240              	.LVL127:
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1241              		.loc 1 2782 0
 1242 0000 014B     		ldr	r3, .L122
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1243              		.loc 1 2783 0
 1244              		@ sp needed
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1245              		.loc 1 2782 0
 1246 0002 185C     		ldrb	r0, [r3, r0]
 1247              	.LVL128:
 1248              		.loc 1 2783 0
 1249 0004 7047     		bx	lr
 1250              	.L123:
 1251 0006 C046     		.align	2
 1252              	.L122:
 1253 0008 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 75


 1254              		.cfi_endproc
 1255              	.LFE57:
 1256              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1257              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1258              		.align	1
 1259              		.global	CapSense_EnableRawDataFilters
 1260              		.code	16
 1261              		.thumb_func
 1262              		.type	CapSense_EnableRawDataFilters, %function
 1263              	CapSense_EnableRawDataFilters:
 1264              	.LFB58:
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1265              		.loc 1 2807 0
 1266              		.cfi_startproc
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1267              		.loc 1 2808 0
 1268 0000 014B     		ldr	r3, .L125
 1269 0002 0122     		mov	r2, #1
 1270 0004 1A70     		strb	r2, [r3]
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1271              		.loc 1 2809 0
 1272              		@ sp needed
 1273 0006 7047     		bx	lr
 1274              	.L126:
 1275              		.align	2
 1276              	.L125:
 1277 0008 00000000 		.word	.LANCHOR2
 1278              		.cfi_endproc
 1279              	.LFE58:
 1280              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1281              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1282              		.align	1
 1283              		.global	CapSense_DisableRawDataFilters
 1284              		.code	16
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 76


 1285              		.thumb_func
 1286              		.type	CapSense_DisableRawDataFilters, %function
 1287              	CapSense_DisableRawDataFilters:
 1288              	.LFB59:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1289              		.loc 1 2832 0
 1290              		.cfi_startproc
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1291              		.loc 1 2833 0
 1292 0000 014B     		ldr	r3, .L128
 1293 0002 0022     		mov	r2, #0
 1294 0004 1A70     		strb	r2, [r3]
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1295              		.loc 1 2834 0
 1296              		@ sp needed
 1297 0006 7047     		bx	lr
 1298              	.L129:
 1299              		.align	2
 1300              	.L128:
 1301 0008 00000000 		.word	.LANCHOR2
 1302              		.cfi_endproc
 1303              	.LFE59:
 1304              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1305              		.global	CapSense_numberOfSensors
 1306              		.global	CapSense_rawDataIndex
 1307              		.global	CapSense_debounce
 1308              		.global	CapSense_hysteresis
 1309              		.global	CapSense_noiseThreshold
 1310              		.global	CapSense_fingerThreshold
 1311              		.global	CapSense_enableRawFilters
 1312              		.global	CapSense_lowBaselineReset
 1313              		.comm	CapSense_lowBaselineResetCnt,3,1
 1314              		.global	CapSense_sensorOnMask
 1315              		.global	CapSense_sensorSignal
 1316              		.global	CapSense_sensorBaselineLow
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 77


 1317              		.global	CapSense_sensorBaseline
 1318              		.comm	CapSense_rawFilterData1,6,2
 1319              		.section	.rodata
 1320              		.set	.LANCHOR1,. + 0
 1321              		.type	CapSense_debounce, %object
 1322              		.size	CapSense_debounce, 3
 1323              	CapSense_debounce:
 1324 0000 05       		.byte	5
 1325 0001 05       		.byte	5
 1326 0002 05       		.byte	5
 1327              		.type	CapSense_noiseThreshold, %object
 1328              		.size	CapSense_noiseThreshold, 3
 1329              	CapSense_noiseThreshold:
 1330 0003 28       		.byte	40
 1331 0004 28       		.byte	40
 1332 0005 28       		.byte	40
 1333              		.type	CapSense_rawDataIndex, %object
 1334              		.size	CapSense_rawDataIndex, 3
 1335              	CapSense_rawDataIndex:
 1336 0006 00       		.byte	0
 1337 0007 01       		.byte	1
 1338 0008 02       		.byte	2
 1339              		.type	CapSense_numberOfSensors, %object
 1340              		.size	CapSense_numberOfSensors, 3
 1341              	CapSense_numberOfSensors:
 1342 0009 01       		.byte	1
 1343 000a 01       		.byte	1
 1344 000b 01       		.byte	1
 1345              		.type	CapSense_fingerThreshold, %object
 1346              		.size	CapSense_fingerThreshold, 3
 1347              	CapSense_fingerThreshold:
 1348 000c 82       		.byte	-126
 1349 000d 82       		.byte	-126
 1350 000e 82       		.byte	-126
 1351              		.type	CapSense_hysteresis, %object
 1352              		.size	CapSense_hysteresis, 3
 1353              	CapSense_hysteresis:
 1354 000f 0A       		.byte	10
 1355 0010 0A       		.byte	10
 1356 0011 0A       		.byte	10
 1357              		.data
 1358              		.set	.LANCHOR2,. + 0
 1359              		.type	CapSense_enableRawFilters, %object
 1360              		.size	CapSense_enableRawFilters, 1
 1361              	CapSense_enableRawFilters:
 1362 0000 01       		.byte	1
 1363              		.type	CapSense_lowBaselineReset, %object
 1364              		.size	CapSense_lowBaselineReset, 3
 1365              	CapSense_lowBaselineReset:
 1366 0001 05       		.byte	5
 1367 0002 05       		.byte	5
 1368 0003 05       		.byte	5
 1369              		.bss
 1370              		.align	1
 1371              		.set	.LANCHOR0,. + 0
 1372              		.type	CapSense_sensorBaseline, %object
 1373              		.size	CapSense_sensorBaseline, 6
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 78


 1374              	CapSense_sensorBaseline:
 1375 0000 00000000 		.space	6
 1375      0000
 1376              		.type	CapSense_sensorBaselineLow, %object
 1377              		.size	CapSense_sensorBaselineLow, 3
 1378              	CapSense_sensorBaselineLow:
 1379 0006 000000   		.space	3
 1380              		.type	CapSense_sensorSignal, %object
 1381              		.size	CapSense_sensorSignal, 3
 1382              	CapSense_sensorSignal:
 1383 0009 000000   		.space	3
 1384              		.type	CapSense_debounceCounter, %object
 1385              		.size	CapSense_debounceCounter, 4
 1386              	CapSense_debounceCounter:
 1387 000c 00000000 		.space	4
 1388              		.type	CapSense_sensorOnMask, %object
 1389              		.size	CapSense_sensorOnMask, 1
 1390              	CapSense_sensorOnMask:
 1391 0010 00       		.space	1
 1392 0011 00       		.text
 1393              	.Letext0:
 1394              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1395              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1396              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1397              		.section	.debug_info,"",%progbits
 1398              	.Ldebug_info0:
 1399 0000 CB0A0000 		.4byte	0xacb
 1400 0004 0400     		.2byte	0x4
 1401 0006 00000000 		.4byte	.Ldebug_abbrev0
 1402 000a 04       		.byte	0x4
 1403 000b 01       		.uleb128 0x1
 1404 000c 9B050000 		.4byte	.LASF83
 1405 0010 01       		.byte	0x1
 1406 0011 17030000 		.4byte	.LASF84
 1407 0015 34060000 		.4byte	.LASF85
 1408 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1409 001d 00000000 		.4byte	0
 1410 0021 00000000 		.4byte	.Ldebug_line0
 1411 0025 02       		.uleb128 0x2
 1412 0026 01       		.byte	0x1
 1413 0027 06       		.byte	0x6
 1414 0028 4E010000 		.4byte	.LASF0
 1415 002c 02       		.uleb128 0x2
 1416 002d 01       		.byte	0x1
 1417 002e 08       		.byte	0x8
 1418 002f 87040000 		.4byte	.LASF1
 1419 0033 02       		.uleb128 0x2
 1420 0034 02       		.byte	0x2
 1421 0035 05       		.byte	0x5
 1422 0036 DD040000 		.4byte	.LASF2
 1423 003a 02       		.uleb128 0x2
 1424 003b 02       		.byte	0x2
 1425 003c 07       		.byte	0x7
 1426 003d C0020000 		.4byte	.LASF3
 1427 0041 02       		.uleb128 0x2
 1428 0042 04       		.byte	0x4
 1429 0043 05       		.byte	0x5
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 79


 1430 0044 99010000 		.4byte	.LASF4
 1431 0048 02       		.uleb128 0x2
 1432 0049 04       		.byte	0x4
 1433 004a 07       		.byte	0x7
 1434 004b 6B020000 		.4byte	.LASF5
 1435 004f 02       		.uleb128 0x2
 1436 0050 08       		.byte	0x8
 1437 0051 05       		.byte	0x5
 1438 0052 40010000 		.4byte	.LASF6
 1439 0056 02       		.uleb128 0x2
 1440 0057 08       		.byte	0x8
 1441 0058 07       		.byte	0x7
 1442 0059 B4000000 		.4byte	.LASF7
 1443 005d 03       		.uleb128 0x3
 1444 005e 04       		.byte	0x4
 1445 005f 05       		.byte	0x5
 1446 0060 696E7400 		.ascii	"int\000"
 1447 0064 02       		.uleb128 0x2
 1448 0065 04       		.byte	0x4
 1449 0066 07       		.byte	0x7
 1450 0067 5E020000 		.4byte	.LASF8
 1451 006b 04       		.uleb128 0x4
 1452 006c C2010000 		.4byte	.LASF9
 1453 0070 02       		.byte	0x2
 1454 0071 A1       		.byte	0xa1
 1455 0072 2C000000 		.4byte	0x2c
 1456 0076 04       		.uleb128 0x4
 1457 0077 00000000 		.4byte	.LASF10
 1458 007b 02       		.byte	0x2
 1459 007c A2       		.byte	0xa2
 1460 007d 3A000000 		.4byte	0x3a
 1461 0081 04       		.uleb128 0x4
 1462 0082 1E020000 		.4byte	.LASF11
 1463 0086 02       		.byte	0x2
 1464 0087 A3       		.byte	0xa3
 1465 0088 48000000 		.4byte	0x48
 1466 008c 02       		.uleb128 0x2
 1467 008d 04       		.byte	0x4
 1468 008e 04       		.byte	0x4
 1469 008f 3B040000 		.4byte	.LASF12
 1470 0093 02       		.uleb128 0x2
 1471 0094 08       		.byte	0x8
 1472 0095 04       		.byte	0x4
 1473 0096 01020000 		.4byte	.LASF13
 1474 009a 02       		.uleb128 0x2
 1475 009b 01       		.byte	0x1
 1476 009c 08       		.byte	0x8
 1477 009d 7C050000 		.4byte	.LASF14
 1478 00a1 02       		.uleb128 0x2
 1479 00a2 04       		.byte	0x4
 1480 00a3 07       		.byte	0x7
 1481 00a4 63030000 		.4byte	.LASF15
 1482 00a8 05       		.uleb128 0x5
 1483 00a9 04       		.byte	0x4
 1484 00aa 6B000000 		.4byte	0x6b
 1485 00ae 05       		.uleb128 0x5
 1486 00af 04       		.byte	0x4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 80


 1487 00b0 B4000000 		.4byte	0xb4
 1488 00b4 06       		.uleb128 0x6
 1489 00b5 6B000000 		.4byte	0x6b
 1490 00b9 07       		.uleb128 0x7
 1491 00ba 36020000 		.4byte	.LASF81
 1492 00be 01       		.byte	0x1
 1493 00bf BF09     		.2byte	0x9bf
 1494 00c1 76000000 		.4byte	0x76
 1495 00c5 01       		.byte	0x1
 1496 00c6 ED000000 		.4byte	0xed
 1497 00ca 08       		.uleb128 0x8
 1498 00cb 783100   		.ascii	"x1\000"
 1499 00ce 01       		.byte	0x1
 1500 00cf BF09     		.2byte	0x9bf
 1501 00d1 76000000 		.4byte	0x76
 1502 00d5 08       		.uleb128 0x8
 1503 00d6 783200   		.ascii	"x2\000"
 1504 00d9 01       		.byte	0x1
 1505 00da BF09     		.2byte	0x9bf
 1506 00dc 76000000 		.4byte	0x76
 1507 00e0 09       		.uleb128 0x9
 1508 00e1 746D7000 		.ascii	"tmp\000"
 1509 00e5 01       		.byte	0x1
 1510 00e6 C109     		.2byte	0x9c1
 1511 00e8 81000000 		.4byte	0x81
 1512 00ec 00       		.byte	0
 1513 00ed 0A       		.uleb128 0xa
 1514 00ee F4020000 		.4byte	.LASF79
 1515 00f2 01       		.byte	0x1
 1516 00f3 2202     		.2byte	0x222
 1517 00f5 01       		.byte	0x1
 1518 00f6 07010000 		.4byte	0x107
 1519 00fa 0B       		.uleb128 0xb
 1520 00fb D3020000 		.4byte	.LASF16
 1521 00ff 01       		.byte	0x1
 1522 0100 2202     		.2byte	0x222
 1523 0102 81000000 		.4byte	0x81
 1524 0106 00       		.byte	0
 1525 0107 0C       		.uleb128 0xc
 1526 0108 FE040000 		.4byte	.LASF17
 1527 010c 01       		.byte	0x1
 1528 010d 8E       		.byte	0x8e
 1529 010e 00000000 		.4byte	.LFB33
 1530 0112 40000000 		.4byte	.LFE33-.LFB33
 1531 0116 01       		.uleb128 0x1
 1532 0117 9C       		.byte	0x9c
 1533 0118 3B010000 		.4byte	0x13b
 1534 011c 0D       		.uleb128 0xd
 1535 011d D3020000 		.4byte	.LASF16
 1536 0121 01       		.byte	0x1
 1537 0122 8E       		.byte	0x8e
 1538 0123 81000000 		.4byte	0x81
 1539 0127 00000000 		.4byte	.LLST0
 1540 012b 0E       		.uleb128 0xe
 1541 012c E7040000 		.4byte	.LASF20
 1542 0130 01       		.byte	0x1
 1543 0131 92       		.byte	0x92
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 81


 1544 0132 6B000000 		.4byte	0x6b
 1545 0136 21000000 		.4byte	.LLST1
 1546 013a 00       		.byte	0
 1547 013b 0C       		.uleb128 0xc
 1548 013c 82030000 		.4byte	.LASF18
 1549 0140 01       		.byte	0x1
 1550 0141 DA       		.byte	0xda
 1551 0142 00000000 		.4byte	.LFB34
 1552 0146 18000000 		.4byte	.LFE34-.LFB34
 1553 014a 01       		.uleb128 0x1
 1554 014b 9C       		.byte	0x9c
 1555 014c 8D010000 		.4byte	0x18d
 1556 0150 0D       		.uleb128 0xd
 1557 0151 D3020000 		.4byte	.LASF16
 1558 0155 01       		.byte	0x1
 1559 0156 DA       		.byte	0xda
 1560 0157 81000000 		.4byte	0x81
 1561 015b 5C000000 		.4byte	.LLST2
 1562 015f 0F       		.uleb128 0xf
 1563 0160 08000000 		.4byte	.LVL6
 1564 0164 7A0A0000 		.4byte	0xa7a
 1565 0168 73010000 		.4byte	0x173
 1566 016c 10       		.uleb128 0x10
 1567 016d 01       		.uleb128 0x1
 1568 016e 50       		.byte	0x50
 1569 016f 02       		.uleb128 0x2
 1570 0170 74       		.byte	0x74
 1571 0171 00       		.sleb128 0
 1572 0172 00       		.byte	0
 1573 0173 11       		.uleb128 0x11
 1574 0174 0C000000 		.4byte	.LVL7
 1575 0178 8B0A0000 		.4byte	0xa8b
 1576 017c 12       		.uleb128 0x12
 1577 017d 16000000 		.4byte	.LVL8
 1578 0181 07010000 		.4byte	0x107
 1579 0185 10       		.uleb128 0x10
 1580 0186 01       		.uleb128 0x1
 1581 0187 50       		.byte	0x50
 1582 0188 02       		.uleb128 0x2
 1583 0189 74       		.byte	0x74
 1584 018a 00       		.sleb128 0
 1585 018b 00       		.byte	0
 1586 018c 00       		.byte	0
 1587 018d 0C       		.uleb128 0xc
 1588 018e 95040000 		.4byte	.LASF19
 1589 0192 01       		.byte	0x1
 1590 0193 FF       		.byte	0xff
 1591 0194 00000000 		.4byte	.LFB35
 1592 0198 16000000 		.4byte	.LFE35-.LFB35
 1593 019c 01       		.uleb128 0x1
 1594 019d 9C       		.byte	0x9c
 1595 019e E6010000 		.4byte	0x1e6
 1596 01a2 13       		.uleb128 0x13
 1597 01a3 6900     		.ascii	"i\000"
 1598 01a5 01       		.byte	0x1
 1599 01a6 0101     		.2byte	0x101
 1600 01a8 81000000 		.4byte	0x81
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 82


 1601 01ac 88000000 		.4byte	.LLST3
 1602 01b0 0F       		.uleb128 0xf
 1603 01b1 08000000 		.4byte	.LVL11
 1604 01b5 3B010000 		.4byte	0x13b
 1605 01b9 C3010000 		.4byte	0x1c3
 1606 01bd 10       		.uleb128 0x10
 1607 01be 01       		.uleb128 0x1
 1608 01bf 50       		.byte	0x50
 1609 01c0 01       		.uleb128 0x1
 1610 01c1 30       		.byte	0x30
 1611 01c2 00       		.byte	0
 1612 01c3 0F       		.uleb128 0xf
 1613 01c4 0E000000 		.4byte	.LVL12
 1614 01c8 3B010000 		.4byte	0x13b
 1615 01cc D6010000 		.4byte	0x1d6
 1616 01d0 10       		.uleb128 0x10
 1617 01d1 01       		.uleb128 0x1
 1618 01d2 50       		.byte	0x50
 1619 01d3 01       		.uleb128 0x1
 1620 01d4 31       		.byte	0x31
 1621 01d5 00       		.byte	0
 1622 01d6 12       		.uleb128 0x12
 1623 01d7 14000000 		.4byte	.LVL13
 1624 01db 3B010000 		.4byte	0x13b
 1625 01df 10       		.uleb128 0x10
 1626 01e0 01       		.uleb128 0x1
 1627 01e1 50       		.byte	0x50
 1628 01e2 01       		.uleb128 0x1
 1629 01e3 32       		.byte	0x32
 1630 01e4 00       		.byte	0
 1631 01e5 00       		.byte	0
 1632 01e6 14       		.uleb128 0x14
 1633 01e7 FC000000 		.4byte	.LASF21
 1634 01eb 01       		.byte	0x1
 1635 01ec 2201     		.2byte	0x122
 1636 01ee 00000000 		.4byte	.LFB36
 1637 01f2 30000000 		.4byte	.LFE36-.LFB36
 1638 01f6 01       		.uleb128 0x1
 1639 01f7 9C       		.byte	0x9c
 1640 01f8 51020000 		.4byte	0x251
 1641 01fc 13       		.uleb128 0x13
 1642 01fd 6900     		.ascii	"i\000"
 1643 01ff 01       		.byte	0x1
 1644 0200 2401     		.2byte	0x124
 1645 0202 81000000 		.4byte	0x81
 1646 0206 C0000000 		.4byte	.LLST4
 1647 020a 15       		.uleb128 0x15
 1648 020b EE040000 		.4byte	.LASF22
 1649 020f 01       		.byte	0x1
 1650 0210 2501     		.2byte	0x125
 1651 0212 81000000 		.4byte	0x81
 1652 0216 D3000000 		.4byte	.LLST5
 1653 021a 11       		.uleb128 0x11
 1654 021b 06000000 		.4byte	.LVL14
 1655 021f 960A0000 		.4byte	0xa96
 1656 0223 11       		.uleb128 0x11
 1657 0224 0A000000 		.4byte	.LVL15
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 83


 1658 0228 8B0A0000 		.4byte	0xa8b
 1659 022c 0F       		.uleb128 0xf
 1660 022d 18000000 		.4byte	.LVL17
 1661 0231 9D0A0000 		.4byte	0xa9d
 1662 0235 40020000 		.4byte	0x240
 1663 0239 10       		.uleb128 0x10
 1664 023a 01       		.uleb128 0x1
 1665 023b 51       		.byte	0x51
 1666 023c 02       		.uleb128 0x2
 1667 023d 74       		.byte	0x74
 1668 023e 00       		.sleb128 0
 1669 023f 00       		.byte	0
 1670 0240 12       		.uleb128 0x12
 1671 0241 22000000 		.4byte	.LVL19
 1672 0245 07010000 		.4byte	0x107
 1673 0249 10       		.uleb128 0x10
 1674 024a 01       		.uleb128 0x1
 1675 024b 50       		.byte	0x50
 1676 024c 02       		.uleb128 0x2
 1677 024d 74       		.byte	0x74
 1678 024e 00       		.sleb128 0
 1679 024f 00       		.byte	0
 1680 0250 00       		.byte	0
 1681 0251 14       		.uleb128 0x14
 1682 0252 98020000 		.4byte	.LASF23
 1683 0256 01       		.byte	0x1
 1684 0257 6301     		.2byte	0x163
 1685 0259 00000000 		.4byte	.LFB37
 1686 025d D8000000 		.4byte	.LFE37-.LFB37
 1687 0261 01       		.uleb128 0x1
 1688 0262 9C       		.byte	0x9c
 1689 0263 21030000 		.4byte	0x321
 1690 0267 16       		.uleb128 0x16
 1691 0268 D3020000 		.4byte	.LASF16
 1692 026c 01       		.byte	0x1
 1693 026d 6301     		.2byte	0x163
 1694 026f 81000000 		.4byte	0x81
 1695 0273 E6000000 		.4byte	.LLST6
 1696 0277 15       		.uleb128 0x15
 1697 0278 12030000 		.4byte	.LASF24
 1698 027c 01       		.byte	0x1
 1699 027d 6501     		.2byte	0x165
 1700 027f 81000000 		.4byte	0x81
 1701 0283 12010000 		.4byte	.LLST7
 1702 0287 15       		.uleb128 0x15
 1703 0288 8E060000 		.4byte	.LASF25
 1704 028c 01       		.byte	0x1
 1705 028d 6601     		.2byte	0x166
 1706 028f 81000000 		.4byte	0x81
 1707 0293 25010000 		.4byte	.LLST8
 1708 0297 15       		.uleb128 0x15
 1709 0298 4E070000 		.4byte	.LASF26
 1710 029c 01       		.byte	0x1
 1711 029d 6701     		.2byte	0x167
 1712 029f 76000000 		.4byte	0x76
 1713 02a3 45010000 		.4byte	.LLST9
 1714 02a7 15       		.uleb128 0x15
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 84


 1715 02a8 07000000 		.4byte	.LASF27
 1716 02ac 01       		.byte	0x1
 1717 02ad 6801     		.2byte	0x168
 1718 02af 76000000 		.4byte	0x76
 1719 02b3 63010000 		.4byte	.LLST10
 1720 02b7 15       		.uleb128 0x15
 1721 02b8 E7040000 		.4byte	.LASF20
 1722 02bc 01       		.byte	0x1
 1723 02bd 6901     		.2byte	0x169
 1724 02bf 6B000000 		.4byte	0x6b
 1725 02c3 98010000 		.4byte	.LLST11
 1726 02c7 17       		.uleb128 0x17
 1727 02c8 CE040000 		.4byte	.LASF28
 1728 02cc 01       		.byte	0x1
 1729 02cd 6A01     		.2byte	0x16a
 1730 02cf 6B000000 		.4byte	0x6b
 1731 02d3 02       		.uleb128 0x2
 1732 02d4 7D       		.byte	0x7d
 1733 02d5 04       		.sleb128 4
 1734 02d6 18       		.uleb128 0x18
 1735 02d7 B9000000 		.4byte	0xb9
 1736 02db 20000000 		.4byte	.LBB8
 1737 02df 0A000000 		.4byte	.LBE8-.LBB8
 1738 02e3 01       		.byte	0x1
 1739 02e4 8A01     		.2byte	0x18a
 1740 02e6 10030000 		.4byte	0x310
 1741 02ea 19       		.uleb128 0x19
 1742 02eb D5000000 		.4byte	0xd5
 1743 02ef C5010000 		.4byte	.LLST12
 1744 02f3 19       		.uleb128 0x19
 1745 02f4 CA000000 		.4byte	0xca
 1746 02f8 E1010000 		.4byte	.LLST13
 1747 02fc 1A       		.uleb128 0x1a
 1748 02fd 20000000 		.4byte	.LBB9
 1749 0301 0A000000 		.4byte	.LBE9-.LBB9
 1750 0305 1B       		.uleb128 0x1b
 1751 0306 E0000000 		.4byte	0xe0
 1752 030a F5010000 		.4byte	.LLST14
 1753 030e 00       		.byte	0
 1754 030f 00       		.byte	0
 1755 0310 12       		.uleb128 0x12
 1756 0311 5C000000 		.4byte	.LVL35
 1757 0315 07010000 		.4byte	0x107
 1758 0319 10       		.uleb128 0x10
 1759 031a 01       		.uleb128 0x1
 1760 031b 50       		.byte	0x50
 1761 031c 02       		.uleb128 0x2
 1762 031d 74       		.byte	0x74
 1763 031e 00       		.sleb128 0
 1764 031f 00       		.byte	0
 1765 0320 00       		.byte	0
 1766 0321 1C       		.uleb128 0x1c
 1767 0322 ED000000 		.4byte	0xed
 1768 0326 00000000 		.4byte	.LFB38
 1769 032a 08000000 		.4byte	.LFE38-.LFB38
 1770 032e 01       		.uleb128 0x1
 1771 032f 9C       		.byte	0x9c
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 85


 1772 0330 4F030000 		.4byte	0x34f
 1773 0334 19       		.uleb128 0x19
 1774 0335 FA000000 		.4byte	0xfa
 1775 0339 22020000 		.4byte	.LLST15
 1776 033d 12       		.uleb128 0x12
 1777 033e 06000000 		.4byte	.LVL44
 1778 0342 51020000 		.4byte	0x251
 1779 0346 10       		.uleb128 0x10
 1780 0347 01       		.uleb128 0x1
 1781 0348 50       		.byte	0x50
 1782 0349 03       		.uleb128 0x3
 1783 034a F3       		.byte	0xf3
 1784 034b 01       		.uleb128 0x1
 1785 034c 50       		.byte	0x50
 1786 034d 00       		.byte	0
 1787 034e 00       		.byte	0
 1788 034f 14       		.uleb128 0x14
 1789 0350 20010000 		.4byte	.LASF29
 1790 0354 01       		.byte	0x1
 1791 0355 5802     		.2byte	0x258
 1792 0357 00000000 		.4byte	.LFB39
 1793 035b 24000000 		.4byte	.LFE39-.LFB39
 1794 035f 01       		.uleb128 0x1
 1795 0360 9C       		.byte	0x9c
 1796 0361 C2030000 		.4byte	0x3c2
 1797 0365 13       		.uleb128 0x13
 1798 0366 6900     		.ascii	"i\000"
 1799 0368 01       		.byte	0x1
 1800 0369 5A02     		.2byte	0x25a
 1801 036b 81000000 		.4byte	0x81
 1802 036f 43020000 		.4byte	.LLST16
 1803 0373 15       		.uleb128 0x15
 1804 0374 EE040000 		.4byte	.LASF22
 1805 0378 01       		.byte	0x1
 1806 0379 5B02     		.2byte	0x25b
 1807 037b 81000000 		.4byte	0x81
 1808 037f 62020000 		.4byte	.LLST17
 1809 0383 18       		.uleb128 0x18
 1810 0384 ED000000 		.4byte	0xed
 1811 0388 10000000 		.4byte	.LBB10
 1812 038c 06000000 		.4byte	.LBE10-.LBB10
 1813 0390 01       		.byte	0x1
 1814 0391 6302     		.2byte	0x263
 1815 0393 B1030000 		.4byte	0x3b1
 1816 0397 19       		.uleb128 0x19
 1817 0398 FA000000 		.4byte	0xfa
 1818 039c 75020000 		.4byte	.LLST18
 1819 03a0 12       		.uleb128 0x12
 1820 03a1 16000000 		.4byte	.LVL50
 1821 03a5 51020000 		.4byte	0x251
 1822 03a9 10       		.uleb128 0x10
 1823 03aa 01       		.uleb128 0x1
 1824 03ab 50       		.byte	0x50
 1825 03ac 02       		.uleb128 0x2
 1826 03ad 74       		.byte	0x74
 1827 03ae 00       		.sleb128 0
 1828 03af 00       		.byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 86


 1829 03b0 00       		.byte	0
 1830 03b1 12       		.uleb128 0x12
 1831 03b2 0C000000 		.4byte	.LVL47
 1832 03b6 9D0A0000 		.4byte	0xa9d
 1833 03ba 10       		.uleb128 0x10
 1834 03bb 01       		.uleb128 0x1
 1835 03bc 51       		.byte	0x51
 1836 03bd 02       		.uleb128 0x2
 1837 03be 74       		.byte	0x74
 1838 03bf 00       		.sleb128 0
 1839 03c0 00       		.byte	0
 1840 03c1 00       		.byte	0
 1841 03c2 14       		.uleb128 0x14
 1842 03c3 81000000 		.4byte	.LASF30
 1843 03c7 01       		.byte	0x1
 1844 03c8 8502     		.2byte	0x285
 1845 03ca 00000000 		.4byte	.LFB40
 1846 03ce 34000000 		.4byte	.LFE40-.LFB40
 1847 03d2 01       		.uleb128 0x1
 1848 03d3 9C       		.byte	0x9c
 1849 03d4 75040000 		.4byte	0x475
 1850 03d8 16       		.uleb128 0x16
 1851 03d9 E7040000 		.4byte	.LASF20
 1852 03dd 01       		.byte	0x1
 1853 03de 8502     		.2byte	0x285
 1854 03e0 81000000 		.4byte	0x81
 1855 03e4 88020000 		.4byte	.LLST19
 1856 03e8 15       		.uleb128 0x15
 1857 03e9 10050000 		.4byte	.LASF31
 1858 03ed 01       		.byte	0x1
 1859 03ee 8702     		.2byte	0x287
 1860 03f0 81000000 		.4byte	0x81
 1861 03f4 A9020000 		.4byte	.LLST20
 1862 03f8 15       		.uleb128 0x15
 1863 03f9 7B040000 		.4byte	.LASF32
 1864 03fd 01       		.byte	0x1
 1865 03fe 8802     		.2byte	0x288
 1866 0400 81000000 		.4byte	0x81
 1867 0404 E2020000 		.4byte	.LLST21
 1868 0408 15       		.uleb128 0x15
 1869 0409 17000000 		.4byte	.LASF33
 1870 040d 01       		.byte	0x1
 1871 040e 8902     		.2byte	0x289
 1872 0410 81000000 		.4byte	0x81
 1873 0414 0E030000 		.4byte	.LLST22
 1874 0418 13       		.uleb128 0x13
 1875 0419 6900     		.ascii	"i\000"
 1876 041b 01       		.byte	0x1
 1877 041c 8A02     		.2byte	0x28a
 1878 041e 81000000 		.4byte	0x81
 1879 0422 49030000 		.4byte	.LLST23
 1880 0426 15       		.uleb128 0x15
 1881 0427 EE040000 		.4byte	.LASF22
 1882 042b 01       		.byte	0x1
 1883 042c 8B02     		.2byte	0x28b
 1884 042e 81000000 		.4byte	0x81
 1885 0432 5C030000 		.4byte	.LLST24
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 87


 1886 0436 18       		.uleb128 0x18
 1887 0437 ED000000 		.4byte	0xed
 1888 043b 1E000000 		.4byte	.LBB12
 1889 043f 06000000 		.4byte	.LBE12-.LBB12
 1890 0443 01       		.byte	0x1
 1891 0444 9C02     		.2byte	0x29c
 1892 0446 64040000 		.4byte	0x464
 1893 044a 19       		.uleb128 0x19
 1894 044b FA000000 		.4byte	0xfa
 1895 044f 6F030000 		.4byte	.LLST25
 1896 0453 12       		.uleb128 0x12
 1897 0454 24000000 		.4byte	.LVL59
 1898 0458 51020000 		.4byte	0x251
 1899 045c 10       		.uleb128 0x10
 1900 045d 01       		.uleb128 0x1
 1901 045e 50       		.byte	0x50
 1902 045f 02       		.uleb128 0x2
 1903 0460 74       		.byte	0x74
 1904 0461 00       		.sleb128 0
 1905 0462 00       		.byte	0
 1906 0463 00       		.byte	0
 1907 0464 12       		.uleb128 0x12
 1908 0465 1A000000 		.4byte	.LVL56
 1909 0469 9D0A0000 		.4byte	0xa9d
 1910 046d 10       		.uleb128 0x10
 1911 046e 01       		.uleb128 0x1
 1912 046f 51       		.byte	0x51
 1913 0470 02       		.uleb128 0x2
 1914 0471 74       		.byte	0x74
 1915 0472 00       		.sleb128 0
 1916 0473 00       		.byte	0
 1917 0474 00       		.byte	0
 1918 0475 1D       		.uleb128 0x1d
 1919 0476 7A010000 		.4byte	.LASF36
 1920 047a 01       		.byte	0x1
 1921 047b B602     		.2byte	0x2b6
 1922 047d 76000000 		.4byte	0x76
 1923 0481 00000000 		.4byte	.LFB41
 1924 0485 0C000000 		.4byte	.LFE41-.LFB41
 1925 0489 01       		.uleb128 0x1
 1926 048a 9C       		.byte	0x9c
 1927 048b A0040000 		.4byte	0x4a0
 1928 048f 16       		.uleb128 0x16
 1929 0490 D3020000 		.4byte	.LASF16
 1930 0494 01       		.byte	0x1
 1931 0495 B602     		.2byte	0x2b6
 1932 0497 81000000 		.4byte	0x81
 1933 049b 82030000 		.4byte	.LLST26
 1934 049f 00       		.byte	0
 1935 04a0 14       		.uleb128 0x14
 1936 04a1 B5040000 		.4byte	.LASF34
 1937 04a5 01       		.byte	0x1
 1938 04a6 D102     		.2byte	0x2d1
 1939 04a8 00000000 		.4byte	.LFB42
 1940 04ac 0C000000 		.4byte	.LFE42-.LFB42
 1941 04b0 01       		.uleb128 0x1
 1942 04b1 9C       		.byte	0x9c
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 88


 1943 04b2 D5040000 		.4byte	0x4d5
 1944 04b6 16       		.uleb128 0x16
 1945 04b7 D3020000 		.4byte	.LASF16
 1946 04bb 01       		.byte	0x1
 1947 04bc D102     		.2byte	0x2d1
 1948 04be 81000000 		.4byte	0x81
 1949 04c2 A3030000 		.4byte	.LLST27
 1950 04c6 1E       		.uleb128 0x1e
 1951 04c7 BB020000 		.4byte	.LASF35
 1952 04cb 01       		.byte	0x1
 1953 04cc D102     		.2byte	0x2d1
 1954 04ce 76000000 		.4byte	0x76
 1955 04d2 01       		.uleb128 0x1
 1956 04d3 51       		.byte	0x51
 1957 04d4 00       		.byte	0
 1958 04d5 1D       		.uleb128 0x1d
 1959 04d6 40030000 		.4byte	.LASF37
 1960 04da 01       		.byte	0x1
 1961 04db EC02     		.2byte	0x2ec
 1962 04dd 6B000000 		.4byte	0x6b
 1963 04e1 00000000 		.4byte	.LFB43
 1964 04e5 0C000000 		.4byte	.LFE43-.LFB43
 1965 04e9 01       		.uleb128 0x1
 1966 04ea 9C       		.byte	0x9c
 1967 04eb 00050000 		.4byte	0x500
 1968 04ef 16       		.uleb128 0x16
 1969 04f0 D3020000 		.4byte	.LASF16
 1970 04f4 01       		.byte	0x1
 1971 04f5 EC02     		.2byte	0x2ec
 1972 04f7 81000000 		.4byte	0x81
 1973 04fb C4030000 		.4byte	.LLST28
 1974 04ff 00       		.byte	0
 1975 0500 14       		.uleb128 0x14
 1976 0501 B3060000 		.4byte	.LASF38
 1977 0505 01       		.byte	0x1
 1978 0506 0703     		.2byte	0x307
 1979 0508 00000000 		.4byte	.LFB44
 1980 050c 0C000000 		.4byte	.LFE44-.LFB44
 1981 0510 01       		.uleb128 0x1
 1982 0511 9C       		.byte	0x9c
 1983 0512 33050000 		.4byte	0x533
 1984 0516 1E       		.uleb128 0x1e
 1985 0517 D3020000 		.4byte	.LASF16
 1986 051b 01       		.byte	0x1
 1987 051c 0703     		.2byte	0x307
 1988 051e 81000000 		.4byte	0x81
 1989 0522 01       		.uleb128 0x1
 1990 0523 50       		.byte	0x50
 1991 0524 1E       		.uleb128 0x1e
 1992 0525 30020000 		.4byte	.LASF39
 1993 0529 01       		.byte	0x1
 1994 052a 0703     		.2byte	0x307
 1995 052c 6B000000 		.4byte	0x6b
 1996 0530 01       		.uleb128 0x1
 1997 0531 51       		.byte	0x51
 1998 0532 00       		.byte	0
 1999 0533 1D       		.uleb128 0x1d
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 89


 2000 0534 C1030000 		.4byte	.LASF40
 2001 0538 01       		.byte	0x1
 2002 0539 2203     		.2byte	0x322
 2003 053b 6B000000 		.4byte	0x6b
 2004 053f 00000000 		.4byte	.LFB45
 2005 0543 0C000000 		.4byte	.LFE45-.LFB45
 2006 0547 01       		.uleb128 0x1
 2007 0548 9C       		.byte	0x9c
 2008 0549 5E050000 		.4byte	0x55e
 2009 054d 16       		.uleb128 0x16
 2010 054e E7040000 		.4byte	.LASF20
 2011 0552 01       		.byte	0x1
 2012 0553 2203     		.2byte	0x322
 2013 0555 81000000 		.4byte	0x81
 2014 0559 E5030000 		.4byte	.LLST29
 2015 055d 00       		.byte	0
 2016 055e 1D       		.uleb128 0x1d
 2017 055f E1000000 		.4byte	.LASF41
 2018 0563 01       		.byte	0x1
 2019 0564 3D03     		.2byte	0x33d
 2020 0566 6B000000 		.4byte	0x6b
 2021 056a 00000000 		.4byte	.LFB46
 2022 056e 0C000000 		.4byte	.LFE46-.LFB46
 2023 0572 01       		.uleb128 0x1
 2024 0573 9C       		.byte	0x9c
 2025 0574 89050000 		.4byte	0x589
 2026 0578 16       		.uleb128 0x16
 2027 0579 E7040000 		.4byte	.LASF20
 2028 057d 01       		.byte	0x1
 2029 057e 3D03     		.2byte	0x33d
 2030 0580 81000000 		.4byte	0x81
 2031 0584 06040000 		.4byte	.LLST30
 2032 0588 00       		.byte	0
 2033 0589 1D       		.uleb128 0x1d
 2034 058a 17060000 		.4byte	.LASF42
 2035 058e 01       		.byte	0x1
 2036 058f 5903     		.2byte	0x359
 2037 0591 6B000000 		.4byte	0x6b
 2038 0595 00000000 		.4byte	.LFB47
 2039 0599 0C000000 		.4byte	.LFE47-.LFB47
 2040 059d 01       		.uleb128 0x1
 2041 059e 9C       		.byte	0x9c
 2042 059f B4050000 		.4byte	0x5b4
 2043 05a3 16       		.uleb128 0x16
 2044 05a4 E7040000 		.4byte	.LASF20
 2045 05a8 01       		.byte	0x1
 2046 05a9 5903     		.2byte	0x359
 2047 05ab 81000000 		.4byte	0x81
 2048 05af 27040000 		.4byte	.LLST31
 2049 05b3 00       		.byte	0
 2050 05b4 1D       		.uleb128 0x1d
 2051 05b5 4E000000 		.4byte	.LASF43
 2052 05b9 01       		.byte	0x1
 2053 05ba 7503     		.2byte	0x375
 2054 05bc 6B000000 		.4byte	0x6b
 2055 05c0 00000000 		.4byte	.LFB48
 2056 05c4 04000000 		.4byte	.LFE48-.LFB48
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 90


 2057 05c8 01       		.uleb128 0x1
 2058 05c9 9C       		.byte	0x9c
 2059 05ca DF050000 		.4byte	0x5df
 2060 05ce 16       		.uleb128 0x16
 2061 05cf E7040000 		.4byte	.LASF20
 2062 05d3 01       		.byte	0x1
 2063 05d4 7503     		.2byte	0x375
 2064 05d6 81000000 		.4byte	0x81
 2065 05da 48040000 		.4byte	.LLST32
 2066 05de 00       		.byte	0
 2067 05df 1D       		.uleb128 0x1d
 2068 05e0 A4030000 		.4byte	.LASF44
 2069 05e4 01       		.byte	0x1
 2070 05e5 5104     		.2byte	0x451
 2071 05e7 81000000 		.4byte	0x81
 2072 05eb 00000000 		.4byte	.LFB49
 2073 05ef 94000000 		.4byte	.LFE49-.LFB49
 2074 05f3 01       		.uleb128 0x1
 2075 05f4 9C       		.byte	0x9c
 2076 05f5 C5060000 		.4byte	0x6c5
 2077 05f9 16       		.uleb128 0x16
 2078 05fa D3020000 		.4byte	.LASF16
 2079 05fe 01       		.byte	0x1
 2080 05ff 5104     		.2byte	0x451
 2081 0601 81000000 		.4byte	0x81
 2082 0605 69040000 		.4byte	.LLST33
 2083 0609 15       		.uleb128 0x15
 2084 060a E7040000 		.4byte	.LASF20
 2085 060e 01       		.byte	0x1
 2086 060f 5304     		.2byte	0x453
 2087 0611 6B000000 		.4byte	0x6b
 2088 0615 95040000 		.4byte	.LLST34
 2089 0619 17       		.uleb128 0x17
 2090 061a 5A030000 		.4byte	.LASF45
 2091 061e 01       		.byte	0x1
 2092 061f 5404     		.2byte	0x454
 2093 0621 6B000000 		.4byte	0x6b
 2094 0625 02       		.uleb128 0x2
 2095 0626 91       		.byte	0x91
 2096 0627 64       		.sleb128 -28
 2097 0628 15       		.uleb128 0x15
 2098 0629 80060000 		.4byte	.LASF46
 2099 062d 01       		.byte	0x1
 2100 062e 5504     		.2byte	0x455
 2101 0630 6B000000 		.4byte	0x6b
 2102 0634 C2040000 		.4byte	.LLST35
 2103 0638 17       		.uleb128 0x17
 2104 0639 71000000 		.4byte	.LASF47
 2105 063d 01       		.byte	0x1
 2106 063e 5704     		.2byte	0x457
 2107 0640 6B000000 		.4byte	0x6b
 2108 0644 02       		.uleb128 0x2
 2109 0645 91       		.byte	0x91
 2110 0646 5C       		.sleb128 -36
 2111 0647 17       		.uleb128 0x17
 2112 0648 25020000 		.4byte	.LASF48
 2113 064c 01       		.byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 91


 2114 064d 5804     		.2byte	0x458
 2115 064f 6B000000 		.4byte	0x6b
 2116 0653 02       		.uleb128 0x2
 2117 0654 91       		.byte	0x91
 2118 0655 60       		.sleb128 -32
 2119 0656 0F       		.uleb128 0xf
 2120 0657 2C000000 		.4byte	.LVL83
 2121 065b 9D0A0000 		.4byte	0xa9d
 2122 065f 70060000 		.4byte	0x670
 2123 0663 10       		.uleb128 0x10
 2124 0664 01       		.uleb128 0x1
 2125 0665 51       		.byte	0x51
 2126 0666 02       		.uleb128 0x2
 2127 0667 74       		.byte	0x74
 2128 0668 00       		.sleb128 0
 2129 0669 10       		.uleb128 0x10
 2130 066a 01       		.uleb128 0x1
 2131 066b 50       		.byte	0x50
 2132 066c 02       		.uleb128 0x2
 2133 066d 77       		.byte	0x77
 2134 066e 00       		.sleb128 0
 2135 066f 00       		.byte	0
 2136 0670 0F       		.uleb128 0xf
 2137 0671 4A000000 		.4byte	.LVL84
 2138 0675 B70A0000 		.4byte	0xab7
 2139 0679 8F060000 		.4byte	0x68f
 2140 067d 10       		.uleb128 0x10
 2141 067e 01       		.uleb128 0x1
 2142 067f 52       		.byte	0x52
 2143 0680 01       		.uleb128 0x1
 2144 0681 30       		.byte	0x30
 2145 0682 10       		.uleb128 0x10
 2146 0683 01       		.uleb128 0x1
 2147 0684 51       		.byte	0x51
 2148 0685 02       		.uleb128 0x2
 2149 0686 74       		.byte	0x74
 2150 0687 00       		.sleb128 0
 2151 0688 10       		.uleb128 0x10
 2152 0689 01       		.uleb128 0x1
 2153 068a 50       		.byte	0x50
 2154 068b 02       		.uleb128 0x2
 2155 068c 77       		.byte	0x77
 2156 068d 00       		.sleb128 0
 2157 068e 00       		.byte	0
 2158 068f 0F       		.uleb128 0xf
 2159 0690 70000000 		.4byte	.LVL85
 2160 0694 B70A0000 		.4byte	0xab7
 2161 0698 AE060000 		.4byte	0x6ae
 2162 069c 10       		.uleb128 0x10
 2163 069d 01       		.uleb128 0x1
 2164 069e 52       		.byte	0x52
 2165 069f 01       		.uleb128 0x1
 2166 06a0 31       		.byte	0x31
 2167 06a1 10       		.uleb128 0x10
 2168 06a2 01       		.uleb128 0x1
 2169 06a3 51       		.byte	0x51
 2170 06a4 02       		.uleb128 0x2
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 92


 2171 06a5 74       		.byte	0x74
 2172 06a6 00       		.sleb128 0
 2173 06a7 10       		.uleb128 0x10
 2174 06a8 01       		.uleb128 0x1
 2175 06a9 50       		.byte	0x50
 2176 06aa 02       		.uleb128 0x2
 2177 06ab 77       		.byte	0x77
 2178 06ac 00       		.sleb128 0
 2179 06ad 00       		.byte	0
 2180 06ae 12       		.uleb128 0x12
 2181 06af 80000000 		.4byte	.LVL86
 2182 06b3 9D0A0000 		.4byte	0xa9d
 2183 06b7 10       		.uleb128 0x10
 2184 06b8 01       		.uleb128 0x1
 2185 06b9 51       		.byte	0x51
 2186 06ba 02       		.uleb128 0x2
 2187 06bb 74       		.byte	0x74
 2188 06bc 00       		.sleb128 0
 2189 06bd 10       		.uleb128 0x10
 2190 06be 01       		.uleb128 0x1
 2191 06bf 50       		.byte	0x50
 2192 06c0 02       		.uleb128 0x2
 2193 06c1 76       		.byte	0x76
 2194 06c2 10       		.sleb128 16
 2195 06c3 00       		.byte	0
 2196 06c4 00       		.byte	0
 2197 06c5 1D       		.uleb128 0x1d
 2198 06c6 5E040000 		.4byte	.LASF49
 2199 06ca 01       		.byte	0x1
 2200 06cb A304     		.2byte	0x4a3
 2201 06cd 81000000 		.4byte	0x81
 2202 06d1 00000000 		.4byte	.LFB50
 2203 06d5 2C000000 		.4byte	.LFE50-.LFB50
 2204 06d9 01       		.uleb128 0x1
 2205 06da 9C       		.byte	0x9c
 2206 06db 30070000 		.4byte	0x730
 2207 06df 16       		.uleb128 0x16
 2208 06e0 E7040000 		.4byte	.LASF20
 2209 06e4 01       		.byte	0x1
 2210 06e5 A304     		.2byte	0x4a3
 2211 06e7 81000000 		.4byte	0x81
 2212 06eb E3040000 		.4byte	.LLST36
 2213 06ef 15       		.uleb128 0x15
 2214 06f0 71010000 		.4byte	.LASF50
 2215 06f4 01       		.byte	0x1
 2216 06f5 A504     		.2byte	0x4a5
 2217 06f7 81000000 		.4byte	0x81
 2218 06fb 04050000 		.4byte	.LLST37
 2219 06ff 15       		.uleb128 0x15
 2220 0700 93060000 		.4byte	.LASF51
 2221 0704 01       		.byte	0x1
 2222 0705 A604     		.2byte	0x4a6
 2223 0707 81000000 		.4byte	0x81
 2224 070b 17050000 		.4byte	.LLST38
 2225 070f 15       		.uleb128 0x15
 2226 0710 93010000 		.4byte	.LASF52
 2227 0714 01       		.byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 93


 2228 0715 A704     		.2byte	0x4a7
 2229 0717 81000000 		.4byte	0x81
 2230 071b 52050000 		.4byte	.LLST39
 2231 071f 12       		.uleb128 0x12
 2232 0720 16000000 		.4byte	.LVL91
 2233 0724 DF050000 		.4byte	0x5df
 2234 0728 10       		.uleb128 0x10
 2235 0729 01       		.uleb128 0x1
 2236 072a 50       		.byte	0x50
 2237 072b 02       		.uleb128 0x2
 2238 072c 74       		.byte	0x74
 2239 072d 00       		.sleb128 0
 2240 072e 00       		.byte	0
 2241 072f 00       		.byte	0
 2242 0730 1D       		.uleb128 0x1d
 2243 0731 A2010000 		.4byte	.LASF53
 2244 0735 01       		.byte	0x1
 2245 0736 D104     		.2byte	0x4d1
 2246 0738 81000000 		.4byte	0x81
 2247 073c 00000000 		.4byte	.LFB51
 2248 0740 1C000000 		.4byte	.LFE51-.LFB51
 2249 0744 01       		.uleb128 0x1
 2250 0745 9C       		.byte	0x9c
 2251 0746 79070000 		.4byte	0x779
 2252 074a 13       		.uleb128 0x13
 2253 074b 6900     		.ascii	"i\000"
 2254 074d 01       		.byte	0x1
 2255 074e D404     		.2byte	0x4d4
 2256 0750 81000000 		.4byte	0x81
 2257 0754 70050000 		.4byte	.LLST40
 2258 0758 15       		.uleb128 0x15
 2259 0759 93010000 		.4byte	.LASF52
 2260 075d 01       		.byte	0x1
 2261 075e D504     		.2byte	0x4d5
 2262 0760 81000000 		.4byte	0x81
 2263 0764 8F050000 		.4byte	.LLST41
 2264 0768 12       		.uleb128 0x12
 2265 0769 0C000000 		.4byte	.LVL99
 2266 076d C5060000 		.4byte	0x6c5
 2267 0771 10       		.uleb128 0x10
 2268 0772 01       		.uleb128 0x1
 2269 0773 50       		.byte	0x50
 2270 0774 02       		.uleb128 0x2
 2271 0775 74       		.byte	0x74
 2272 0776 00       		.sleb128 0
 2273 0777 00       		.byte	0
 2274 0778 00       		.byte	0
 2275 0779 14       		.uleb128 0x14
 2276 077a 6C030000 		.4byte	.LASF54
 2277 077e 01       		.byte	0x1
 2278 077f 0005     		.2byte	0x500
 2279 0781 00000000 		.4byte	.LFB52
 2280 0785 2C000000 		.4byte	.LFE52-.LFB52
 2281 0789 01       		.uleb128 0x1
 2282 078a 9C       		.byte	0x9c
 2283 078b CF070000 		.4byte	0x7cf
 2284 078f 16       		.uleb128 0x16
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 94


 2285 0790 E7040000 		.4byte	.LASF20
 2286 0794 01       		.byte	0x1
 2287 0795 0005     		.2byte	0x500
 2288 0797 81000000 		.4byte	0x81
 2289 079b B9050000 		.4byte	.LLST42
 2290 079f 15       		.uleb128 0x15
 2291 07a0 71010000 		.4byte	.LASF50
 2292 07a4 01       		.byte	0x1
 2293 07a5 0305     		.2byte	0x503
 2294 07a7 6B000000 		.4byte	0x6b
 2295 07ab DA050000 		.4byte	.LLST43
 2296 07af 15       		.uleb128 0x15
 2297 07b0 93060000 		.4byte	.LASF51
 2298 07b4 01       		.byte	0x1
 2299 07b5 0405     		.2byte	0x504
 2300 07b7 6B000000 		.4byte	0x6b
 2301 07bb 12060000 		.4byte	.LLST44
 2302 07bf 12       		.uleb128 0x12
 2303 07c0 1E000000 		.4byte	.LVL108
 2304 07c4 B70A0000 		.4byte	0xab7
 2305 07c8 10       		.uleb128 0x10
 2306 07c9 01       		.uleb128 0x1
 2307 07ca 52       		.byte	0x52
 2308 07cb 01       		.uleb128 0x1
 2309 07cc 31       		.byte	0x31
 2310 07cd 00       		.byte	0
 2311 07ce 00       		.byte	0
 2312 07cf 14       		.uleb128 0x14
 2313 07d0 5A010000 		.4byte	.LASF55
 2314 07d4 01       		.byte	0x1
 2315 07d5 2B05     		.2byte	0x52b
 2316 07d7 00000000 		.4byte	.LFB53
 2317 07db 2C000000 		.4byte	.LFE53-.LFB53
 2318 07df 01       		.uleb128 0x1
 2319 07e0 9C       		.byte	0x9c
 2320 07e1 25080000 		.4byte	0x825
 2321 07e5 16       		.uleb128 0x16
 2322 07e6 E7040000 		.4byte	.LASF20
 2323 07ea 01       		.byte	0x1
 2324 07eb 2B05     		.2byte	0x52b
 2325 07ed 81000000 		.4byte	0x81
 2326 07f1 4D060000 		.4byte	.LLST45
 2327 07f5 15       		.uleb128 0x15
 2328 07f6 71010000 		.4byte	.LASF50
 2329 07fa 01       		.byte	0x1
 2330 07fb 2D05     		.2byte	0x52d
 2331 07fd 6B000000 		.4byte	0x6b
 2332 0801 6E060000 		.4byte	.LLST46
 2333 0805 15       		.uleb128 0x15
 2334 0806 93060000 		.4byte	.LASF51
 2335 080a 01       		.byte	0x1
 2336 080b 2E05     		.2byte	0x52e
 2337 080d 6B000000 		.4byte	0x6b
 2338 0811 A6060000 		.4byte	.LLST47
 2339 0815 12       		.uleb128 0x12
 2340 0816 1E000000 		.4byte	.LVL115
 2341 081a B70A0000 		.4byte	0xab7
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 95


 2342 081e 10       		.uleb128 0x10
 2343 081f 01       		.uleb128 0x1
 2344 0820 52       		.byte	0x52
 2345 0821 01       		.uleb128 0x1
 2346 0822 30       		.byte	0x30
 2347 0823 00       		.byte	0
 2348 0824 00       		.byte	0
 2349 0825 1C       		.uleb128 0x1c
 2350 0826 B9000000 		.4byte	0xb9
 2351 082a 00000000 		.4byte	.LFB54
 2352 082e 0C000000 		.4byte	.LFE54-.LFB54
 2353 0832 01       		.uleb128 0x1
 2354 0833 9C       		.byte	0x9c
 2355 0834 52080000 		.4byte	0x852
 2356 0838 19       		.uleb128 0x19
 2357 0839 CA000000 		.4byte	0xca
 2358 083d E1060000 		.4byte	.LLST48
 2359 0841 1F       		.uleb128 0x1f
 2360 0842 D5000000 		.4byte	0xd5
 2361 0846 01       		.uleb128 0x1
 2362 0847 51       		.byte	0x51
 2363 0848 1B       		.uleb128 0x1b
 2364 0849 E0000000 		.4byte	0xe0
 2365 084d 02070000 		.4byte	.LLST49
 2366 0851 00       		.byte	0
 2367 0852 1D       		.uleb128 0x1d
 2368 0853 E2060000 		.4byte	.LASF56
 2369 0857 01       		.byte	0x1
 2370 0858 A80A     		.2byte	0xaa8
 2371 085a 81000000 		.4byte	0x81
 2372 085e 00000000 		.4byte	.LFB55
 2373 0862 0C000000 		.4byte	.LFE55-.LFB55
 2374 0866 01       		.uleb128 0x1
 2375 0867 9C       		.byte	0x9c
 2376 0868 7D080000 		.4byte	0x87d
 2377 086c 16       		.uleb128 0x16
 2378 086d D3020000 		.4byte	.LASF16
 2379 0871 01       		.byte	0x1
 2380 0872 A80A     		.2byte	0xaa8
 2381 0874 81000000 		.4byte	0x81
 2382 0878 38070000 		.4byte	.LLST50
 2383 087c 00       		.byte	0
 2384 087d 1D       		.uleb128 0x1d
 2385 087e 41040000 		.4byte	.LASF57
 2386 0882 01       		.byte	0x1
 2387 0883 C20A     		.2byte	0xac2
 2388 0885 6B000000 		.4byte	0x6b
 2389 0889 00000000 		.4byte	.LFB56
 2390 088d 0C000000 		.4byte	.LFE56-.LFB56
 2391 0891 01       		.uleb128 0x1
 2392 0892 9C       		.byte	0x9c
 2393 0893 A8080000 		.4byte	0x8a8
 2394 0897 16       		.uleb128 0x16
 2395 0898 D3020000 		.4byte	.LASF16
 2396 089c 01       		.byte	0x1
 2397 089d C20A     		.2byte	0xac2
 2398 089f 81000000 		.4byte	0x81
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 96


 2399 08a3 59070000 		.4byte	.LLST51
 2400 08a7 00       		.byte	0
 2401 08a8 1D       		.uleb128 0x1d
 2402 08a9 9F000000 		.4byte	.LASF58
 2403 08ad 01       		.byte	0x1
 2404 08ae DC0A     		.2byte	0xadc
 2405 08b0 6B000000 		.4byte	0x6b
 2406 08b4 00000000 		.4byte	.LFB57
 2407 08b8 0C000000 		.4byte	.LFE57-.LFB57
 2408 08bc 01       		.uleb128 0x1
 2409 08bd 9C       		.byte	0x9c
 2410 08be D3080000 		.4byte	0x8d3
 2411 08c2 16       		.uleb128 0x16
 2412 08c3 E7040000 		.4byte	.LASF20
 2413 08c7 01       		.byte	0x1
 2414 08c8 DC0A     		.2byte	0xadc
 2415 08ca 81000000 		.4byte	0x81
 2416 08ce 7A070000 		.4byte	.LLST52
 2417 08d2 00       		.byte	0
 2418 08d3 20       		.uleb128 0x20
 2419 08d4 17070000 		.4byte	.LASF59
 2420 08d8 01       		.byte	0x1
 2421 08d9 F60A     		.2byte	0xaf6
 2422 08db 00000000 		.4byte	.LFB58
 2423 08df 0C000000 		.4byte	.LFE58-.LFB58
 2424 08e3 01       		.uleb128 0x1
 2425 08e4 9C       		.byte	0x9c
 2426 08e5 20       		.uleb128 0x20
 2427 08e6 E2010000 		.4byte	.LASF60
 2428 08ea 01       		.byte	0x1
 2429 08eb 0F0B     		.2byte	0xb0f
 2430 08ed 00000000 		.4byte	.LFB59
 2431 08f1 0C000000 		.4byte	.LFE59-.LFB59
 2432 08f5 01       		.uleb128 0x1
 2433 08f6 9C       		.byte	0x9c
 2434 08f7 21       		.uleb128 0x21
 2435 08f8 6B000000 		.4byte	0x6b
 2436 08fc 07090000 		.4byte	0x907
 2437 0900 22       		.uleb128 0x22
 2438 0901 A1000000 		.4byte	0xa1
 2439 0905 03       		.byte	0x3
 2440 0906 00       		.byte	0
 2441 0907 23       		.uleb128 0x23
 2442 0908 35070000 		.4byte	.LASF61
 2443 090c 01       		.byte	0x1
 2444 090d 59       		.byte	0x59
 2445 090e F7080000 		.4byte	0x8f7
 2446 0912 05       		.uleb128 0x5
 2447 0913 03       		.byte	0x3
 2448 0914 0C000000 		.4byte	CapSense_debounceCounter
 2449 0918 21       		.uleb128 0x21
 2450 0919 76000000 		.4byte	0x76
 2451 091d 28090000 		.4byte	0x928
 2452 0921 22       		.uleb128 0x22
 2453 0922 A1000000 		.4byte	0xa1
 2454 0926 02       		.byte	0x2
 2455 0927 00       		.byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 97


 2456 0928 24       		.uleb128 0x24
 2457 0929 A0060000 		.4byte	.LASF62
 2458 092d 01       		.byte	0x1
 2459 092e 2C       		.byte	0x2c
 2460 092f 18090000 		.4byte	0x918
 2461 0933 21       		.uleb128 0x21
 2462 0934 6B000000 		.4byte	0x6b
 2463 0938 43090000 		.4byte	0x943
 2464 093c 22       		.uleb128 0x22
 2465 093d A1000000 		.4byte	0xa1
 2466 0941 00       		.byte	0
 2467 0942 00       		.byte	0
 2468 0943 24       		.uleb128 0x24
 2469 0944 DA020000 		.4byte	.LASF63
 2470 0948 01       		.byte	0x1
 2471 0949 2D       		.byte	0x2d
 2472 094a 33090000 		.4byte	0x933
 2473 094e 21       		.uleb128 0x21
 2474 094f 6B000000 		.4byte	0x6b
 2475 0953 5E090000 		.4byte	0x95e
 2476 0957 22       		.uleb128 0x22
 2477 0958 A1000000 		.4byte	0xa1
 2478 095c 02       		.byte	0x2
 2479 095d 00       		.byte	0
 2480 095e 24       		.uleb128 0x24
 2481 095f 08020000 		.4byte	.LASF64
 2482 0963 01       		.byte	0x1
 2483 0964 2E       		.byte	0x2e
 2484 0965 69090000 		.4byte	0x969
 2485 0969 06       		.uleb128 0x6
 2486 096a 4E090000 		.4byte	0x94e
 2487 096e 25       		.uleb128 0x25
 2488 096f 50050000 		.4byte	.LASF65
 2489 0973 01       		.byte	0x1
 2490 0974 34       		.byte	0x34
 2491 0975 18090000 		.4byte	0x918
 2492 0979 05       		.uleb128 0x5
 2493 097a 03       		.byte	0x3
 2494 097b 00000000 		.4byte	CapSense_sensorBaseline
 2495 097f 25       		.uleb128 0x25
 2496 0980 7D020000 		.4byte	.LASF66
 2497 0984 01       		.byte	0x1
 2498 0985 35       		.byte	0x35
 2499 0986 4E090000 		.4byte	0x94e
 2500 098a 05       		.uleb128 0x5
 2501 098b 03       		.byte	0x3
 2502 098c 00000000 		.4byte	CapSense_sensorBaselineLow
 2503 0990 25       		.uleb128 0x25
 2504 0991 CB000000 		.4byte	.LASF67
 2505 0995 01       		.byte	0x1
 2506 0996 36       		.byte	0x36
 2507 0997 4E090000 		.4byte	0x94e
 2508 099b 05       		.uleb128 0x5
 2509 099c 03       		.byte	0x3
 2510 099d 00000000 		.4byte	CapSense_sensorSignal
 2511 09a1 25       		.uleb128 0x25
 2512 09a2 38000000 		.4byte	.LASF68
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 98


 2513 09a6 01       		.byte	0x1
 2514 09a7 37       		.byte	0x37
 2515 09a8 33090000 		.4byte	0x933
 2516 09ac 05       		.uleb128 0x5
 2517 09ad 03       		.byte	0x3
 2518 09ae 00000000 		.4byte	CapSense_sensorOnMask
 2519 09b2 25       		.uleb128 0x25
 2520 09b3 21050000 		.4byte	.LASF69
 2521 09b7 01       		.byte	0x1
 2522 09b8 39       		.byte	0x39
 2523 09b9 4E090000 		.4byte	0x94e
 2524 09bd 05       		.uleb128 0x5
 2525 09be 03       		.byte	0x3
 2526 09bf 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2527 09c3 25       		.uleb128 0x25
 2528 09c4 C8010000 		.4byte	.LASF70
 2529 09c8 01       		.byte	0x1
 2530 09c9 3A       		.byte	0x3a
 2531 09ca 4E090000 		.4byte	0x94e
 2532 09ce 05       		.uleb128 0x5
 2533 09cf 03       		.byte	0x3
 2534 09d0 00000000 		.4byte	CapSense_lowBaselineReset
 2535 09d4 25       		.uleb128 0x25
 2536 09d5 F5030000 		.4byte	.LASF71
 2537 09d9 01       		.byte	0x1
 2538 09da 49       		.byte	0x49
 2539 09db E5090000 		.4byte	0x9e5
 2540 09df 05       		.uleb128 0x5
 2541 09e0 03       		.byte	0x3
 2542 09e1 00000000 		.4byte	CapSense_fingerThreshold
 2543 09e5 06       		.uleb128 0x6
 2544 09e6 4E090000 		.4byte	0x94e
 2545 09ea 25       		.uleb128 0x25
 2546 09eb DD030000 		.4byte	.LASF72
 2547 09ef 01       		.byte	0x1
 2548 09f0 4D       		.byte	0x4d
 2549 09f1 FB090000 		.4byte	0x9fb
 2550 09f5 05       		.uleb128 0x5
 2551 09f6 03       		.byte	0x3
 2552 09f7 00000000 		.4byte	CapSense_noiseThreshold
 2553 09fb 06       		.uleb128 0x6
 2554 09fc 4E090000 		.4byte	0x94e
 2555 0a00 25       		.uleb128 0x25
 2556 0a01 68050000 		.4byte	.LASF73
 2557 0a05 01       		.byte	0x1
 2558 0a06 51       		.byte	0x51
 2559 0a07 110A0000 		.4byte	0xa11
 2560 0a0b 05       		.uleb128 0x5
 2561 0a0c 03       		.byte	0x3
 2562 0a0d 00000000 		.4byte	CapSense_hysteresis
 2563 0a11 06       		.uleb128 0x6
 2564 0a12 4E090000 		.4byte	0x94e
 2565 0a16 25       		.uleb128 0x25
 2566 0a17 3E050000 		.4byte	.LASF74
 2567 0a1b 01       		.byte	0x1
 2568 0a1c 55       		.byte	0x55
 2569 0a1d 270A0000 		.4byte	0xa27
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 99


 2570 0a21 05       		.uleb128 0x5
 2571 0a22 03       		.byte	0x3
 2572 0a23 00000000 		.4byte	CapSense_debounce
 2573 0a27 06       		.uleb128 0x6
 2574 0a28 4E090000 		.4byte	0x94e
 2575 0a2c 25       		.uleb128 0x25
 2576 0a2d 22000000 		.4byte	.LASF75
 2577 0a31 01       		.byte	0x1
 2578 0a32 5D       		.byte	0x5d
 2579 0a33 3D0A0000 		.4byte	0xa3d
 2580 0a37 05       		.uleb128 0x5
 2581 0a38 03       		.byte	0x3
 2582 0a39 00000000 		.4byte	CapSense_rawDataIndex
 2583 0a3d 06       		.uleb128 0x6
 2584 0a3e 4E090000 		.4byte	0x94e
 2585 0a42 25       		.uleb128 0x25
 2586 0a43 66070000 		.4byte	.LASF76
 2587 0a47 01       		.byte	0x1
 2588 0a48 63       		.byte	0x63
 2589 0a49 530A0000 		.4byte	0xa53
 2590 0a4d 05       		.uleb128 0x5
 2591 0a4e 03       		.byte	0x3
 2592 0a4f 00000000 		.4byte	CapSense_numberOfSensors
 2593 0a53 06       		.uleb128 0x6
 2594 0a54 4E090000 		.4byte	0x94e
 2595 0a58 25       		.uleb128 0x25
 2596 0a59 23040000 		.4byte	.LASF77
 2597 0a5d 01       		.byte	0x1
 2598 0a5e 27       		.byte	0x27
 2599 0a5f 18090000 		.4byte	0x918
 2600 0a63 05       		.uleb128 0x5
 2601 0a64 03       		.byte	0x3
 2602 0a65 00000000 		.4byte	CapSense_rawFilterData1
 2603 0a69 25       		.uleb128 0x25
 2604 0a6a 81050000 		.4byte	.LASF78
 2605 0a6e 01       		.byte	0x1
 2606 0a6f 45       		.byte	0x45
 2607 0a70 6B000000 		.4byte	0x6b
 2608 0a74 05       		.uleb128 0x5
 2609 0a75 03       		.byte	0x3
 2610 0a76 00000000 		.4byte	CapSense_enableRawFilters
 2611 0a7a 26       		.uleb128 0x26
 2612 0a7b 4A020000 		.4byte	.LASF80
 2613 0a7f 03       		.byte	0x3
 2614 0a80 9E       		.byte	0x9e
 2615 0a81 8B0A0000 		.4byte	0xa8b
 2616 0a85 27       		.uleb128 0x27
 2617 0a86 81000000 		.4byte	0x81
 2618 0a8a 00       		.byte	0
 2619 0a8b 28       		.uleb128 0x28
 2620 0a8c 56070000 		.4byte	.LASF86
 2621 0a90 03       		.byte	0x3
 2622 0a91 9D       		.byte	0x9d
 2623 0a92 81000000 		.4byte	0x81
 2624 0a96 29       		.uleb128 0x29
 2625 0a97 FB060000 		.4byte	.LASF87
 2626 0a9b 03       		.byte	0x3
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 100


 2627 0a9c A0       		.byte	0xa0
 2628 0a9d 2A       		.uleb128 0x2a
 2629 0a9e CD060000 		.4byte	.LASF82
 2630 0aa2 04       		.byte	0x4
 2631 0aa3 61       		.byte	0x61
 2632 0aa4 81000000 		.4byte	0x81
 2633 0aa8 B70A0000 		.4byte	0xab7
 2634 0aac 27       		.uleb128 0x27
 2635 0aad AE000000 		.4byte	0xae
 2636 0ab1 27       		.uleb128 0x27
 2637 0ab2 81000000 		.4byte	0x81
 2638 0ab6 00       		.byte	0
 2639 0ab7 2B       		.uleb128 0x2b
 2640 0ab8 0E040000 		.4byte	.LASF88
 2641 0abc 04       		.byte	0x4
 2642 0abd 62       		.byte	0x62
 2643 0abe 27       		.uleb128 0x27
 2644 0abf A8000000 		.4byte	0xa8
 2645 0ac3 27       		.uleb128 0x27
 2646 0ac4 81000000 		.4byte	0x81
 2647 0ac8 27       		.uleb128 0x27
 2648 0ac9 81000000 		.4byte	0x81
 2649 0acd 00       		.byte	0
 2650 0ace 00       		.byte	0
 2651              		.section	.debug_abbrev,"",%progbits
 2652              	.Ldebug_abbrev0:
 2653 0000 01       		.uleb128 0x1
 2654 0001 11       		.uleb128 0x11
 2655 0002 01       		.byte	0x1
 2656 0003 25       		.uleb128 0x25
 2657 0004 0E       		.uleb128 0xe
 2658 0005 13       		.uleb128 0x13
 2659 0006 0B       		.uleb128 0xb
 2660 0007 03       		.uleb128 0x3
 2661 0008 0E       		.uleb128 0xe
 2662 0009 1B       		.uleb128 0x1b
 2663 000a 0E       		.uleb128 0xe
 2664 000b 55       		.uleb128 0x55
 2665 000c 17       		.uleb128 0x17
 2666 000d 11       		.uleb128 0x11
 2667 000e 01       		.uleb128 0x1
 2668 000f 10       		.uleb128 0x10
 2669 0010 17       		.uleb128 0x17
 2670 0011 00       		.byte	0
 2671 0012 00       		.byte	0
 2672 0013 02       		.uleb128 0x2
 2673 0014 24       		.uleb128 0x24
 2674 0015 00       		.byte	0
 2675 0016 0B       		.uleb128 0xb
 2676 0017 0B       		.uleb128 0xb
 2677 0018 3E       		.uleb128 0x3e
 2678 0019 0B       		.uleb128 0xb
 2679 001a 03       		.uleb128 0x3
 2680 001b 0E       		.uleb128 0xe
 2681 001c 00       		.byte	0
 2682 001d 00       		.byte	0
 2683 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 101


 2684 001f 24       		.uleb128 0x24
 2685 0020 00       		.byte	0
 2686 0021 0B       		.uleb128 0xb
 2687 0022 0B       		.uleb128 0xb
 2688 0023 3E       		.uleb128 0x3e
 2689 0024 0B       		.uleb128 0xb
 2690 0025 03       		.uleb128 0x3
 2691 0026 08       		.uleb128 0x8
 2692 0027 00       		.byte	0
 2693 0028 00       		.byte	0
 2694 0029 04       		.uleb128 0x4
 2695 002a 16       		.uleb128 0x16
 2696 002b 00       		.byte	0
 2697 002c 03       		.uleb128 0x3
 2698 002d 0E       		.uleb128 0xe
 2699 002e 3A       		.uleb128 0x3a
 2700 002f 0B       		.uleb128 0xb
 2701 0030 3B       		.uleb128 0x3b
 2702 0031 0B       		.uleb128 0xb
 2703 0032 49       		.uleb128 0x49
 2704 0033 13       		.uleb128 0x13
 2705 0034 00       		.byte	0
 2706 0035 00       		.byte	0
 2707 0036 05       		.uleb128 0x5
 2708 0037 0F       		.uleb128 0xf
 2709 0038 00       		.byte	0
 2710 0039 0B       		.uleb128 0xb
 2711 003a 0B       		.uleb128 0xb
 2712 003b 49       		.uleb128 0x49
 2713 003c 13       		.uleb128 0x13
 2714 003d 00       		.byte	0
 2715 003e 00       		.byte	0
 2716 003f 06       		.uleb128 0x6
 2717 0040 26       		.uleb128 0x26
 2718 0041 00       		.byte	0
 2719 0042 49       		.uleb128 0x49
 2720 0043 13       		.uleb128 0x13
 2721 0044 00       		.byte	0
 2722 0045 00       		.byte	0
 2723 0046 07       		.uleb128 0x7
 2724 0047 2E       		.uleb128 0x2e
 2725 0048 01       		.byte	0x1
 2726 0049 3F       		.uleb128 0x3f
 2727 004a 19       		.uleb128 0x19
 2728 004b 03       		.uleb128 0x3
 2729 004c 0E       		.uleb128 0xe
 2730 004d 3A       		.uleb128 0x3a
 2731 004e 0B       		.uleb128 0xb
 2732 004f 3B       		.uleb128 0x3b
 2733 0050 05       		.uleb128 0x5
 2734 0051 27       		.uleb128 0x27
 2735 0052 19       		.uleb128 0x19
 2736 0053 49       		.uleb128 0x49
 2737 0054 13       		.uleb128 0x13
 2738 0055 20       		.uleb128 0x20
 2739 0056 0B       		.uleb128 0xb
 2740 0057 01       		.uleb128 0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 102


 2741 0058 13       		.uleb128 0x13
 2742 0059 00       		.byte	0
 2743 005a 00       		.byte	0
 2744 005b 08       		.uleb128 0x8
 2745 005c 05       		.uleb128 0x5
 2746 005d 00       		.byte	0
 2747 005e 03       		.uleb128 0x3
 2748 005f 08       		.uleb128 0x8
 2749 0060 3A       		.uleb128 0x3a
 2750 0061 0B       		.uleb128 0xb
 2751 0062 3B       		.uleb128 0x3b
 2752 0063 05       		.uleb128 0x5
 2753 0064 49       		.uleb128 0x49
 2754 0065 13       		.uleb128 0x13
 2755 0066 00       		.byte	0
 2756 0067 00       		.byte	0
 2757 0068 09       		.uleb128 0x9
 2758 0069 34       		.uleb128 0x34
 2759 006a 00       		.byte	0
 2760 006b 03       		.uleb128 0x3
 2761 006c 08       		.uleb128 0x8
 2762 006d 3A       		.uleb128 0x3a
 2763 006e 0B       		.uleb128 0xb
 2764 006f 3B       		.uleb128 0x3b
 2765 0070 05       		.uleb128 0x5
 2766 0071 49       		.uleb128 0x49
 2767 0072 13       		.uleb128 0x13
 2768 0073 00       		.byte	0
 2769 0074 00       		.byte	0
 2770 0075 0A       		.uleb128 0xa
 2771 0076 2E       		.uleb128 0x2e
 2772 0077 01       		.byte	0x1
 2773 0078 3F       		.uleb128 0x3f
 2774 0079 19       		.uleb128 0x19
 2775 007a 03       		.uleb128 0x3
 2776 007b 0E       		.uleb128 0xe
 2777 007c 3A       		.uleb128 0x3a
 2778 007d 0B       		.uleb128 0xb
 2779 007e 3B       		.uleb128 0x3b
 2780 007f 05       		.uleb128 0x5
 2781 0080 27       		.uleb128 0x27
 2782 0081 19       		.uleb128 0x19
 2783 0082 20       		.uleb128 0x20
 2784 0083 0B       		.uleb128 0xb
 2785 0084 01       		.uleb128 0x1
 2786 0085 13       		.uleb128 0x13
 2787 0086 00       		.byte	0
 2788 0087 00       		.byte	0
 2789 0088 0B       		.uleb128 0xb
 2790 0089 05       		.uleb128 0x5
 2791 008a 00       		.byte	0
 2792 008b 03       		.uleb128 0x3
 2793 008c 0E       		.uleb128 0xe
 2794 008d 3A       		.uleb128 0x3a
 2795 008e 0B       		.uleb128 0xb
 2796 008f 3B       		.uleb128 0x3b
 2797 0090 05       		.uleb128 0x5
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 103


 2798 0091 49       		.uleb128 0x49
 2799 0092 13       		.uleb128 0x13
 2800 0093 00       		.byte	0
 2801 0094 00       		.byte	0
 2802 0095 0C       		.uleb128 0xc
 2803 0096 2E       		.uleb128 0x2e
 2804 0097 01       		.byte	0x1
 2805 0098 3F       		.uleb128 0x3f
 2806 0099 19       		.uleb128 0x19
 2807 009a 03       		.uleb128 0x3
 2808 009b 0E       		.uleb128 0xe
 2809 009c 3A       		.uleb128 0x3a
 2810 009d 0B       		.uleb128 0xb
 2811 009e 3B       		.uleb128 0x3b
 2812 009f 0B       		.uleb128 0xb
 2813 00a0 27       		.uleb128 0x27
 2814 00a1 19       		.uleb128 0x19
 2815 00a2 11       		.uleb128 0x11
 2816 00a3 01       		.uleb128 0x1
 2817 00a4 12       		.uleb128 0x12
 2818 00a5 06       		.uleb128 0x6
 2819 00a6 40       		.uleb128 0x40
 2820 00a7 18       		.uleb128 0x18
 2821 00a8 9742     		.uleb128 0x2117
 2822 00aa 19       		.uleb128 0x19
 2823 00ab 01       		.uleb128 0x1
 2824 00ac 13       		.uleb128 0x13
 2825 00ad 00       		.byte	0
 2826 00ae 00       		.byte	0
 2827 00af 0D       		.uleb128 0xd
 2828 00b0 05       		.uleb128 0x5
 2829 00b1 00       		.byte	0
 2830 00b2 03       		.uleb128 0x3
 2831 00b3 0E       		.uleb128 0xe
 2832 00b4 3A       		.uleb128 0x3a
 2833 00b5 0B       		.uleb128 0xb
 2834 00b6 3B       		.uleb128 0x3b
 2835 00b7 0B       		.uleb128 0xb
 2836 00b8 49       		.uleb128 0x49
 2837 00b9 13       		.uleb128 0x13
 2838 00ba 02       		.uleb128 0x2
 2839 00bb 17       		.uleb128 0x17
 2840 00bc 00       		.byte	0
 2841 00bd 00       		.byte	0
 2842 00be 0E       		.uleb128 0xe
 2843 00bf 34       		.uleb128 0x34
 2844 00c0 00       		.byte	0
 2845 00c1 03       		.uleb128 0x3
 2846 00c2 0E       		.uleb128 0xe
 2847 00c3 3A       		.uleb128 0x3a
 2848 00c4 0B       		.uleb128 0xb
 2849 00c5 3B       		.uleb128 0x3b
 2850 00c6 0B       		.uleb128 0xb
 2851 00c7 49       		.uleb128 0x49
 2852 00c8 13       		.uleb128 0x13
 2853 00c9 02       		.uleb128 0x2
 2854 00ca 17       		.uleb128 0x17
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 104


 2855 00cb 00       		.byte	0
 2856 00cc 00       		.byte	0
 2857 00cd 0F       		.uleb128 0xf
 2858 00ce 898201   		.uleb128 0x4109
 2859 00d1 01       		.byte	0x1
 2860 00d2 11       		.uleb128 0x11
 2861 00d3 01       		.uleb128 0x1
 2862 00d4 31       		.uleb128 0x31
 2863 00d5 13       		.uleb128 0x13
 2864 00d6 01       		.uleb128 0x1
 2865 00d7 13       		.uleb128 0x13
 2866 00d8 00       		.byte	0
 2867 00d9 00       		.byte	0
 2868 00da 10       		.uleb128 0x10
 2869 00db 8A8201   		.uleb128 0x410a
 2870 00de 00       		.byte	0
 2871 00df 02       		.uleb128 0x2
 2872 00e0 18       		.uleb128 0x18
 2873 00e1 9142     		.uleb128 0x2111
 2874 00e3 18       		.uleb128 0x18
 2875 00e4 00       		.byte	0
 2876 00e5 00       		.byte	0
 2877 00e6 11       		.uleb128 0x11
 2878 00e7 898201   		.uleb128 0x4109
 2879 00ea 00       		.byte	0
 2880 00eb 11       		.uleb128 0x11
 2881 00ec 01       		.uleb128 0x1
 2882 00ed 31       		.uleb128 0x31
 2883 00ee 13       		.uleb128 0x13
 2884 00ef 00       		.byte	0
 2885 00f0 00       		.byte	0
 2886 00f1 12       		.uleb128 0x12
 2887 00f2 898201   		.uleb128 0x4109
 2888 00f5 01       		.byte	0x1
 2889 00f6 11       		.uleb128 0x11
 2890 00f7 01       		.uleb128 0x1
 2891 00f8 31       		.uleb128 0x31
 2892 00f9 13       		.uleb128 0x13
 2893 00fa 00       		.byte	0
 2894 00fb 00       		.byte	0
 2895 00fc 13       		.uleb128 0x13
 2896 00fd 34       		.uleb128 0x34
 2897 00fe 00       		.byte	0
 2898 00ff 03       		.uleb128 0x3
 2899 0100 08       		.uleb128 0x8
 2900 0101 3A       		.uleb128 0x3a
 2901 0102 0B       		.uleb128 0xb
 2902 0103 3B       		.uleb128 0x3b
 2903 0104 05       		.uleb128 0x5
 2904 0105 49       		.uleb128 0x49
 2905 0106 13       		.uleb128 0x13
 2906 0107 02       		.uleb128 0x2
 2907 0108 17       		.uleb128 0x17
 2908 0109 00       		.byte	0
 2909 010a 00       		.byte	0
 2910 010b 14       		.uleb128 0x14
 2911 010c 2E       		.uleb128 0x2e
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 105


 2912 010d 01       		.byte	0x1
 2913 010e 3F       		.uleb128 0x3f
 2914 010f 19       		.uleb128 0x19
 2915 0110 03       		.uleb128 0x3
 2916 0111 0E       		.uleb128 0xe
 2917 0112 3A       		.uleb128 0x3a
 2918 0113 0B       		.uleb128 0xb
 2919 0114 3B       		.uleb128 0x3b
 2920 0115 05       		.uleb128 0x5
 2921 0116 27       		.uleb128 0x27
 2922 0117 19       		.uleb128 0x19
 2923 0118 11       		.uleb128 0x11
 2924 0119 01       		.uleb128 0x1
 2925 011a 12       		.uleb128 0x12
 2926 011b 06       		.uleb128 0x6
 2927 011c 40       		.uleb128 0x40
 2928 011d 18       		.uleb128 0x18
 2929 011e 9742     		.uleb128 0x2117
 2930 0120 19       		.uleb128 0x19
 2931 0121 01       		.uleb128 0x1
 2932 0122 13       		.uleb128 0x13
 2933 0123 00       		.byte	0
 2934 0124 00       		.byte	0
 2935 0125 15       		.uleb128 0x15
 2936 0126 34       		.uleb128 0x34
 2937 0127 00       		.byte	0
 2938 0128 03       		.uleb128 0x3
 2939 0129 0E       		.uleb128 0xe
 2940 012a 3A       		.uleb128 0x3a
 2941 012b 0B       		.uleb128 0xb
 2942 012c 3B       		.uleb128 0x3b
 2943 012d 05       		.uleb128 0x5
 2944 012e 49       		.uleb128 0x49
 2945 012f 13       		.uleb128 0x13
 2946 0130 02       		.uleb128 0x2
 2947 0131 17       		.uleb128 0x17
 2948 0132 00       		.byte	0
 2949 0133 00       		.byte	0
 2950 0134 16       		.uleb128 0x16
 2951 0135 05       		.uleb128 0x5
 2952 0136 00       		.byte	0
 2953 0137 03       		.uleb128 0x3
 2954 0138 0E       		.uleb128 0xe
 2955 0139 3A       		.uleb128 0x3a
 2956 013a 0B       		.uleb128 0xb
 2957 013b 3B       		.uleb128 0x3b
 2958 013c 05       		.uleb128 0x5
 2959 013d 49       		.uleb128 0x49
 2960 013e 13       		.uleb128 0x13
 2961 013f 02       		.uleb128 0x2
 2962 0140 17       		.uleb128 0x17
 2963 0141 00       		.byte	0
 2964 0142 00       		.byte	0
 2965 0143 17       		.uleb128 0x17
 2966 0144 34       		.uleb128 0x34
 2967 0145 00       		.byte	0
 2968 0146 03       		.uleb128 0x3
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 106


 2969 0147 0E       		.uleb128 0xe
 2970 0148 3A       		.uleb128 0x3a
 2971 0149 0B       		.uleb128 0xb
 2972 014a 3B       		.uleb128 0x3b
 2973 014b 05       		.uleb128 0x5
 2974 014c 49       		.uleb128 0x49
 2975 014d 13       		.uleb128 0x13
 2976 014e 02       		.uleb128 0x2
 2977 014f 18       		.uleb128 0x18
 2978 0150 00       		.byte	0
 2979 0151 00       		.byte	0
 2980 0152 18       		.uleb128 0x18
 2981 0153 1D       		.uleb128 0x1d
 2982 0154 01       		.byte	0x1
 2983 0155 31       		.uleb128 0x31
 2984 0156 13       		.uleb128 0x13
 2985 0157 11       		.uleb128 0x11
 2986 0158 01       		.uleb128 0x1
 2987 0159 12       		.uleb128 0x12
 2988 015a 06       		.uleb128 0x6
 2989 015b 58       		.uleb128 0x58
 2990 015c 0B       		.uleb128 0xb
 2991 015d 59       		.uleb128 0x59
 2992 015e 05       		.uleb128 0x5
 2993 015f 01       		.uleb128 0x1
 2994 0160 13       		.uleb128 0x13
 2995 0161 00       		.byte	0
 2996 0162 00       		.byte	0
 2997 0163 19       		.uleb128 0x19
 2998 0164 05       		.uleb128 0x5
 2999 0165 00       		.byte	0
 3000 0166 31       		.uleb128 0x31
 3001 0167 13       		.uleb128 0x13
 3002 0168 02       		.uleb128 0x2
 3003 0169 17       		.uleb128 0x17
 3004 016a 00       		.byte	0
 3005 016b 00       		.byte	0
 3006 016c 1A       		.uleb128 0x1a
 3007 016d 0B       		.uleb128 0xb
 3008 016e 01       		.byte	0x1
 3009 016f 11       		.uleb128 0x11
 3010 0170 01       		.uleb128 0x1
 3011 0171 12       		.uleb128 0x12
 3012 0172 06       		.uleb128 0x6
 3013 0173 00       		.byte	0
 3014 0174 00       		.byte	0
 3015 0175 1B       		.uleb128 0x1b
 3016 0176 34       		.uleb128 0x34
 3017 0177 00       		.byte	0
 3018 0178 31       		.uleb128 0x31
 3019 0179 13       		.uleb128 0x13
 3020 017a 02       		.uleb128 0x2
 3021 017b 17       		.uleb128 0x17
 3022 017c 00       		.byte	0
 3023 017d 00       		.byte	0
 3024 017e 1C       		.uleb128 0x1c
 3025 017f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 107


 3026 0180 01       		.byte	0x1
 3027 0181 31       		.uleb128 0x31
 3028 0182 13       		.uleb128 0x13
 3029 0183 11       		.uleb128 0x11
 3030 0184 01       		.uleb128 0x1
 3031 0185 12       		.uleb128 0x12
 3032 0186 06       		.uleb128 0x6
 3033 0187 40       		.uleb128 0x40
 3034 0188 18       		.uleb128 0x18
 3035 0189 9742     		.uleb128 0x2117
 3036 018b 19       		.uleb128 0x19
 3037 018c 01       		.uleb128 0x1
 3038 018d 13       		.uleb128 0x13
 3039 018e 00       		.byte	0
 3040 018f 00       		.byte	0
 3041 0190 1D       		.uleb128 0x1d
 3042 0191 2E       		.uleb128 0x2e
 3043 0192 01       		.byte	0x1
 3044 0193 3F       		.uleb128 0x3f
 3045 0194 19       		.uleb128 0x19
 3046 0195 03       		.uleb128 0x3
 3047 0196 0E       		.uleb128 0xe
 3048 0197 3A       		.uleb128 0x3a
 3049 0198 0B       		.uleb128 0xb
 3050 0199 3B       		.uleb128 0x3b
 3051 019a 05       		.uleb128 0x5
 3052 019b 27       		.uleb128 0x27
 3053 019c 19       		.uleb128 0x19
 3054 019d 49       		.uleb128 0x49
 3055 019e 13       		.uleb128 0x13
 3056 019f 11       		.uleb128 0x11
 3057 01a0 01       		.uleb128 0x1
 3058 01a1 12       		.uleb128 0x12
 3059 01a2 06       		.uleb128 0x6
 3060 01a3 40       		.uleb128 0x40
 3061 01a4 18       		.uleb128 0x18
 3062 01a5 9742     		.uleb128 0x2117
 3063 01a7 19       		.uleb128 0x19
 3064 01a8 01       		.uleb128 0x1
 3065 01a9 13       		.uleb128 0x13
 3066 01aa 00       		.byte	0
 3067 01ab 00       		.byte	0
 3068 01ac 1E       		.uleb128 0x1e
 3069 01ad 05       		.uleb128 0x5
 3070 01ae 00       		.byte	0
 3071 01af 03       		.uleb128 0x3
 3072 01b0 0E       		.uleb128 0xe
 3073 01b1 3A       		.uleb128 0x3a
 3074 01b2 0B       		.uleb128 0xb
 3075 01b3 3B       		.uleb128 0x3b
 3076 01b4 05       		.uleb128 0x5
 3077 01b5 49       		.uleb128 0x49
 3078 01b6 13       		.uleb128 0x13
 3079 01b7 02       		.uleb128 0x2
 3080 01b8 18       		.uleb128 0x18
 3081 01b9 00       		.byte	0
 3082 01ba 00       		.byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 108


 3083 01bb 1F       		.uleb128 0x1f
 3084 01bc 05       		.uleb128 0x5
 3085 01bd 00       		.byte	0
 3086 01be 31       		.uleb128 0x31
 3087 01bf 13       		.uleb128 0x13
 3088 01c0 02       		.uleb128 0x2
 3089 01c1 18       		.uleb128 0x18
 3090 01c2 00       		.byte	0
 3091 01c3 00       		.byte	0
 3092 01c4 20       		.uleb128 0x20
 3093 01c5 2E       		.uleb128 0x2e
 3094 01c6 00       		.byte	0
 3095 01c7 3F       		.uleb128 0x3f
 3096 01c8 19       		.uleb128 0x19
 3097 01c9 03       		.uleb128 0x3
 3098 01ca 0E       		.uleb128 0xe
 3099 01cb 3A       		.uleb128 0x3a
 3100 01cc 0B       		.uleb128 0xb
 3101 01cd 3B       		.uleb128 0x3b
 3102 01ce 05       		.uleb128 0x5
 3103 01cf 27       		.uleb128 0x27
 3104 01d0 19       		.uleb128 0x19
 3105 01d1 11       		.uleb128 0x11
 3106 01d2 01       		.uleb128 0x1
 3107 01d3 12       		.uleb128 0x12
 3108 01d4 06       		.uleb128 0x6
 3109 01d5 40       		.uleb128 0x40
 3110 01d6 18       		.uleb128 0x18
 3111 01d7 9742     		.uleb128 0x2117
 3112 01d9 19       		.uleb128 0x19
 3113 01da 00       		.byte	0
 3114 01db 00       		.byte	0
 3115 01dc 21       		.uleb128 0x21
 3116 01dd 01       		.uleb128 0x1
 3117 01de 01       		.byte	0x1
 3118 01df 49       		.uleb128 0x49
 3119 01e0 13       		.uleb128 0x13
 3120 01e1 01       		.uleb128 0x1
 3121 01e2 13       		.uleb128 0x13
 3122 01e3 00       		.byte	0
 3123 01e4 00       		.byte	0
 3124 01e5 22       		.uleb128 0x22
 3125 01e6 21       		.uleb128 0x21
 3126 01e7 00       		.byte	0
 3127 01e8 49       		.uleb128 0x49
 3128 01e9 13       		.uleb128 0x13
 3129 01ea 2F       		.uleb128 0x2f
 3130 01eb 0B       		.uleb128 0xb
 3131 01ec 00       		.byte	0
 3132 01ed 00       		.byte	0
 3133 01ee 23       		.uleb128 0x23
 3134 01ef 34       		.uleb128 0x34
 3135 01f0 00       		.byte	0
 3136 01f1 03       		.uleb128 0x3
 3137 01f2 0E       		.uleb128 0xe
 3138 01f3 3A       		.uleb128 0x3a
 3139 01f4 0B       		.uleb128 0xb
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 109


 3140 01f5 3B       		.uleb128 0x3b
 3141 01f6 0B       		.uleb128 0xb
 3142 01f7 49       		.uleb128 0x49
 3143 01f8 13       		.uleb128 0x13
 3144 01f9 02       		.uleb128 0x2
 3145 01fa 18       		.uleb128 0x18
 3146 01fb 00       		.byte	0
 3147 01fc 00       		.byte	0
 3148 01fd 24       		.uleb128 0x24
 3149 01fe 34       		.uleb128 0x34
 3150 01ff 00       		.byte	0
 3151 0200 03       		.uleb128 0x3
 3152 0201 0E       		.uleb128 0xe
 3153 0202 3A       		.uleb128 0x3a
 3154 0203 0B       		.uleb128 0xb
 3155 0204 3B       		.uleb128 0x3b
 3156 0205 0B       		.uleb128 0xb
 3157 0206 49       		.uleb128 0x49
 3158 0207 13       		.uleb128 0x13
 3159 0208 3F       		.uleb128 0x3f
 3160 0209 19       		.uleb128 0x19
 3161 020a 3C       		.uleb128 0x3c
 3162 020b 19       		.uleb128 0x19
 3163 020c 00       		.byte	0
 3164 020d 00       		.byte	0
 3165 020e 25       		.uleb128 0x25
 3166 020f 34       		.uleb128 0x34
 3167 0210 00       		.byte	0
 3168 0211 03       		.uleb128 0x3
 3169 0212 0E       		.uleb128 0xe
 3170 0213 3A       		.uleb128 0x3a
 3171 0214 0B       		.uleb128 0xb
 3172 0215 3B       		.uleb128 0x3b
 3173 0216 0B       		.uleb128 0xb
 3174 0217 49       		.uleb128 0x49
 3175 0218 13       		.uleb128 0x13
 3176 0219 3F       		.uleb128 0x3f
 3177 021a 19       		.uleb128 0x19
 3178 021b 02       		.uleb128 0x2
 3179 021c 18       		.uleb128 0x18
 3180 021d 00       		.byte	0
 3181 021e 00       		.byte	0
 3182 021f 26       		.uleb128 0x26
 3183 0220 2E       		.uleb128 0x2e
 3184 0221 01       		.byte	0x1
 3185 0222 3F       		.uleb128 0x3f
 3186 0223 19       		.uleb128 0x19
 3187 0224 03       		.uleb128 0x3
 3188 0225 0E       		.uleb128 0xe
 3189 0226 3A       		.uleb128 0x3a
 3190 0227 0B       		.uleb128 0xb
 3191 0228 3B       		.uleb128 0x3b
 3192 0229 0B       		.uleb128 0xb
 3193 022a 27       		.uleb128 0x27
 3194 022b 19       		.uleb128 0x19
 3195 022c 3C       		.uleb128 0x3c
 3196 022d 19       		.uleb128 0x19
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 110


 3197 022e 01       		.uleb128 0x1
 3198 022f 13       		.uleb128 0x13
 3199 0230 00       		.byte	0
 3200 0231 00       		.byte	0
 3201 0232 27       		.uleb128 0x27
 3202 0233 05       		.uleb128 0x5
 3203 0234 00       		.byte	0
 3204 0235 49       		.uleb128 0x49
 3205 0236 13       		.uleb128 0x13
 3206 0237 00       		.byte	0
 3207 0238 00       		.byte	0
 3208 0239 28       		.uleb128 0x28
 3209 023a 2E       		.uleb128 0x2e
 3210 023b 00       		.byte	0
 3211 023c 3F       		.uleb128 0x3f
 3212 023d 19       		.uleb128 0x19
 3213 023e 03       		.uleb128 0x3
 3214 023f 0E       		.uleb128 0xe
 3215 0240 3A       		.uleb128 0x3a
 3216 0241 0B       		.uleb128 0xb
 3217 0242 3B       		.uleb128 0x3b
 3218 0243 0B       		.uleb128 0xb
 3219 0244 27       		.uleb128 0x27
 3220 0245 19       		.uleb128 0x19
 3221 0246 49       		.uleb128 0x49
 3222 0247 13       		.uleb128 0x13
 3223 0248 3C       		.uleb128 0x3c
 3224 0249 19       		.uleb128 0x19
 3225 024a 00       		.byte	0
 3226 024b 00       		.byte	0
 3227 024c 29       		.uleb128 0x29
 3228 024d 2E       		.uleb128 0x2e
 3229 024e 00       		.byte	0
 3230 024f 3F       		.uleb128 0x3f
 3231 0250 19       		.uleb128 0x19
 3232 0251 03       		.uleb128 0x3
 3233 0252 0E       		.uleb128 0xe
 3234 0253 3A       		.uleb128 0x3a
 3235 0254 0B       		.uleb128 0xb
 3236 0255 3B       		.uleb128 0x3b
 3237 0256 0B       		.uleb128 0xb
 3238 0257 27       		.uleb128 0x27
 3239 0258 19       		.uleb128 0x19
 3240 0259 3C       		.uleb128 0x3c
 3241 025a 19       		.uleb128 0x19
 3242 025b 00       		.byte	0
 3243 025c 00       		.byte	0
 3244 025d 2A       		.uleb128 0x2a
 3245 025e 2E       		.uleb128 0x2e
 3246 025f 01       		.byte	0x1
 3247 0260 3F       		.uleb128 0x3f
 3248 0261 19       		.uleb128 0x19
 3249 0262 03       		.uleb128 0x3
 3250 0263 0E       		.uleb128 0xe
 3251 0264 3A       		.uleb128 0x3a
 3252 0265 0B       		.uleb128 0xb
 3253 0266 3B       		.uleb128 0x3b
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 111


 3254 0267 0B       		.uleb128 0xb
 3255 0268 27       		.uleb128 0x27
 3256 0269 19       		.uleb128 0x19
 3257 026a 49       		.uleb128 0x49
 3258 026b 13       		.uleb128 0x13
 3259 026c 3C       		.uleb128 0x3c
 3260 026d 19       		.uleb128 0x19
 3261 026e 01       		.uleb128 0x1
 3262 026f 13       		.uleb128 0x13
 3263 0270 00       		.byte	0
 3264 0271 00       		.byte	0
 3265 0272 2B       		.uleb128 0x2b
 3266 0273 2E       		.uleb128 0x2e
 3267 0274 01       		.byte	0x1
 3268 0275 3F       		.uleb128 0x3f
 3269 0276 19       		.uleb128 0x19
 3270 0277 03       		.uleb128 0x3
 3271 0278 0E       		.uleb128 0xe
 3272 0279 3A       		.uleb128 0x3a
 3273 027a 0B       		.uleb128 0xb
 3274 027b 3B       		.uleb128 0x3b
 3275 027c 0B       		.uleb128 0xb
 3276 027d 27       		.uleb128 0x27
 3277 027e 19       		.uleb128 0x19
 3278 027f 3C       		.uleb128 0x3c
 3279 0280 19       		.uleb128 0x19
 3280 0281 00       		.byte	0
 3281 0282 00       		.byte	0
 3282 0283 00       		.byte	0
 3283              		.section	.debug_loc,"",%progbits
 3284              	.Ldebug_loc0:
 3285              	.LLST0:
 3286 0000 00000000 		.4byte	.LVL0
 3287 0004 1C000000 		.4byte	.LVL3
 3288 0008 0100     		.2byte	0x1
 3289 000a 50       		.byte	0x50
 3290 000b 1C000000 		.4byte	.LVL3
 3291 000f 40000000 		.4byte	.LFE33
 3292 0013 0400     		.2byte	0x4
 3293 0015 F3       		.byte	0xf3
 3294 0016 01       		.uleb128 0x1
 3295 0017 50       		.byte	0x50
 3296 0018 9F       		.byte	0x9f
 3297 0019 00000000 		.4byte	0
 3298 001d 00000000 		.4byte	0
 3299              	.LLST1:
 3300 0021 06000000 		.4byte	.LVL1
 3301 0025 08000000 		.4byte	.LVL2
 3302 0029 0500     		.2byte	0x5
 3303 002b 73       		.byte	0x73
 3304 002c 00       		.sleb128 0
 3305 002d 70       		.byte	0x70
 3306 002e 00       		.sleb128 0
 3307 002f 22       		.byte	0x22
 3308 0030 08000000 		.4byte	.LVL2
 3309 0034 1C000000 		.4byte	.LVL3
 3310 0038 0200     		.2byte	0x2
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 112


 3311 003a 70       		.byte	0x70
 3312 003b 00       		.sleb128 0
 3313 003c 1C000000 		.4byte	.LVL3
 3314 0040 28000000 		.4byte	.LVL4
 3315 0044 0100     		.2byte	0x1
 3316 0046 54       		.byte	0x54
 3317 0047 28000000 		.4byte	.LVL4
 3318 004b 40000000 		.4byte	.LFE33
 3319 004f 0300     		.2byte	0x3
 3320 0051 F3       		.byte	0xf3
 3321 0052 01       		.uleb128 0x1
 3322 0053 50       		.byte	0x50
 3323 0054 00000000 		.4byte	0
 3324 0058 00000000 		.4byte	0
 3325              	.LLST2:
 3326 005c 00000000 		.4byte	.LVL5
 3327 0060 07000000 		.4byte	.LVL6-1
 3328 0064 0100     		.2byte	0x1
 3329 0066 50       		.byte	0x50
 3330 0067 07000000 		.4byte	.LVL6-1
 3331 006b 16000000 		.4byte	.LVL9
 3332 006f 0100     		.2byte	0x1
 3333 0071 54       		.byte	0x54
 3334 0072 16000000 		.4byte	.LVL9
 3335 0076 18000000 		.4byte	.LFE34
 3336 007a 0400     		.2byte	0x4
 3337 007c F3       		.byte	0xf3
 3338 007d 01       		.uleb128 0x1
 3339 007e 50       		.byte	0x50
 3340 007f 9F       		.byte	0x9f
 3341 0080 00000000 		.4byte	0
 3342 0084 00000000 		.4byte	0
 3343              	.LLST3:
 3344 0088 00000000 		.4byte	.LVL10
 3345 008c 08000000 		.4byte	.LVL11
 3346 0090 0200     		.2byte	0x2
 3347 0092 30       		.byte	0x30
 3348 0093 9F       		.byte	0x9f
 3349 0094 08000000 		.4byte	.LVL11
 3350 0098 0E000000 		.4byte	.LVL12
 3351 009c 0200     		.2byte	0x2
 3352 009e 31       		.byte	0x31
 3353 009f 9F       		.byte	0x9f
 3354 00a0 0E000000 		.4byte	.LVL12
 3355 00a4 14000000 		.4byte	.LVL13
 3356 00a8 0200     		.2byte	0x2
 3357 00aa 32       		.byte	0x32
 3358 00ab 9F       		.byte	0x9f
 3359 00ac 14000000 		.4byte	.LVL13
 3360 00b0 16000000 		.4byte	.LFE35
 3361 00b4 0200     		.2byte	0x2
 3362 00b6 33       		.byte	0x33
 3363 00b7 9F       		.byte	0x9f
 3364 00b8 00000000 		.4byte	0
 3365 00bc 00000000 		.4byte	0
 3366              	.LLST4:
 3367 00c0 10000000 		.4byte	.LVL16
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 113


 3368 00c4 28000000 		.4byte	.LVL21
 3369 00c8 0100     		.2byte	0x1
 3370 00ca 54       		.byte	0x54
 3371 00cb 00000000 		.4byte	0
 3372 00cf 00000000 		.4byte	0
 3373              	.LLST5:
 3374 00d3 18000000 		.4byte	.LVL17
 3375 00d7 1E000000 		.4byte	.LVL18
 3376 00db 0100     		.2byte	0x1
 3377 00dd 50       		.byte	0x50
 3378 00de 00000000 		.4byte	0
 3379 00e2 00000000 		.4byte	0
 3380              	.LLST6:
 3381 00e6 00000000 		.4byte	.LVL22
 3382 00ea 12000000 		.4byte	.LVL23
 3383 00ee 0100     		.2byte	0x1
 3384 00f0 50       		.byte	0x50
 3385 00f1 12000000 		.4byte	.LVL23
 3386 00f5 B4000000 		.4byte	.LVL42
 3387 00f9 0100     		.2byte	0x1
 3388 00fb 54       		.byte	0x54
 3389 00fc B4000000 		.4byte	.LVL42
 3390 0100 D8000000 		.4byte	.LFE37
 3391 0104 0400     		.2byte	0x4
 3392 0106 F3       		.byte	0xf3
 3393 0107 01       		.uleb128 0x1
 3394 0108 50       		.byte	0x50
 3395 0109 9F       		.byte	0x9f
 3396 010a 00000000 		.4byte	0
 3397 010e 00000000 		.4byte	0
 3398              	.LLST7:
 3399 0112 86000000 		.4byte	.LVL38
 3400 0116 8E000000 		.4byte	.LVL39
 3401 011a 0100     		.2byte	0x1
 3402 011c 53       		.byte	0x53
 3403 011d 00000000 		.4byte	0
 3404 0121 00000000 		.4byte	0
 3405              	.LLST8:
 3406 0125 3E000000 		.4byte	.LVL31
 3407 0129 42000000 		.4byte	.LVL32
 3408 012d 0200     		.2byte	0x2
 3409 012f 31       		.byte	0x31
 3410 0130 9F       		.byte	0x9f
 3411 0131 46000000 		.4byte	.LVL33
 3412 0135 6A000000 		.4byte	.LVL37
 3413 0139 0200     		.2byte	0x2
 3414 013b 30       		.byte	0x30
 3415 013c 9F       		.byte	0x9f
 3416 013d 00000000 		.4byte	0
 3417 0141 00000000 		.4byte	0
 3418              	.LLST9:
 3419 0145 3E000000 		.4byte	.LVL31
 3420 0149 42000000 		.4byte	.LVL32
 3421 014d 0100     		.2byte	0x1
 3422 014f 55       		.byte	0x55
 3423 0150 46000000 		.4byte	.LVL33
 3424 0154 6A000000 		.4byte	.LVL37
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 114


 3425 0158 0100     		.2byte	0x1
 3426 015a 55       		.byte	0x55
 3427 015b 00000000 		.4byte	0
 3428 015f 00000000 		.4byte	0
 3429              	.LLST10:
 3430 0163 1A000000 		.4byte	.LVL25
 3431 0167 2A000000 		.4byte	.LVL29
 3432 016b 0200     		.2byte	0x2
 3433 016d 72       		.byte	0x72
 3434 016e 00       		.sleb128 0
 3435 016f 2C000000 		.4byte	.LVL30
 3436 0173 50000000 		.4byte	.LVL34
 3437 0177 0100     		.2byte	0x1
 3438 0179 53       		.byte	0x53
 3439 017a 68000000 		.4byte	.LVL36
 3440 017e 86000000 		.4byte	.LVL38
 3441 0182 0100     		.2byte	0x1
 3442 0184 53       		.byte	0x53
 3443 0185 96000000 		.4byte	.LVL40
 3444 0189 98000000 		.4byte	.LVL41
 3445 018d 0100     		.2byte	0x1
 3446 018f 53       		.byte	0x53
 3447 0190 00000000 		.4byte	0
 3448 0194 00000000 		.4byte	0
 3449              	.LLST11:
 3450 0198 00000000 		.4byte	.LVL22
 3451 019c 12000000 		.4byte	.LVL23
 3452 01a0 0200     		.2byte	0x2
 3453 01a2 70       		.byte	0x70
 3454 01a3 00       		.sleb128 0
 3455 01a4 12000000 		.4byte	.LVL23
 3456 01a8 B4000000 		.4byte	.LVL42
 3457 01ac 0200     		.2byte	0x2
 3458 01ae 74       		.byte	0x74
 3459 01af 00       		.sleb128 0
 3460 01b0 B4000000 		.4byte	.LVL42
 3461 01b4 D8000000 		.4byte	.LFE37
 3462 01b8 0300     		.2byte	0x3
 3463 01ba F3       		.byte	0xf3
 3464 01bb 01       		.uleb128 0x1
 3465 01bc 50       		.byte	0x50
 3466 01bd 00000000 		.4byte	0
 3467 01c1 00000000 		.4byte	0
 3468              	.LLST12:
 3469 01c5 1E000000 		.4byte	.LVL26
 3470 01c9 2C000000 		.4byte	.LVL30
 3471 01cd 0A00     		.2byte	0xa
 3472 01cf 74       		.byte	0x74
 3473 01d0 00       		.sleb128 0
 3474 01d1 31       		.byte	0x31
 3475 01d2 24       		.byte	0x24
 3476 01d3 03       		.byte	0x3
 3477 01d4 00000000 		.4byte	CapSense_rawFilterData1
 3478 01d8 22       		.byte	0x22
 3479 01d9 00000000 		.4byte	0
 3480 01dd 00000000 		.4byte	0
 3481              	.LLST13:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 115


 3482 01e1 1E000000 		.4byte	.LVL26
 3483 01e5 2C000000 		.4byte	.LVL30
 3484 01e9 0200     		.2byte	0x2
 3485 01eb 72       		.byte	0x72
 3486 01ec 00       		.sleb128 0
 3487 01ed 00000000 		.4byte	0
 3488 01f1 00000000 		.4byte	0
 3489              	.LLST14:
 3490 01f5 24000000 		.4byte	.LVL27
 3491 01f9 28000000 		.4byte	.LVL28
 3492 01fd 0100     		.2byte	0x1
 3493 01ff 53       		.byte	0x53
 3494 0200 28000000 		.4byte	.LVL28
 3495 0204 2A000000 		.4byte	.LVL29
 3496 0208 0500     		.2byte	0x5
 3497 020a 73       		.byte	0x73
 3498 020b 00       		.sleb128 0
 3499 020c 32       		.byte	0x32
 3500 020d 25       		.byte	0x25
 3501 020e 9F       		.byte	0x9f
 3502 020f 2A000000 		.4byte	.LVL29
 3503 0213 2C000000 		.4byte	.LVL30
 3504 0217 0100     		.2byte	0x1
 3505 0219 53       		.byte	0x53
 3506 021a 00000000 		.4byte	0
 3507 021e 00000000 		.4byte	0
 3508              	.LLST15:
 3509 0222 00000000 		.4byte	.LVL43
 3510 0226 05000000 		.4byte	.LVL44-1
 3511 022a 0100     		.2byte	0x1
 3512 022c 50       		.byte	0x50
 3513 022d 05000000 		.4byte	.LVL44-1
 3514 0231 08000000 		.4byte	.LFE38
 3515 0235 0400     		.2byte	0x4
 3516 0237 F3       		.byte	0xf3
 3517 0238 01       		.uleb128 0x1
 3518 0239 50       		.byte	0x50
 3519 023a 9F       		.byte	0x9f
 3520 023b 00000000 		.4byte	0
 3521 023f 00000000 		.4byte	0
 3522              	.LLST16:
 3523 0243 00000000 		.4byte	.LVL45
 3524 0247 04000000 		.4byte	.LVL46
 3525 024b 0200     		.2byte	0x2
 3526 024d 30       		.byte	0x30
 3527 024e 9F       		.byte	0x9f
 3528 024f 04000000 		.4byte	.LVL46
 3529 0253 1C000000 		.4byte	.LVL52
 3530 0257 0100     		.2byte	0x1
 3531 0259 54       		.byte	0x54
 3532 025a 00000000 		.4byte	0
 3533 025e 00000000 		.4byte	0
 3534              	.LLST17:
 3535 0262 0C000000 		.4byte	.LVL47
 3536 0266 12000000 		.4byte	.LVL49
 3537 026a 0100     		.2byte	0x1
 3538 026c 50       		.byte	0x50
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 116


 3539 026d 00000000 		.4byte	0
 3540 0271 00000000 		.4byte	0
 3541              	.LLST18:
 3542 0275 10000000 		.4byte	.LVL48
 3543 0279 16000000 		.4byte	.LVL50
 3544 027d 0100     		.2byte	0x1
 3545 027f 54       		.byte	0x54
 3546 0280 00000000 		.4byte	0
 3547 0284 00000000 		.4byte	0
 3548              	.LLST19:
 3549 0288 00000000 		.4byte	.LVL53
 3550 028c 0E000000 		.4byte	.LVL55
 3551 0290 0100     		.2byte	0x1
 3552 0292 50       		.byte	0x50
 3553 0293 0E000000 		.4byte	.LVL55
 3554 0297 34000000 		.4byte	.LFE40
 3555 029b 0400     		.2byte	0x4
 3556 029d F3       		.byte	0xf3
 3557 029e 01       		.uleb128 0x1
 3558 029f 50       		.byte	0x50
 3559 02a0 9F       		.byte	0x9f
 3560 02a1 00000000 		.4byte	0
 3561 02a5 00000000 		.4byte	0
 3562              	.LLST20:
 3563 02a9 00000000 		.4byte	.LVL53
 3564 02ad 0E000000 		.4byte	.LVL55
 3565 02b1 0E00     		.2byte	0xe
 3566 02b3 70       		.byte	0x70
 3567 02b4 00       		.sleb128 0
 3568 02b5 03       		.byte	0x3
 3569 02b6 00000000 		.4byte	CapSense_numberOfSensors
 3570 02ba 22       		.byte	0x22
 3571 02bb 94       		.byte	0x94
 3572 02bc 01       		.byte	0x1
 3573 02bd 08       		.byte	0x8
 3574 02be FF       		.byte	0xff
 3575 02bf 1A       		.byte	0x1a
 3576 02c0 9F       		.byte	0x9f
 3577 02c1 0E000000 		.4byte	.LVL55
 3578 02c5 34000000 		.4byte	.LFE40
 3579 02c9 0F00     		.2byte	0xf
 3580 02cb F3       		.byte	0xf3
 3581 02cc 01       		.uleb128 0x1
 3582 02cd 50       		.byte	0x50
 3583 02ce 03       		.byte	0x3
 3584 02cf 00000000 		.4byte	CapSense_numberOfSensors
 3585 02d3 22       		.byte	0x22
 3586 02d4 94       		.byte	0x94
 3587 02d5 01       		.byte	0x1
 3588 02d6 08       		.byte	0x8
 3589 02d7 FF       		.byte	0xff
 3590 02d8 1A       		.byte	0x1a
 3591 02d9 9F       		.byte	0x9f
 3592 02da 00000000 		.4byte	0
 3593 02de 00000000 		.4byte	0
 3594              	.LLST21:
 3595 02e2 0A000000 		.4byte	.LVL54
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 117


 3596 02e6 0E000000 		.4byte	.LVL55
 3597 02ea 0100     		.2byte	0x1
 3598 02ec 54       		.byte	0x54
 3599 02ed 0E000000 		.4byte	.LVL55
 3600 02f1 34000000 		.4byte	.LFE40
 3601 02f5 0F00     		.2byte	0xf
 3602 02f7 F3       		.byte	0xf3
 3603 02f8 01       		.uleb128 0x1
 3604 02f9 50       		.byte	0x50
 3605 02fa 03       		.byte	0x3
 3606 02fb 06000000 		.4byte	.LANCHOR1+6
 3607 02ff 22       		.byte	0x22
 3608 0300 94       		.byte	0x94
 3609 0301 01       		.byte	0x1
 3610 0302 08       		.byte	0x8
 3611 0303 FF       		.byte	0xff
 3612 0304 1A       		.byte	0x1a
 3613 0305 9F       		.byte	0x9f
 3614 0306 00000000 		.4byte	0
 3615 030a 00000000 		.4byte	0
 3616              	.LLST22:
 3617 030e 0E000000 		.4byte	.LVL55
 3618 0312 28000000 		.4byte	.LVL62
 3619 0316 0100     		.2byte	0x1
 3620 0318 55       		.byte	0x55
 3621 0319 28000000 		.4byte	.LVL62
 3622 031d 34000000 		.4byte	.LFE40
 3623 0321 1E00     		.2byte	0x1e
 3624 0323 F3       		.byte	0xf3
 3625 0324 01       		.uleb128 0x1
 3626 0325 50       		.byte	0x50
 3627 0326 03       		.byte	0x3
 3628 0327 06000000 		.4byte	.LANCHOR1+6
 3629 032b 22       		.byte	0x22
 3630 032c 94       		.byte	0x94
 3631 032d 01       		.byte	0x1
 3632 032e 08       		.byte	0x8
 3633 032f FF       		.byte	0xff
 3634 0330 1A       		.byte	0x1a
 3635 0331 F3       		.byte	0xf3
 3636 0332 01       		.uleb128 0x1
 3637 0333 50       		.byte	0x50
 3638 0334 03       		.byte	0x3
 3639 0335 09000000 		.4byte	.LANCHOR1+9
 3640 0339 22       		.byte	0x22
 3641 033a 94       		.byte	0x94
 3642 033b 01       		.byte	0x1
 3643 033c 08       		.byte	0x8
 3644 033d FF       		.byte	0xff
 3645 033e 1A       		.byte	0x1a
 3646 033f 22       		.byte	0x22
 3647 0340 9F       		.byte	0x9f
 3648 0341 00000000 		.4byte	0
 3649 0345 00000000 		.4byte	0
 3650              	.LLST23:
 3651 0349 0E000000 		.4byte	.LVL55
 3652 034d 28000000 		.4byte	.LVL61
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 118


 3653 0351 0100     		.2byte	0x1
 3654 0353 54       		.byte	0x54
 3655 0354 00000000 		.4byte	0
 3656 0358 00000000 		.4byte	0
 3657              	.LLST24:
 3658 035c 1A000000 		.4byte	.LVL56
 3659 0360 20000000 		.4byte	.LVL58
 3660 0364 0100     		.2byte	0x1
 3661 0366 50       		.byte	0x50
 3662 0367 00000000 		.4byte	0
 3663 036b 00000000 		.4byte	0
 3664              	.LLST25:
 3665 036f 1E000000 		.4byte	.LVL57
 3666 0373 24000000 		.4byte	.LVL59
 3667 0377 0100     		.2byte	0x1
 3668 0379 54       		.byte	0x54
 3669 037a 00000000 		.4byte	0
 3670 037e 00000000 		.4byte	0
 3671              	.LLST26:
 3672 0382 00000000 		.4byte	.LVL63
 3673 0386 04000000 		.4byte	.LVL64
 3674 038a 0100     		.2byte	0x1
 3675 038c 50       		.byte	0x50
 3676 038d 04000000 		.4byte	.LVL64
 3677 0391 0C000000 		.4byte	.LFE41
 3678 0395 0400     		.2byte	0x4
 3679 0397 F3       		.byte	0xf3
 3680 0398 01       		.uleb128 0x1
 3681 0399 50       		.byte	0x50
 3682 039a 9F       		.byte	0x9f
 3683 039b 00000000 		.4byte	0
 3684 039f 00000000 		.4byte	0
 3685              	.LLST27:
 3686 03a3 00000000 		.4byte	.LVL65
 3687 03a7 04000000 		.4byte	.LVL66
 3688 03ab 0100     		.2byte	0x1
 3689 03ad 50       		.byte	0x50
 3690 03ae 04000000 		.4byte	.LVL66
 3691 03b2 0C000000 		.4byte	.LFE42
 3692 03b6 0400     		.2byte	0x4
 3693 03b8 F3       		.byte	0xf3
 3694 03b9 01       		.uleb128 0x1
 3695 03ba 50       		.byte	0x50
 3696 03bb 9F       		.byte	0x9f
 3697 03bc 00000000 		.4byte	0
 3698 03c0 00000000 		.4byte	0
 3699              	.LLST28:
 3700 03c4 00000000 		.4byte	.LVL67
 3701 03c8 06000000 		.4byte	.LVL68
 3702 03cc 0100     		.2byte	0x1
 3703 03ce 50       		.byte	0x50
 3704 03cf 06000000 		.4byte	.LVL68
 3705 03d3 0C000000 		.4byte	.LFE43
 3706 03d7 0400     		.2byte	0x4
 3707 03d9 F3       		.byte	0xf3
 3708 03da 01       		.uleb128 0x1
 3709 03db 50       		.byte	0x50
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 119


 3710 03dc 9F       		.byte	0x9f
 3711 03dd 00000000 		.4byte	0
 3712 03e1 00000000 		.4byte	0
 3713              	.LLST29:
 3714 03e5 00000000 		.4byte	.LVL70
 3715 03e9 04000000 		.4byte	.LVL71
 3716 03ed 0100     		.2byte	0x1
 3717 03ef 50       		.byte	0x50
 3718 03f0 04000000 		.4byte	.LVL71
 3719 03f4 0C000000 		.4byte	.LFE45
 3720 03f8 0400     		.2byte	0x4
 3721 03fa F3       		.byte	0xf3
 3722 03fb 01       		.uleb128 0x1
 3723 03fc 50       		.byte	0x50
 3724 03fd 9F       		.byte	0x9f
 3725 03fe 00000000 		.4byte	0
 3726 0402 00000000 		.4byte	0
 3727              	.LLST30:
 3728 0406 00000000 		.4byte	.LVL72
 3729 040a 06000000 		.4byte	.LVL73
 3730 040e 0100     		.2byte	0x1
 3731 0410 50       		.byte	0x50
 3732 0411 06000000 		.4byte	.LVL73
 3733 0415 0C000000 		.4byte	.LFE46
 3734 0419 0400     		.2byte	0x4
 3735 041b F3       		.byte	0xf3
 3736 041c 01       		.uleb128 0x1
 3737 041d 50       		.byte	0x50
 3738 041e 9F       		.byte	0x9f
 3739 041f 00000000 		.4byte	0
 3740 0423 00000000 		.4byte	0
 3741              	.LLST31:
 3742 0427 00000000 		.4byte	.LVL74
 3743 042b 06000000 		.4byte	.LVL75
 3744 042f 0100     		.2byte	0x1
 3745 0431 50       		.byte	0x50
 3746 0432 06000000 		.4byte	.LVL75
 3747 0436 0C000000 		.4byte	.LFE47
 3748 043a 0400     		.2byte	0x4
 3749 043c F3       		.byte	0xf3
 3750 043d 01       		.uleb128 0x1
 3751 043e 50       		.byte	0x50
 3752 043f 9F       		.byte	0x9f
 3753 0440 00000000 		.4byte	0
 3754 0444 00000000 		.4byte	0
 3755              	.LLST32:
 3756 0448 00000000 		.4byte	.LVL76
 3757 044c 02000000 		.4byte	.LVL77
 3758 0450 0100     		.2byte	0x1
 3759 0452 50       		.byte	0x50
 3760 0453 02000000 		.4byte	.LVL77
 3761 0457 04000000 		.4byte	.LFE48
 3762 045b 0400     		.2byte	0x4
 3763 045d F3       		.byte	0xf3
 3764 045e 01       		.uleb128 0x1
 3765 045f 50       		.byte	0x50
 3766 0460 9F       		.byte	0x9f
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 120


 3767 0461 00000000 		.4byte	0
 3768 0465 00000000 		.4byte	0
 3769              	.LLST33:
 3770 0469 00000000 		.4byte	.LVL78
 3771 046d 22000000 		.4byte	.LVL80
 3772 0471 0100     		.2byte	0x1
 3773 0473 50       		.byte	0x50
 3774 0474 22000000 		.4byte	.LVL80
 3775 0478 86000000 		.4byte	.LVL87
 3776 047c 0100     		.2byte	0x1
 3777 047e 54       		.byte	0x54
 3778 047f 86000000 		.4byte	.LVL87
 3779 0483 94000000 		.4byte	.LFE49
 3780 0487 0400     		.2byte	0x4
 3781 0489 F3       		.byte	0xf3
 3782 048a 01       		.uleb128 0x1
 3783 048b 50       		.byte	0x50
 3784 048c 9F       		.byte	0x9f
 3785 048d 00000000 		.4byte	0
 3786 0491 00000000 		.4byte	0
 3787              	.LLST34:
 3788 0495 00000000 		.4byte	.LVL78
 3789 0499 22000000 		.4byte	.LVL80
 3790 049d 0200     		.2byte	0x2
 3791 049f 70       		.byte	0x70
 3792 04a0 00       		.sleb128 0
 3793 04a1 22000000 		.4byte	.LVL80
 3794 04a5 86000000 		.4byte	.LVL87
 3795 04a9 0200     		.2byte	0x2
 3796 04ab 74       		.byte	0x74
 3797 04ac 00       		.sleb128 0
 3798 04ad 86000000 		.4byte	.LVL87
 3799 04b1 94000000 		.4byte	.LFE49
 3800 04b5 0300     		.2byte	0x3
 3801 04b7 F3       		.byte	0xf3
 3802 04b8 01       		.uleb128 0x1
 3803 04b9 50       		.byte	0x50
 3804 04ba 00000000 		.4byte	0
 3805 04be 00000000 		.4byte	0
 3806              	.LLST35:
 3807 04c2 28000000 		.4byte	.LVL82
 3808 04c6 86000000 		.4byte	.LVL87
 3809 04ca 0200     		.2byte	0x2
 3810 04cc 74       		.byte	0x74
 3811 04cd 00       		.sleb128 0
 3812 04ce 86000000 		.4byte	.LVL87
 3813 04d2 94000000 		.4byte	.LFE49
 3814 04d6 0300     		.2byte	0x3
 3815 04d8 F3       		.byte	0xf3
 3816 04d9 01       		.uleb128 0x1
 3817 04da 50       		.byte	0x50
 3818 04db 00000000 		.4byte	0
 3819 04df 00000000 		.4byte	0
 3820              	.LLST36:
 3821 04e3 00000000 		.4byte	.LVL88
 3822 04e7 10000000 		.4byte	.LVL90
 3823 04eb 0100     		.2byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 121


 3824 04ed 50       		.byte	0x50
 3825 04ee 10000000 		.4byte	.LVL90
 3826 04f2 2C000000 		.4byte	.LFE50
 3827 04f6 0400     		.2byte	0x4
 3828 04f8 F3       		.byte	0xf3
 3829 04f9 01       		.uleb128 0x1
 3830 04fa 50       		.byte	0x50
 3831 04fb 9F       		.byte	0x9f
 3832 04fc 00000000 		.4byte	0
 3833 0500 00000000 		.4byte	0
 3834              	.LLST37:
 3835 0504 0A000000 		.4byte	.LVL89
 3836 0508 24000000 		.4byte	.LVL94
 3837 050c 0100     		.2byte	0x1
 3838 050e 54       		.byte	0x54
 3839 050f 00000000 		.4byte	0
 3840 0513 00000000 		.4byte	0
 3841              	.LLST38:
 3842 0517 10000000 		.4byte	.LVL90
 3843 051b 24000000 		.4byte	.LVL96
 3844 051f 0100     		.2byte	0x1
 3845 0521 56       		.byte	0x56
 3846 0522 24000000 		.4byte	.LVL96
 3847 0526 2C000000 		.4byte	.LFE50
 3848 052a 1E00     		.2byte	0x1e
 3849 052c F3       		.byte	0xf3
 3850 052d 01       		.uleb128 0x1
 3851 052e 50       		.byte	0x50
 3852 052f 03       		.byte	0x3
 3853 0530 09000000 		.4byte	.LANCHOR1+9
 3854 0534 22       		.byte	0x22
 3855 0535 94       		.byte	0x94
 3856 0536 01       		.byte	0x1
 3857 0537 08       		.byte	0x8
 3858 0538 FF       		.byte	0xff
 3859 0539 1A       		.byte	0x1a
 3860 053a F3       		.byte	0xf3
 3861 053b 01       		.uleb128 0x1
 3862 053c 50       		.byte	0x50
 3863 053d 03       		.byte	0x3
 3864 053e 06000000 		.4byte	.LANCHOR1+6
 3865 0542 22       		.byte	0x22
 3866 0543 94       		.byte	0x94
 3867 0544 01       		.byte	0x1
 3868 0545 08       		.byte	0x8
 3869 0546 FF       		.byte	0xff
 3870 0547 1A       		.byte	0x1a
 3871 0548 22       		.byte	0x22
 3872 0549 9F       		.byte	0x9f
 3873 054a 00000000 		.4byte	0
 3874 054e 00000000 		.4byte	0
 3875              	.LLST39:
 3876 0552 10000000 		.4byte	.LVL90
 3877 0556 24000000 		.4byte	.LVL95
 3878 055a 0100     		.2byte	0x1
 3879 055c 55       		.byte	0x55
 3880 055d 24000000 		.4byte	.LVL95
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 122


 3881 0561 2C000000 		.4byte	.LFE50
 3882 0565 0100     		.2byte	0x1
 3883 0567 50       		.byte	0x50
 3884 0568 00000000 		.4byte	0
 3885 056c 00000000 		.4byte	0
 3886              	.LLST40:
 3887 0570 00000000 		.4byte	.LVL97
 3888 0574 06000000 		.4byte	.LVL98
 3889 0578 0200     		.2byte	0x2
 3890 057a 30       		.byte	0x30
 3891 057b 9F       		.byte	0x9f
 3892 057c 06000000 		.4byte	.LVL98
 3893 0580 1A000000 		.4byte	.LVL102
 3894 0584 0100     		.2byte	0x1
 3895 0586 54       		.byte	0x54
 3896 0587 00000000 		.4byte	0
 3897 058b 00000000 		.4byte	0
 3898              	.LLST41:
 3899 058f 00000000 		.4byte	.LVL97
 3900 0593 06000000 		.4byte	.LVL98
 3901 0597 0200     		.2byte	0x2
 3902 0599 30       		.byte	0x30
 3903 059a 9F       		.byte	0x9f
 3904 059b 06000000 		.4byte	.LVL98
 3905 059f 1A000000 		.4byte	.LVL103
 3906 05a3 0100     		.2byte	0x1
 3907 05a5 55       		.byte	0x55
 3908 05a6 1A000000 		.4byte	.LVL103
 3909 05aa 1C000000 		.4byte	.LFE51
 3910 05ae 0100     		.2byte	0x1
 3911 05b0 50       		.byte	0x50
 3912 05b1 00000000 		.4byte	0
 3913 05b5 00000000 		.4byte	0
 3914              	.LLST42:
 3915 05b9 00000000 		.4byte	.LVL104
 3916 05bd 10000000 		.4byte	.LVL106
 3917 05c1 0100     		.2byte	0x1
 3918 05c3 50       		.byte	0x50
 3919 05c4 10000000 		.4byte	.LVL106
 3920 05c8 2C000000 		.4byte	.LFE52
 3921 05cc 0400     		.2byte	0x4
 3922 05ce F3       		.byte	0xf3
 3923 05cf 01       		.uleb128 0x1
 3924 05d0 50       		.byte	0x50
 3925 05d1 9F       		.byte	0x9f
 3926 05d2 00000000 		.4byte	0
 3927 05d6 00000000 		.4byte	0
 3928              	.LLST43:
 3929 05da 0A000000 		.4byte	.LVL105
 3930 05de 10000000 		.4byte	.LVL106
 3931 05e2 0500     		.2byte	0x5
 3932 05e4 72       		.byte	0x72
 3933 05e5 00       		.sleb128 0
 3934 05e6 70       		.byte	0x70
 3935 05e7 00       		.sleb128 0
 3936 05e8 22       		.byte	0x22
 3937 05e9 10000000 		.4byte	.LVL106
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 123


 3938 05ed 14000000 		.4byte	.LVL107
 3939 05f1 0100     		.2byte	0x1
 3940 05f3 54       		.byte	0x54
 3941 05f4 14000000 		.4byte	.LVL107
 3942 05f8 1D000000 		.4byte	.LVL108-1
 3943 05fc 0100     		.2byte	0x1
 3944 05fe 51       		.byte	0x51
 3945 05ff 1E000000 		.4byte	.LVL108
 3946 0603 22000000 		.4byte	.LVL109
 3947 0607 0100     		.2byte	0x1
 3948 0609 54       		.byte	0x54
 3949 060a 00000000 		.4byte	0
 3950 060e 00000000 		.4byte	0
 3951              	.LLST44:
 3952 0612 10000000 		.4byte	.LVL106
 3953 0616 22000000 		.4byte	.LVL110
 3954 061a 0100     		.2byte	0x1
 3955 061c 55       		.byte	0x55
 3956 061d 22000000 		.4byte	.LVL110
 3957 0621 2C000000 		.4byte	.LFE52
 3958 0625 1E00     		.2byte	0x1e
 3959 0627 F3       		.byte	0xf3
 3960 0628 01       		.uleb128 0x1
 3961 0629 50       		.byte	0x50
 3962 062a 03       		.byte	0x3
 3963 062b 06000000 		.4byte	.LANCHOR1+6
 3964 062f 22       		.byte	0x22
 3965 0630 94       		.byte	0x94
 3966 0631 01       		.byte	0x1
 3967 0632 08       		.byte	0x8
 3968 0633 FF       		.byte	0xff
 3969 0634 1A       		.byte	0x1a
 3970 0635 F3       		.byte	0xf3
 3971 0636 01       		.uleb128 0x1
 3972 0637 50       		.byte	0x50
 3973 0638 03       		.byte	0x3
 3974 0639 09000000 		.4byte	.LANCHOR1+9
 3975 063d 22       		.byte	0x22
 3976 063e 94       		.byte	0x94
 3977 063f 01       		.byte	0x1
 3978 0640 08       		.byte	0x8
 3979 0641 FF       		.byte	0xff
 3980 0642 1A       		.byte	0x1a
 3981 0643 22       		.byte	0x22
 3982 0644 9F       		.byte	0x9f
 3983 0645 00000000 		.4byte	0
 3984 0649 00000000 		.4byte	0
 3985              	.LLST45:
 3986 064d 00000000 		.4byte	.LVL111
 3987 0651 10000000 		.4byte	.LVL113
 3988 0655 0100     		.2byte	0x1
 3989 0657 50       		.byte	0x50
 3990 0658 10000000 		.4byte	.LVL113
 3991 065c 2C000000 		.4byte	.LFE53
 3992 0660 0400     		.2byte	0x4
 3993 0662 F3       		.byte	0xf3
 3994 0663 01       		.uleb128 0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 124


 3995 0664 50       		.byte	0x50
 3996 0665 9F       		.byte	0x9f
 3997 0666 00000000 		.4byte	0
 3998 066a 00000000 		.4byte	0
 3999              	.LLST46:
 4000 066e 0A000000 		.4byte	.LVL112
 4001 0672 10000000 		.4byte	.LVL113
 4002 0676 0500     		.2byte	0x5
 4003 0678 72       		.byte	0x72
 4004 0679 00       		.sleb128 0
 4005 067a 70       		.byte	0x70
 4006 067b 00       		.sleb128 0
 4007 067c 22       		.byte	0x22
 4008 067d 10000000 		.4byte	.LVL113
 4009 0681 14000000 		.4byte	.LVL114
 4010 0685 0100     		.2byte	0x1
 4011 0687 54       		.byte	0x54
 4012 0688 14000000 		.4byte	.LVL114
 4013 068c 1D000000 		.4byte	.LVL115-1
 4014 0690 0100     		.2byte	0x1
 4015 0692 51       		.byte	0x51
 4016 0693 1E000000 		.4byte	.LVL115
 4017 0697 22000000 		.4byte	.LVL116
 4018 069b 0100     		.2byte	0x1
 4019 069d 54       		.byte	0x54
 4020 069e 00000000 		.4byte	0
 4021 06a2 00000000 		.4byte	0
 4022              	.LLST47:
 4023 06a6 10000000 		.4byte	.LVL113
 4024 06aa 22000000 		.4byte	.LVL117
 4025 06ae 0100     		.2byte	0x1
 4026 06b0 55       		.byte	0x55
 4027 06b1 22000000 		.4byte	.LVL117
 4028 06b5 2C000000 		.4byte	.LFE53
 4029 06b9 1E00     		.2byte	0x1e
 4030 06bb F3       		.byte	0xf3
 4031 06bc 01       		.uleb128 0x1
 4032 06bd 50       		.byte	0x50
 4033 06be 03       		.byte	0x3
 4034 06bf 06000000 		.4byte	.LANCHOR1+6
 4035 06c3 22       		.byte	0x22
 4036 06c4 94       		.byte	0x94
 4037 06c5 01       		.byte	0x1
 4038 06c6 08       		.byte	0x8
 4039 06c7 FF       		.byte	0xff
 4040 06c8 1A       		.byte	0x1a
 4041 06c9 F3       		.byte	0xf3
 4042 06ca 01       		.uleb128 0x1
 4043 06cb 50       		.byte	0x50
 4044 06cc 03       		.byte	0x3
 4045 06cd 09000000 		.4byte	.LANCHOR1+9
 4046 06d1 22       		.byte	0x22
 4047 06d2 94       		.byte	0x94
 4048 06d3 01       		.byte	0x1
 4049 06d4 08       		.byte	0x8
 4050 06d5 FF       		.byte	0xff
 4051 06d6 1A       		.byte	0x1a
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 125


 4052 06d7 22       		.byte	0x22
 4053 06d8 9F       		.byte	0x9f
 4054 06d9 00000000 		.4byte	0
 4055 06dd 00000000 		.4byte	0
 4056              	.LLST48:
 4057 06e1 00000000 		.4byte	.LVL118
 4058 06e5 04000000 		.4byte	.LVL119
 4059 06e9 0100     		.2byte	0x1
 4060 06eb 50       		.byte	0x50
 4061 06ec 04000000 		.4byte	.LVL119
 4062 06f0 0C000000 		.4byte	.LFE54
 4063 06f4 0400     		.2byte	0x4
 4064 06f6 F3       		.byte	0xf3
 4065 06f7 01       		.uleb128 0x1
 4066 06f8 50       		.byte	0x50
 4067 06f9 9F       		.byte	0x9f
 4068 06fa 00000000 		.4byte	0
 4069 06fe 00000000 		.4byte	0
 4070              	.LLST49:
 4071 0702 00000000 		.4byte	.LVL118
 4072 0706 04000000 		.4byte	.LVL119
 4073 070a 0A00     		.2byte	0xa
 4074 070c 70       		.byte	0x70
 4075 070d 00       		.sleb128 0
 4076 070e 0A       		.byte	0xa
 4077 070f FFFF     		.2byte	0xffff
 4078 0711 1A       		.byte	0x1a
 4079 0712 71       		.byte	0x71
 4080 0713 00       		.sleb128 0
 4081 0714 22       		.byte	0x22
 4082 0715 9F       		.byte	0x9f
 4083 0716 06000000 		.4byte	.LVL120
 4084 071a 08000000 		.4byte	.LVL121
 4085 071e 0500     		.2byte	0x5
 4086 0720 70       		.byte	0x70
 4087 0721 00       		.sleb128 0
 4088 0722 32       		.byte	0x32
 4089 0723 25       		.byte	0x25
 4090 0724 9F       		.byte	0x9f
 4091 0725 08000000 		.4byte	.LVL121
 4092 0729 0A000000 		.4byte	.LVL122
 4093 072d 0100     		.2byte	0x1
 4094 072f 50       		.byte	0x50
 4095 0730 00000000 		.4byte	0
 4096 0734 00000000 		.4byte	0
 4097              	.LLST50:
 4098 0738 00000000 		.4byte	.LVL123
 4099 073c 04000000 		.4byte	.LVL124
 4100 0740 0100     		.2byte	0x1
 4101 0742 50       		.byte	0x50
 4102 0743 04000000 		.4byte	.LVL124
 4103 0747 0C000000 		.4byte	.LFE55
 4104 074b 0400     		.2byte	0x4
 4105 074d F3       		.byte	0xf3
 4106 074e 01       		.uleb128 0x1
 4107 074f 50       		.byte	0x50
 4108 0750 9F       		.byte	0x9f
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 126


 4109 0751 00000000 		.4byte	0
 4110 0755 00000000 		.4byte	0
 4111              	.LLST51:
 4112 0759 00000000 		.4byte	.LVL125
 4113 075d 06000000 		.4byte	.LVL126
 4114 0761 0100     		.2byte	0x1
 4115 0763 50       		.byte	0x50
 4116 0764 06000000 		.4byte	.LVL126
 4117 0768 0C000000 		.4byte	.LFE56
 4118 076c 0400     		.2byte	0x4
 4119 076e F3       		.byte	0xf3
 4120 076f 01       		.uleb128 0x1
 4121 0770 50       		.byte	0x50
 4122 0771 9F       		.byte	0x9f
 4123 0772 00000000 		.4byte	0
 4124 0776 00000000 		.4byte	0
 4125              	.LLST52:
 4126 077a 00000000 		.4byte	.LVL127
 4127 077e 04000000 		.4byte	.LVL128
 4128 0782 0100     		.2byte	0x1
 4129 0784 50       		.byte	0x50
 4130 0785 04000000 		.4byte	.LVL128
 4131 0789 0C000000 		.4byte	.LFE57
 4132 078d 0400     		.2byte	0x4
 4133 078f F3       		.byte	0xf3
 4134 0790 01       		.uleb128 0x1
 4135 0791 50       		.byte	0x50
 4136 0792 9F       		.byte	0x9f
 4137 0793 00000000 		.4byte	0
 4138 0797 00000000 		.4byte	0
 4139              		.section	.debug_aranges,"",%progbits
 4140 0000 EC000000 		.4byte	0xec
 4141 0004 0200     		.2byte	0x2
 4142 0006 00000000 		.4byte	.Ldebug_info0
 4143 000a 04       		.byte	0x4
 4144 000b 00       		.byte	0
 4145 000c 0000     		.2byte	0
 4146 000e 0000     		.2byte	0
 4147 0010 00000000 		.4byte	.LFB33
 4148 0014 40000000 		.4byte	.LFE33-.LFB33
 4149 0018 00000000 		.4byte	.LFB34
 4150 001c 18000000 		.4byte	.LFE34-.LFB34
 4151 0020 00000000 		.4byte	.LFB35
 4152 0024 16000000 		.4byte	.LFE35-.LFB35
 4153 0028 00000000 		.4byte	.LFB36
 4154 002c 30000000 		.4byte	.LFE36-.LFB36
 4155 0030 00000000 		.4byte	.LFB37
 4156 0034 D8000000 		.4byte	.LFE37-.LFB37
 4157 0038 00000000 		.4byte	.LFB38
 4158 003c 08000000 		.4byte	.LFE38-.LFB38
 4159 0040 00000000 		.4byte	.LFB39
 4160 0044 24000000 		.4byte	.LFE39-.LFB39
 4161 0048 00000000 		.4byte	.LFB40
 4162 004c 34000000 		.4byte	.LFE40-.LFB40
 4163 0050 00000000 		.4byte	.LFB41
 4164 0054 0C000000 		.4byte	.LFE41-.LFB41
 4165 0058 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 127


 4166 005c 0C000000 		.4byte	.LFE42-.LFB42
 4167 0060 00000000 		.4byte	.LFB43
 4168 0064 0C000000 		.4byte	.LFE43-.LFB43
 4169 0068 00000000 		.4byte	.LFB44
 4170 006c 0C000000 		.4byte	.LFE44-.LFB44
 4171 0070 00000000 		.4byte	.LFB45
 4172 0074 0C000000 		.4byte	.LFE45-.LFB45
 4173 0078 00000000 		.4byte	.LFB46
 4174 007c 0C000000 		.4byte	.LFE46-.LFB46
 4175 0080 00000000 		.4byte	.LFB47
 4176 0084 0C000000 		.4byte	.LFE47-.LFB47
 4177 0088 00000000 		.4byte	.LFB48
 4178 008c 04000000 		.4byte	.LFE48-.LFB48
 4179 0090 00000000 		.4byte	.LFB49
 4180 0094 94000000 		.4byte	.LFE49-.LFB49
 4181 0098 00000000 		.4byte	.LFB50
 4182 009c 2C000000 		.4byte	.LFE50-.LFB50
 4183 00a0 00000000 		.4byte	.LFB51
 4184 00a4 1C000000 		.4byte	.LFE51-.LFB51
 4185 00a8 00000000 		.4byte	.LFB52
 4186 00ac 2C000000 		.4byte	.LFE52-.LFB52
 4187 00b0 00000000 		.4byte	.LFB53
 4188 00b4 2C000000 		.4byte	.LFE53-.LFB53
 4189 00b8 00000000 		.4byte	.LFB54
 4190 00bc 0C000000 		.4byte	.LFE54-.LFB54
 4191 00c0 00000000 		.4byte	.LFB55
 4192 00c4 0C000000 		.4byte	.LFE55-.LFB55
 4193 00c8 00000000 		.4byte	.LFB56
 4194 00cc 0C000000 		.4byte	.LFE56-.LFB56
 4195 00d0 00000000 		.4byte	.LFB57
 4196 00d4 0C000000 		.4byte	.LFE57-.LFB57
 4197 00d8 00000000 		.4byte	.LFB58
 4198 00dc 0C000000 		.4byte	.LFE58-.LFB58
 4199 00e0 00000000 		.4byte	.LFB59
 4200 00e4 0C000000 		.4byte	.LFE59-.LFB59
 4201 00e8 00000000 		.4byte	0
 4202 00ec 00000000 		.4byte	0
 4203              		.section	.debug_ranges,"",%progbits
 4204              	.Ldebug_ranges0:
 4205 0000 00000000 		.4byte	.LFB33
 4206 0004 40000000 		.4byte	.LFE33
 4207 0008 00000000 		.4byte	.LFB34
 4208 000c 18000000 		.4byte	.LFE34
 4209 0010 00000000 		.4byte	.LFB35
 4210 0014 16000000 		.4byte	.LFE35
 4211 0018 00000000 		.4byte	.LFB36
 4212 001c 30000000 		.4byte	.LFE36
 4213 0020 00000000 		.4byte	.LFB37
 4214 0024 D8000000 		.4byte	.LFE37
 4215 0028 00000000 		.4byte	.LFB38
 4216 002c 08000000 		.4byte	.LFE38
 4217 0030 00000000 		.4byte	.LFB39
 4218 0034 24000000 		.4byte	.LFE39
 4219 0038 00000000 		.4byte	.LFB40
 4220 003c 34000000 		.4byte	.LFE40
 4221 0040 00000000 		.4byte	.LFB41
 4222 0044 0C000000 		.4byte	.LFE41
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 128


 4223 0048 00000000 		.4byte	.LFB42
 4224 004c 0C000000 		.4byte	.LFE42
 4225 0050 00000000 		.4byte	.LFB43
 4226 0054 0C000000 		.4byte	.LFE43
 4227 0058 00000000 		.4byte	.LFB44
 4228 005c 0C000000 		.4byte	.LFE44
 4229 0060 00000000 		.4byte	.LFB45
 4230 0064 0C000000 		.4byte	.LFE45
 4231 0068 00000000 		.4byte	.LFB46
 4232 006c 0C000000 		.4byte	.LFE46
 4233 0070 00000000 		.4byte	.LFB47
 4234 0074 0C000000 		.4byte	.LFE47
 4235 0078 00000000 		.4byte	.LFB48
 4236 007c 04000000 		.4byte	.LFE48
 4237 0080 00000000 		.4byte	.LFB49
 4238 0084 94000000 		.4byte	.LFE49
 4239 0088 00000000 		.4byte	.LFB50
 4240 008c 2C000000 		.4byte	.LFE50
 4241 0090 00000000 		.4byte	.LFB51
 4242 0094 1C000000 		.4byte	.LFE51
 4243 0098 00000000 		.4byte	.LFB52
 4244 009c 2C000000 		.4byte	.LFE52
 4245 00a0 00000000 		.4byte	.LFB53
 4246 00a4 2C000000 		.4byte	.LFE53
 4247 00a8 00000000 		.4byte	.LFB54
 4248 00ac 0C000000 		.4byte	.LFE54
 4249 00b0 00000000 		.4byte	.LFB55
 4250 00b4 0C000000 		.4byte	.LFE55
 4251 00b8 00000000 		.4byte	.LFB56
 4252 00bc 0C000000 		.4byte	.LFE56
 4253 00c0 00000000 		.4byte	.LFB57
 4254 00c4 0C000000 		.4byte	.LFE57
 4255 00c8 00000000 		.4byte	.LFB58
 4256 00cc 0C000000 		.4byte	.LFE58
 4257 00d0 00000000 		.4byte	.LFB59
 4258 00d4 0C000000 		.4byte	.LFE59
 4259 00d8 00000000 		.4byte	0
 4260 00dc 00000000 		.4byte	0
 4261              		.section	.debug_line,"",%progbits
 4262              	.Ldebug_line0:
 4263 0000 90030000 		.section	.debug_str,"MS",%progbits,1
 4263      02006C00 
 4263      00000201 
 4263      FB0E0D00 
 4263      01010101 
 4264              	.LASF10:
 4265 0000 75696E74 		.ascii	"uint16\000"
 4265      313600
 4266              	.LASF27:
 4267 0007 66696C74 		.ascii	"filteredRawData\000"
 4267      65726564 
 4267      52617744 
 4267      61746100 
 4268              	.LASF33:
 4269 0017 6C617374 		.ascii	"lastSensor\000"
 4269      53656E73 
 4269      6F7200
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 129


 4270              	.LASF75:
 4271 0022 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4271      656E7365 
 4271      5F726177 
 4271      44617461 
 4271      496E6465 
 4272              	.LASF68:
 4273 0038 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4273      656E7365 
 4273      5F73656E 
 4273      736F724F 
 4273      6E4D6173 
 4274              	.LASF43:
 4275 004e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4275      656E7365 
 4275      5F476574 
 4275      4E656761 
 4275      74697665 
 4276              	.LASF47:
 4277 0071 66696E67 		.ascii	"fingerThreshold\000"
 4277      65725468 
 4277      72657368 
 4277      6F6C6400 
 4278              	.LASF30:
 4279 0081 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4279      656E7365 
 4279      5F557064 
 4279      61746557 
 4279      69646765 
 4280              	.LASF58:
 4281 009f 43617053 		.ascii	"CapSense_GetDebounce\000"
 4281      656E7365 
 4281      5F476574 
 4281      4465626F 
 4281      756E6365 
 4282              	.LASF7:
 4283 00b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4283      206C6F6E 
 4283      6720756E 
 4283      7369676E 
 4283      65642069 
 4284              	.LASF67:
 4285 00cb 43617053 		.ascii	"CapSense_sensorSignal\000"
 4285      656E7365 
 4285      5F73656E 
 4285      736F7253 
 4285      69676E61 
 4286              	.LASF41:
 4287 00e1 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4287      656E7365 
 4287      5F476574 
 4287      4E6F6973 
 4287      65546872 
 4288              	.LASF21:
 4289 00fc 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4289      656E7365 
 4289      5F496E69 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 130


 4289      7469616C 
 4289      697A6545 
 4290              	.LASF29:
 4291 0120 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4291      656E7365 
 4291      5F557064 
 4291      61746545 
 4291      6E61626C 
 4292              	.LASF6:
 4293 0140 6C6F6E67 		.ascii	"long long int\000"
 4293      206C6F6E 
 4293      6720696E 
 4293      7400
 4294              	.LASF0:
 4295 014e 7369676E 		.ascii	"signed char\000"
 4295      65642063 
 4295      68617200 
 4296              	.LASF55:
 4297 015a 43617053 		.ascii	"CapSense_DisableWidget\000"
 4297      656E7365 
 4297      5F446973 
 4297      61626C65 
 4297      57696467 
 4298              	.LASF50:
 4299 0171 72617749 		.ascii	"rawIndex\000"
 4299      6E646578 
 4299      00
 4300              	.LASF36:
 4301 017a 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4301      656E7365 
 4301      5F476574 
 4301      42617365 
 4301      6C696E65 
 4302              	.LASF52:
 4303 0193 73746174 		.ascii	"state\000"
 4303      6500
 4304              	.LASF4:
 4305 0199 6C6F6E67 		.ascii	"long int\000"
 4305      20696E74 
 4305      00
 4306              	.LASF53:
 4307 01a2 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4307      656E7365 
 4307      5F436865 
 4307      636B4973 
 4307      416E7957 
 4308              	.LASF9:
 4309 01c2 75696E74 		.ascii	"uint8\000"
 4309      3800
 4310              	.LASF70:
 4311 01c8 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4311      656E7365 
 4311      5F6C6F77 
 4311      42617365 
 4311      6C696E65 
 4312              	.LASF60:
 4313 01e2 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 131


 4313      656E7365 
 4313      5F446973 
 4313      61626C65 
 4313      52617744 
 4314              	.LASF13:
 4315 0201 646F7562 		.ascii	"double\000"
 4315      6C6500
 4316              	.LASF64:
 4317 0208 43617053 		.ascii	"CapSense_widgetNumber\000"
 4317      656E7365 
 4317      5F776964 
 4317      6765744E 
 4317      756D6265 
 4318              	.LASF11:
 4319 021e 75696E74 		.ascii	"uint32\000"
 4319      333200
 4320              	.LASF48:
 4321 0225 68797374 		.ascii	"hysteresis\000"
 4321      65726573 
 4321      697300
 4322              	.LASF39:
 4323 0230 76616C75 		.ascii	"value\000"
 4323      6500
 4324              	.LASF81:
 4325 0236 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4325      656E7365 
 4325      5F494952 
 4325      3446696C 
 4325      74657200 
 4326              	.LASF80:
 4327 024a 43617053 		.ascii	"CapSense_ScanSensor\000"
 4327      656E7365 
 4327      5F536361 
 4327      6E53656E 
 4327      736F7200 
 4328              	.LASF8:
 4329 025e 756E7369 		.ascii	"unsigned int\000"
 4329      676E6564 
 4329      20696E74 
 4329      00
 4330              	.LASF5:
 4331 026b 6C6F6E67 		.ascii	"long unsigned int\000"
 4331      20756E73 
 4331      69676E65 
 4331      6420696E 
 4331      7400
 4332              	.LASF66:
 4333 027d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4333      656E7365 
 4333      5F73656E 
 4333      736F7242 
 4333      6173656C 
 4334              	.LASF23:
 4335 0298 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4335      656E7365 
 4335      5F557064 
 4335      61746542 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 132


 4335      6173656C 
 4336              	.LASF35:
 4337 02bb 64617461 		.ascii	"data\000"
 4337      00
 4338              	.LASF3:
 4339 02c0 73686F72 		.ascii	"short unsigned int\000"
 4339      7420756E 
 4339      7369676E 
 4339      65642069 
 4339      6E7400
 4340              	.LASF16:
 4341 02d3 73656E73 		.ascii	"sensor\000"
 4341      6F7200
 4342              	.LASF63:
 4343 02da 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4343      656E7365 
 4343      5F73656E 
 4343      736F7245 
 4343      6E61626C 
 4344              	.LASF79:
 4345 02f4 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4345      656E7365 
 4345      5F557064 
 4345      61746553 
 4345      656E736F 
 4346              	.LASF24:
 4347 0312 63616C63 		.ascii	"calc\000"
 4347      00
 4348              	.LASF84:
 4349 0317 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4349      6E657261 
 4349      7465645F 
 4349      536F7572 
 4349      63655C50 
 4350              	.LASF37:
 4351 0340 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4351      656E7365 
 4351      5F476574 
 4351      44696666 
 4351      436F756E 
 4352              	.LASF45:
 4353 035a 6465626F 		.ascii	"debounce\000"
 4353      756E6365 
 4353      00
 4354              	.LASF15:
 4355 0363 73697A65 		.ascii	"sizetype\000"
 4355      74797065 
 4355      00
 4356              	.LASF54:
 4357 036c 43617053 		.ascii	"CapSense_EnableWidget\000"
 4357      656E7365 
 4357      5F456E61 
 4357      626C6557 
 4357      69646765 
 4358              	.LASF18:
 4359 0382 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4359      656E7365 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 133


 4359      5F496E69 
 4359      7469616C 
 4359      697A6553 
 4360              	.LASF44:
 4361 03a4 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4361      656E7365 
 4361      5F436865 
 4361      636B4973 
 4361      53656E73 
 4362              	.LASF40:
 4363 03c1 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4363      656E7365 
 4363      5F476574 
 4363      46696E67 
 4363      65725468 
 4364              	.LASF72:
 4365 03dd 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4365      656E7365 
 4365      5F6E6F69 
 4365      73655468 
 4365      72657368 
 4366              	.LASF71:
 4367 03f5 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4367      656E7365 
 4367      5F66696E 
 4367      67657254 
 4367      68726573 
 4368              	.LASF88:
 4369 040e 43617053 		.ascii	"CapSense_SetBitValue\000"
 4369      656E7365 
 4369      5F536574 
 4369      42697456 
 4369      616C7565 
 4370              	.LASF77:
 4371 0423 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4371      656E7365 
 4371      5F726177 
 4371      46696C74 
 4371      65724461 
 4372              	.LASF12:
 4373 043b 666C6F61 		.ascii	"float\000"
 4373      7400
 4374              	.LASF57:
 4375 0441 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4375      656E7365 
 4375      5F476574 
 4375      4C6F7742 
 4375      6173656C 
 4376              	.LASF49:
 4377 045e 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4377      656E7365 
 4377      5F436865 
 4377      636B4973 
 4377      57696467 
 4378              	.LASF32:
 4379 047b 66697273 		.ascii	"firstSensor\000"
 4379      7453656E 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 134


 4379      736F7200 
 4380              	.LASF1:
 4381 0487 756E7369 		.ascii	"unsigned char\000"
 4381      676E6564 
 4381      20636861 
 4381      7200
 4382              	.LASF19:
 4383 0495 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4383      656E7365 
 4383      5F496E69 
 4383      7469616C 
 4383      697A6541 
 4384              	.LASF34:
 4385 04b5 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4385      656E7365 
 4385      5F536574 
 4385      42617365 
 4385      6C696E65 
 4386              	.LASF28:
 4387 04ce 6E6F6973 		.ascii	"noiseThreshold\000"
 4387      65546872 
 4387      6573686F 
 4387      6C6400
 4388              	.LASF2:
 4389 04dd 73686F72 		.ascii	"short int\000"
 4389      7420696E 
 4389      7400
 4390              	.LASF20:
 4391 04e7 77696467 		.ascii	"widget\000"
 4391      657400
 4392              	.LASF22:
 4393 04ee 69735365 		.ascii	"isSensorEnabled\000"
 4393      6E736F72 
 4393      456E6162 
 4393      6C656400 
 4394              	.LASF17:
 4395 04fe 43617053 		.ascii	"CapSense_BaseInit\000"
 4395      656E7365 
 4395      5F426173 
 4395      65496E69 
 4395      7400
 4396              	.LASF31:
 4397 0510 73656E73 		.ascii	"sensorsPerWidget\000"
 4397      6F727350 
 4397      65725769 
 4397      64676574 
 4397      00
 4398              	.LASF69:
 4399 0521 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4399      656E7365 
 4399      5F6C6F77 
 4399      42617365 
 4399      6C696E65 
 4400              	.LASF74:
 4401 053e 43617053 		.ascii	"CapSense_debounce\000"
 4401      656E7365 
 4401      5F646562 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 135


 4401      6F756E63 
 4401      6500
 4402              	.LASF65:
 4403 0550 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4403      656E7365 
 4403      5F73656E 
 4403      736F7242 
 4403      6173656C 
 4404              	.LASF73:
 4405 0568 43617053 		.ascii	"CapSense_hysteresis\000"
 4405      656E7365 
 4405      5F687973 
 4405      74657265 
 4405      73697300 
 4406              	.LASF14:
 4407 057c 63686172 		.ascii	"char\000"
 4407      00
 4408              	.LASF78:
 4409 0581 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4409      656E7365 
 4409      5F656E61 
 4409      626C6552 
 4409      61774669 
 4410              	.LASF83:
 4411 059b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4411      4320342E 
 4411      382E3420 
 4411      32303134 
 4411      30353236 
 4412 05ce 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4412      20726576 
 4412      6973696F 
 4412      6E203231 
 4412      31333538 
 4413 0601 73202D66 		.ascii	"s -ffunction-sections\000"
 4413      66756E63 
 4413      74696F6E 
 4413      2D736563 
 4413      74696F6E 
 4414              	.LASF42:
 4415 0617 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4415      656E7365 
 4415      5F476574 
 4415      46696E67 
 4415      65724879 
 4416              	.LASF85:
 4417 0634 443A5C77 		.ascii	"D:\\wifi_work\\450B_code\\new_board\\newboard_0527_"
 4417      6966695F 
 4417      776F726B 
 4417      5C343530 
 4417      425F636F 
 4418 0663 626F6F74 		.ascii	"boot\\UART_Bootloadable.cydsn\000"
 4418      5C554152 
 4418      545F426F 
 4418      6F746C6F 
 4418      61646162 
 4419              	.LASF46:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 136


 4420 0680 6465626F 		.ascii	"debounceIndex\000"
 4420      756E6365 
 4420      496E6465 
 4420      7800
 4421              	.LASF25:
 4422 068e 7369676E 		.ascii	"sign\000"
 4422      00
 4423              	.LASF51:
 4424 0693 6E756D4F 		.ascii	"numOfSensors\000"
 4424      6653656E 
 4424      736F7273 
 4424      00
 4425              	.LASF62:
 4426 06a0 43617053 		.ascii	"CapSense_sensorRaw\000"
 4426      656E7365 
 4426      5F73656E 
 4426      736F7252 
 4426      617700
 4427              	.LASF38:
 4428 06b3 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4428      656E7365 
 4428      5F536574 
 4428      44696666 
 4428      436F756E 
 4429              	.LASF82:
 4430 06cd 43617053 		.ascii	"CapSense_GetBitValue\000"
 4430      656E7365 
 4430      5F476574 
 4430      42697456 
 4430      616C7565 
 4431              	.LASF56:
 4432 06e2 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4432      656E7365 
 4432      5F476574 
 4432      57696467 
 4432      65744E75 
 4433              	.LASF87:
 4434 06fb 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4434      656E7365 
 4434      5F536361 
 4434      6E456E61 
 4434      626C6564 
 4435              	.LASF59:
 4436 0717 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4436      656E7365 
 4436      5F456E61 
 4436      626C6552 
 4436      61774461 
 4437              	.LASF61:
 4438 0735 43617053 		.ascii	"CapSense_debounceCounter\000"
 4438      656E7365 
 4438      5F646562 
 4438      6F756E63 
 4438      65436F75 
 4439              	.LASF26:
 4440 074e 74656D70 		.ascii	"tempRaw\000"
 4440      52617700 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCzthOk.s 			page 137


 4441              	.LASF86:
 4442 0756 43617053 		.ascii	"CapSense_IsBusy\000"
 4442      656E7365 
 4442      5F497342 
 4442      75737900 
 4443              	.LASF76:
 4444 0766 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4444      656E7365 
 4444      5F6E756D 
 4444      6265724F 
 4444      6653656E 
 4445              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
