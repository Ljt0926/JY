ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Timer_Init,"ax",%progbits
  18              		.align	1
  19              		.global	Timer_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	Timer_Init, %function
  23              	Timer_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Timer.c"
   1:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:.\Generated_Source\PSoC4/Timer.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/Timer.c **** *
   5:.\Generated_Source\PSoC4/Timer.c **** * Description:
   6:.\Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:.\Generated_Source\PSoC4/Timer.c **** *  component
   8:.\Generated_Source\PSoC4/Timer.c **** *
   9:.\Generated_Source\PSoC4/Timer.c **** * Note:
  10:.\Generated_Source\PSoC4/Timer.c **** *  None
  11:.\Generated_Source\PSoC4/Timer.c **** *
  12:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Timer.c **** 
  19:.\Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:.\Generated_Source\PSoC4/Timer.c **** 
  21:.\Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  22:.\Generated_Source\PSoC4/Timer.c **** 
  23:.\Generated_Source\PSoC4/Timer.c **** 
  24:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  26:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/Timer.c **** *
  28:.\Generated_Source\PSoC4/Timer.c **** * Summary:
  29:.\Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  30:.\Generated_Source\PSoC4/Timer.c **** *
  31:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
  32:.\Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 2


  33:.\Generated_Source\PSoC4/Timer.c **** *
  34:.\Generated_Source\PSoC4/Timer.c **** * Return:
  35:.\Generated_Source\PSoC4/Timer.c **** *  None
  36:.\Generated_Source\PSoC4/Timer.c **** *
  37:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  39:.\Generated_Source\PSoC4/Timer.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/Timer.c **** 
  41:.\Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  43:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/Timer.c ****         
  45:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/Timer.c **** 
  48:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/Timer.c ****         
  51:.\Generated_Source\PSoC4/Timer.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetCounterMode(Timer_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/Timer.c ****         Timer_WriteCounter(Timer_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  56:.\Generated_Source\PSoC4/Timer.c **** 
  57:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  58:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_TIMER_BASE_CONFIG;
  28              		.loc 1 58 0
  29 0000 084A     		ldr	r2, .L2
  30 0002 0023     		mov	r3, #0
  31 0004 1360     		str	r3, [r2]
  59:.\Generated_Source\PSoC4/Timer.c ****         
  60:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_TIMER_SIGNALS_MODES;
  32              		.loc 1 61 0
  33 0006 084A     		ldr	r2, .L2+4
  34 0008 0C21     		mov	r1, #12
  35 000a 1160     		str	r1, [r2]
  36              	.LVL0:
  37              	.LBB10:
  38              	.LBB11:
  62:.\Generated_Source\PSoC4/Timer.c ****     
  63:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/Timer.c ****         
  66:.\Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/Timer.c **** 
  69:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/Timer.c **** 
  72:.\Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 3


  77:.\Generated_Source\PSoC4/Timer.c **** 
  78:.\Generated_Source\PSoC4/Timer.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/Timer.c ****         #elif(Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/Timer.c ****         #else
  84:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  87:.\Generated_Source\PSoC4/Timer.c **** 
  88:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  89:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/Timer.c **** 
  91:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  92:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/Timer.c ****         #else
  95:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_ALIGN | Timer_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/Timer.c ****             
  97:.\Generated_Source\PSoC4/Timer.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/Timer.c ****             #elif (Timer__RIGHT == Timer_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/Timer.c ****             #else 
 103:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 106:.\Generated_Source\PSoC4/Timer.c **** 
 107:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
 108:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
 110:.\Generated_Source\PSoC4/Timer.c **** 
 111:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
 112:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
 114:.\Generated_Source\PSoC4/Timer.c **** 
 115:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/Timer.c ****     
 118:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/Timer.c **** 
 121:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 123:.\Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/Timer.c ****         #else
 128:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/Timer.c **** 
 132:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 4


 134:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/Timer.c **** 
 136:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/Timer.c **** 
 140:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 144:.\Generated_Source\PSoC4/Timer.c **** 
 145:.\Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/Timer.c **** 
 149:.\Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/Timer.c **** 
 154:.\Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 159:.\Generated_Source\PSoC4/Timer.c ****     
 160:.\Generated_Source\PSoC4/Timer.c **** }
 161:.\Generated_Source\PSoC4/Timer.c **** 
 162:.\Generated_Source\PSoC4/Timer.c **** 
 163:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 165:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/Timer.c **** *
 167:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 168:.\Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 169:.\Generated_Source\PSoC4/Timer.c **** *
 170:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 171:.\Generated_Source\PSoC4/Timer.c **** *  None
 172:.\Generated_Source\PSoC4/Timer.c **** *
 173:.\Generated_Source\PSoC4/Timer.c **** * Return:
 174:.\Generated_Source\PSoC4/Timer.c **** *  None
 175:.\Generated_Source\PSoC4/Timer.c **** *
 176:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 178:.\Generated_Source\PSoC4/Timer.c **** {
 179:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/Timer.c **** 
 181:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 183:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/Timer.c **** 
 185:.\Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 187:.\Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 189:.\Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 5


 191:.\Generated_Source\PSoC4/Timer.c **** 
 192:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 193:.\Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 195:.\Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 197:.\Generated_Source\PSoC4/Timer.c **** }
 198:.\Generated_Source\PSoC4/Timer.c **** 
 199:.\Generated_Source\PSoC4/Timer.c **** 
 200:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
 202:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/Timer.c **** *
 204:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 205:.\Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 206:.\Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 207:.\Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/Timer.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/Timer.c **** *
 210:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 211:.\Generated_Source\PSoC4/Timer.c **** *  None
 212:.\Generated_Source\PSoC4/Timer.c **** *
 213:.\Generated_Source\PSoC4/Timer.c **** * Return:
 214:.\Generated_Source\PSoC4/Timer.c **** *  None
 215:.\Generated_Source\PSoC4/Timer.c **** *
 216:.\Generated_Source\PSoC4/Timer.c **** * Global variables:
 217:.\Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 220:.\Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 222:.\Generated_Source\PSoC4/Timer.c **** *
 223:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 225:.\Generated_Source\PSoC4/Timer.c **** {
 226:.\Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 227:.\Generated_Source\PSoC4/Timer.c ****     {
 228:.\Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 229:.\Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 230:.\Generated_Source\PSoC4/Timer.c ****     }
 231:.\Generated_Source\PSoC4/Timer.c **** 
 232:.\Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 233:.\Generated_Source\PSoC4/Timer.c **** }
 234:.\Generated_Source\PSoC4/Timer.c **** 
 235:.\Generated_Source\PSoC4/Timer.c **** 
 236:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 238:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/Timer.c **** *
 240:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 241:.\Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 242:.\Generated_Source\PSoC4/Timer.c **** *
 243:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 244:.\Generated_Source\PSoC4/Timer.c **** *  None
 245:.\Generated_Source\PSoC4/Timer.c **** *
 246:.\Generated_Source\PSoC4/Timer.c **** * Return:
 247:.\Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 6


 248:.\Generated_Source\PSoC4/Timer.c **** *
 249:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 251:.\Generated_Source\PSoC4/Timer.c **** {
 252:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/Timer.c **** 
 254:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/Timer.c **** 
 256:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 257:.\Generated_Source\PSoC4/Timer.c **** 
 258:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/Timer.c **** }
 260:.\Generated_Source\PSoC4/Timer.c **** 
 261:.\Generated_Source\PSoC4/Timer.c **** 
 262:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 264:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/Timer.c **** *
 266:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 267:.\Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 268:.\Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 269:.\Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/Timer.c **** *
 271:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 273:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 274:.\Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/Timer.c **** *
 283:.\Generated_Source\PSoC4/Timer.c **** * Return:
 284:.\Generated_Source\PSoC4/Timer.c **** *  None
 285:.\Generated_Source\PSoC4/Timer.c **** *
 286:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/Timer.c **** {
 289:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/Timer.c **** 
 291:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/Timer.c **** 
 293:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 294:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/Timer.c **** 
 296:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/Timer.c **** }
 298:.\Generated_Source\PSoC4/Timer.c **** 
 299:.\Generated_Source\PSoC4/Timer.c **** 
 300:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
 302:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/Timer.c **** *
 304:.\Generated_Source\PSoC4/Timer.c **** * Summary:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 7


 305:.\Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/Timer.c **** *
 308:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 309:.\Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 311:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/Timer.c **** *
 316:.\Generated_Source\PSoC4/Timer.c **** * Return:
 317:.\Generated_Source\PSoC4/Timer.c **** *  None
 318:.\Generated_Source\PSoC4/Timer.c **** *
 319:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/Timer.c **** {
 322:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/Timer.c **** 
 324:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/Timer.c **** 
 326:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/Timer.c **** 
 329:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/Timer.c **** }
 331:.\Generated_Source\PSoC4/Timer.c **** 
 332:.\Generated_Source\PSoC4/Timer.c **** 
 333:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 335:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/Timer.c **** *
 337:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 338:.\Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/Timer.c **** *
 341:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 342:.\Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 344:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/Timer.c **** *
 353:.\Generated_Source\PSoC4/Timer.c **** * Return:
 354:.\Generated_Source\PSoC4/Timer.c **** *  None
 355:.\Generated_Source\PSoC4/Timer.c **** *
 356:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/Timer.c **** {
 359:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/Timer.c **** 
 361:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 8


 362:.\Generated_Source\PSoC4/Timer.c **** 
 363:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 364:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/Timer.c **** 
 366:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/Timer.c **** }
 368:.\Generated_Source\PSoC4/Timer.c **** 
 369:.\Generated_Source\PSoC4/Timer.c **** 
 370:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 372:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/Timer.c **** *
 374:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 375:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 376:.\Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 378:.\Generated_Source\PSoC4/Timer.c **** *
 379:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 380:.\Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 382:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/Timer.c **** *
 385:.\Generated_Source\PSoC4/Timer.c **** * Return:
 386:.\Generated_Source\PSoC4/Timer.c **** *  None
 387:.\Generated_Source\PSoC4/Timer.c **** *
 388:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/Timer.c **** {
 391:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/Timer.c **** 
 393:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/Timer.c **** 
 395:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/Timer.c **** 
 399:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/Timer.c **** }
 401:.\Generated_Source\PSoC4/Timer.c **** 
 402:.\Generated_Source\PSoC4/Timer.c **** 
 403:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 405:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/Timer.c **** *
 407:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 408:.\Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/Timer.c **** *  the mode.
 413:.\Generated_Source\PSoC4/Timer.c **** *
 414:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 415:.\Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 418:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 9


 419:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/Timer.c **** *
 439:.\Generated_Source\PSoC4/Timer.c **** * Return:
 440:.\Generated_Source\PSoC4/Timer.c **** *  None
 441:.\Generated_Source\PSoC4/Timer.c **** *
 442:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/Timer.c **** {
 445:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 446:.\Generated_Source\PSoC4/Timer.c **** }
 447:.\Generated_Source\PSoC4/Timer.c **** 
 448:.\Generated_Source\PSoC4/Timer.c **** 
 449:.\Generated_Source\PSoC4/Timer.c **** 
 450:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/Timer.c **** *
 454:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 455:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/Timer.c **** *
 460:.\Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/Timer.c **** *
 463:.\Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/Timer.c **** 
 468:.\Generated_Source\PSoC4/Timer.c **** *
 469:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 470:.\Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 472:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/Timer.c **** *
 475:.\Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 10


 476:.\Generated_Source\PSoC4/Timer.c **** *  None
 477:.\Generated_Source\PSoC4/Timer.c **** *
 478:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/Timer.c **** {
 481:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/Timer.c **** 
 483:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/Timer.c **** 
 485:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/Timer.c **** 
 489:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/Timer.c **** }
 491:.\Generated_Source\PSoC4/Timer.c **** 
 492:.\Generated_Source\PSoC4/Timer.c **** 
 493:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/Timer.c **** *
 497:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 498:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/Timer.c **** *
 502:.\Generated_Source\PSoC4/Timer.c **** *
 503:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 504:.\Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 506:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/Timer.c **** *
 509:.\Generated_Source\PSoC4/Timer.c **** * Return:
 510:.\Generated_Source\PSoC4/Timer.c **** *  None
 511:.\Generated_Source\PSoC4/Timer.c **** *
 512:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/Timer.c **** {
 515:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/Timer.c **** 
 517:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/Timer.c **** 
 519:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/Timer.c **** 
 523:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/Timer.c **** }
 525:.\Generated_Source\PSoC4/Timer.c **** 
 526:.\Generated_Source\PSoC4/Timer.c **** 
 527:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/Timer.c **** *
 531:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 532:.\Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 11


 533:.\Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/Timer.c **** 
 537:.\Generated_Source\PSoC4/Timer.c **** *
 538:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 539:.\Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/Timer.c **** *
 542:.\Generated_Source\PSoC4/Timer.c **** * Return:
 543:.\Generated_Source\PSoC4/Timer.c **** *  None
 544:.\Generated_Source\PSoC4/Timer.c **** *
 545:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/Timer.c **** {
 548:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/Timer.c **** 
 550:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/Timer.c **** 
 552:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/Timer.c **** 
 556:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/Timer.c **** }
 558:.\Generated_Source\PSoC4/Timer.c **** 
 559:.\Generated_Source\PSoC4/Timer.c **** 
 560:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 562:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/Timer.c **** *
 564:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 565:.\Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/Timer.c **** *
 569:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 570:.\Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 572:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/Timer.c **** *
 575:.\Generated_Source\PSoC4/Timer.c **** * Return:
 576:.\Generated_Source\PSoC4/Timer.c **** *  None
 577:.\Generated_Source\PSoC4/Timer.c **** *
 578:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/Timer.c **** {
 581:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/Timer.c **** 
 583:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 584:.\Generated_Source\PSoC4/Timer.c **** 
 585:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 587:.\Generated_Source\PSoC4/Timer.c **** 
 588:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 589:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 12


 590:.\Generated_Source\PSoC4/Timer.c **** 
 591:.\Generated_Source\PSoC4/Timer.c **** 
 592:.\Generated_Source\PSoC4/Timer.c **** 
 593:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 595:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/Timer.c **** *
 597:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 598:.\Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/Timer.c **** *
 602:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 603:.\Generated_Source\PSoC4/Timer.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/Timer.c **** *
 605:.\Generated_Source\PSoC4/Timer.c **** * Return:
 606:.\Generated_Source\PSoC4/Timer.c **** *  None
 607:.\Generated_Source\PSoC4/Timer.c **** *
 608:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/Timer.c **** {
 611:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 612:.\Generated_Source\PSoC4/Timer.c **** }
 613:.\Generated_Source\PSoC4/Timer.c **** 
 614:.\Generated_Source\PSoC4/Timer.c **** 
 615:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 617:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/Timer.c **** *
 619:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 620:.\Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/Timer.c **** *
 622:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 623:.\Generated_Source\PSoC4/Timer.c **** *  None
 624:.\Generated_Source\PSoC4/Timer.c **** *
 625:.\Generated_Source\PSoC4/Timer.c **** * Return:
 626:.\Generated_Source\PSoC4/Timer.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/Timer.c **** *
 628:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
 630:.\Generated_Source\PSoC4/Timer.c **** {
 631:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 632:.\Generated_Source\PSoC4/Timer.c **** }
 633:.\Generated_Source\PSoC4/Timer.c **** 
 634:.\Generated_Source\PSoC4/Timer.c **** 
 635:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 637:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/Timer.c **** *
 639:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 640:.\Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/Timer.c **** *
 643:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 644:.\Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 646:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 13


 647:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/Timer.c **** *                                         and period
 653:.\Generated_Source\PSoC4/Timer.c **** *
 654:.\Generated_Source\PSoC4/Timer.c **** * Return:
 655:.\Generated_Source\PSoC4/Timer.c **** *  None
 656:.\Generated_Source\PSoC4/Timer.c **** *
 657:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/Timer.c **** {
 660:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/Timer.c **** 
 662:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/Timer.c **** 
 664:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/Timer.c **** 
 667:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/Timer.c **** }
 669:.\Generated_Source\PSoC4/Timer.c **** 
 670:.\Generated_Source\PSoC4/Timer.c **** 
 671:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 673:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/Timer.c **** *
 675:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 676:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/Timer.c **** *
 680:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 681:.\Generated_Source\PSoC4/Timer.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/Timer.c **** *
 683:.\Generated_Source\PSoC4/Timer.c **** * Return:
 684:.\Generated_Source\PSoC4/Timer.c **** *  None
 685:.\Generated_Source\PSoC4/Timer.c **** *
 686:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/Timer.c **** {
 689:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 690:.\Generated_Source\PSoC4/Timer.c **** }
 691:.\Generated_Source\PSoC4/Timer.c **** 
 692:.\Generated_Source\PSoC4/Timer.c **** 
 693:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 695:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/Timer.c **** *
 697:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 698:.\Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/Timer.c **** *
 700:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 701:.\Generated_Source\PSoC4/Timer.c **** *  None
 702:.\Generated_Source\PSoC4/Timer.c **** *
 703:.\Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 14


 704:.\Generated_Source\PSoC4/Timer.c **** *  Period value
 705:.\Generated_Source\PSoC4/Timer.c **** *
 706:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/Timer.c **** {
 709:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 710:.\Generated_Source\PSoC4/Timer.c **** }
 711:.\Generated_Source\PSoC4/Timer.c **** 
 712:.\Generated_Source\PSoC4/Timer.c **** 
 713:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 715:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/Timer.c **** *
 717:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 718:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/Timer.c **** *
 723:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 724:.\Generated_Source\PSoC4/Timer.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 726:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/Timer.c **** *
 729:.\Generated_Source\PSoC4/Timer.c **** * Return:
 730:.\Generated_Source\PSoC4/Timer.c **** *  None
 731:.\Generated_Source\PSoC4/Timer.c **** *
 732:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/Timer.c **** {
 735:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/Timer.c **** 
 737:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/Timer.c **** 
 739:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 741:.\Generated_Source\PSoC4/Timer.c **** 
 742:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/Timer.c **** }
 744:.\Generated_Source\PSoC4/Timer.c **** 
 745:.\Generated_Source\PSoC4/Timer.c **** 
 746:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 748:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/Timer.c **** *
 750:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 751:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/Timer.c **** *
 753:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 754:.\Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/Timer.c **** *
 756:.\Generated_Source\PSoC4/Timer.c **** * Return:
 757:.\Generated_Source\PSoC4/Timer.c **** *  None
 758:.\Generated_Source\PSoC4/Timer.c **** *
 759:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 15


 761:.\Generated_Source\PSoC4/Timer.c **** {
 762:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 763:.\Generated_Source\PSoC4/Timer.c **** }
 764:.\Generated_Source\PSoC4/Timer.c **** 
 765:.\Generated_Source\PSoC4/Timer.c **** 
 766:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/Timer.c **** *
 770:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 771:.\Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/Timer.c **** *
 773:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 774:.\Generated_Source\PSoC4/Timer.c **** *  None
 775:.\Generated_Source\PSoC4/Timer.c **** *
 776:.\Generated_Source\PSoC4/Timer.c **** * Return:
 777:.\Generated_Source\PSoC4/Timer.c **** *  Period value
 778:.\Generated_Source\PSoC4/Timer.c **** *
 779:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/Timer.c **** {
 782:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 783:.\Generated_Source\PSoC4/Timer.c **** }
 784:.\Generated_Source\PSoC4/Timer.c **** 
 785:.\Generated_Source\PSoC4/Timer.c **** 
 786:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 788:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/Timer.c **** *
 790:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 791:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/Timer.c **** *  switch event.
 795:.\Generated_Source\PSoC4/Timer.c **** *
 796:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 797:.\Generated_Source\PSoC4/Timer.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 799:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/Timer.c **** *
 802:.\Generated_Source\PSoC4/Timer.c **** * Return:
 803:.\Generated_Source\PSoC4/Timer.c **** *  None
 804:.\Generated_Source\PSoC4/Timer.c **** *
 805:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/Timer.c **** {
 808:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/Timer.c **** 
 810:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/Timer.c **** 
 812:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/Timer.c **** 
 816:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 817:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 16


 818:.\Generated_Source\PSoC4/Timer.c **** 
 819:.\Generated_Source\PSoC4/Timer.c **** 
 820:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 822:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/Timer.c **** *
 824:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 825:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/Timer.c **** *
 828:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 829:.\Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/Timer.c **** *
 831:.\Generated_Source\PSoC4/Timer.c **** * Return:
 832:.\Generated_Source\PSoC4/Timer.c **** *  None
 833:.\Generated_Source\PSoC4/Timer.c **** *
 834:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/Timer.c **** {
 837:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/Timer.c **** 
 841:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/Timer.c **** 
 844:.\Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/Timer.c ****         {
 846:.\Generated_Source\PSoC4/Timer.c ****             compare++;
 847:.\Generated_Source\PSoC4/Timer.c ****         }
 848:.\Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/Timer.c ****         {
 850:.\Generated_Source\PSoC4/Timer.c ****             compare--;
 851:.\Generated_Source\PSoC4/Timer.c ****         }
 852:.\Generated_Source\PSoC4/Timer.c ****         else
 853:.\Generated_Source\PSoC4/Timer.c ****         {
 854:.\Generated_Source\PSoC4/Timer.c ****         }
 855:.\Generated_Source\PSoC4/Timer.c ****         
 856:.\Generated_Source\PSoC4/Timer.c ****     
 857:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/Timer.c ****     
 859:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 860:.\Generated_Source\PSoC4/Timer.c **** }
 861:.\Generated_Source\PSoC4/Timer.c **** 
 862:.\Generated_Source\PSoC4/Timer.c **** 
 863:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
 865:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/Timer.c **** *
 867:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 868:.\Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/Timer.c **** *
 871:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 872:.\Generated_Source\PSoC4/Timer.c **** *  None
 873:.\Generated_Source\PSoC4/Timer.c **** *
 874:.\Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 17


 875:.\Generated_Source\PSoC4/Timer.c **** *  Compare value
 876:.\Generated_Source\PSoC4/Timer.c **** *
 877:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 879:.\Generated_Source\PSoC4/Timer.c **** {
 880:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/Timer.c **** 
 885:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/Timer.c ****         
 888:.\Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/Timer.c ****         
 890:.\Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/Timer.c ****         {
 892:.\Generated_Source\PSoC4/Timer.c ****             regVal--;
 893:.\Generated_Source\PSoC4/Timer.c ****         }
 894:.\Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/Timer.c ****         {
 896:.\Generated_Source\PSoC4/Timer.c ****             regVal++;
 897:.\Generated_Source\PSoC4/Timer.c ****         }
 898:.\Generated_Source\PSoC4/Timer.c ****         else
 899:.\Generated_Source\PSoC4/Timer.c ****         {
 900:.\Generated_Source\PSoC4/Timer.c ****         }
 901:.\Generated_Source\PSoC4/Timer.c **** 
 902:.\Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 903:.\Generated_Source\PSoC4/Timer.c ****     #else
 904:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 905:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/Timer.c **** }
 907:.\Generated_Source\PSoC4/Timer.c **** 
 908:.\Generated_Source\PSoC4/Timer.c **** 
 909:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 911:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/Timer.c **** *
 913:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 914:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/Timer.c **** *
 917:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 918:.\Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/Timer.c **** *
 920:.\Generated_Source\PSoC4/Timer.c **** * Return:
 921:.\Generated_Source\PSoC4/Timer.c **** *  None
 922:.\Generated_Source\PSoC4/Timer.c **** *
 923:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/Timer.c **** {
 926:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/Timer.c **** 
 930:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 18


 932:.\Generated_Source\PSoC4/Timer.c **** 
 933:.\Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/Timer.c ****         {
 935:.\Generated_Source\PSoC4/Timer.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/Timer.c ****         }
 937:.\Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/Timer.c ****         {
 939:.\Generated_Source\PSoC4/Timer.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/Timer.c ****         }
 941:.\Generated_Source\PSoC4/Timer.c ****         else
 942:.\Generated_Source\PSoC4/Timer.c ****         {
 943:.\Generated_Source\PSoC4/Timer.c ****         }
 944:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/Timer.c ****     
 946:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 947:.\Generated_Source\PSoC4/Timer.c **** }
 948:.\Generated_Source\PSoC4/Timer.c **** 
 949:.\Generated_Source\PSoC4/Timer.c **** 
 950:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 952:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/Timer.c **** *
 954:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 955:.\Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/Timer.c **** *
 958:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 959:.\Generated_Source\PSoC4/Timer.c **** *  None
 960:.\Generated_Source\PSoC4/Timer.c **** *
 961:.\Generated_Source\PSoC4/Timer.c **** * Return:
 962:.\Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/Timer.c **** *
 964:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/Timer.c **** {
 967:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/Timer.c **** 
 972:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/Timer.c **** 
 975:.\Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/Timer.c ****         
 977:.\Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/Timer.c ****         {
 979:.\Generated_Source\PSoC4/Timer.c ****             regVal--;
 980:.\Generated_Source\PSoC4/Timer.c ****         }
 981:.\Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/Timer.c ****         {
 983:.\Generated_Source\PSoC4/Timer.c ****             regVal++;
 984:.\Generated_Source\PSoC4/Timer.c ****         }
 985:.\Generated_Source\PSoC4/Timer.c ****         else
 986:.\Generated_Source\PSoC4/Timer.c ****         {
 987:.\Generated_Source\PSoC4/Timer.c ****         }
 988:.\Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 19


 989:.\Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 990:.\Generated_Source\PSoC4/Timer.c ****     #else
 991:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 992:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/Timer.c **** }
 994:.\Generated_Source\PSoC4/Timer.c **** 
 995:.\Generated_Source\PSoC4/Timer.c **** 
 996:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
 998:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/Timer.c **** *
1000:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1001:.\Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/Timer.c **** *
1004:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1005:.\Generated_Source\PSoC4/Timer.c **** *  None
1006:.\Generated_Source\PSoC4/Timer.c **** *
1007:.\Generated_Source\PSoC4/Timer.c **** * Return:
1008:.\Generated_Source\PSoC4/Timer.c **** *  Capture value
1009:.\Generated_Source\PSoC4/Timer.c **** *
1010:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
1012:.\Generated_Source\PSoC4/Timer.c **** {
1013:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
1014:.\Generated_Source\PSoC4/Timer.c **** }
1015:.\Generated_Source\PSoC4/Timer.c **** 
1016:.\Generated_Source\PSoC4/Timer.c **** 
1017:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/Timer.c **** *
1021:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1022:.\Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/Timer.c **** *
1025:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1026:.\Generated_Source\PSoC4/Timer.c **** *  None
1027:.\Generated_Source\PSoC4/Timer.c **** *
1028:.\Generated_Source\PSoC4/Timer.c **** * Return:
1029:.\Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/Timer.c **** *
1031:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/Timer.c **** {
1034:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1035:.\Generated_Source\PSoC4/Timer.c **** }
1036:.\Generated_Source\PSoC4/Timer.c **** 
1037:.\Generated_Source\PSoC4/Timer.c **** 
1038:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1040:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/Timer.c **** *
1042:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1043:.\Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 20


1046:.\Generated_Source\PSoC4/Timer.c **** *
1047:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1048:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1050:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/Timer.c **** *
1055:.\Generated_Source\PSoC4/Timer.c **** * Return:
1056:.\Generated_Source\PSoC4/Timer.c **** *  None
1057:.\Generated_Source\PSoC4/Timer.c **** *
1058:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/Timer.c **** {
1061:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/Timer.c **** 
1063:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/Timer.c **** 
1065:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/Timer.c **** 
1068:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/Timer.c **** }
1070:.\Generated_Source\PSoC4/Timer.c **** 
1071:.\Generated_Source\PSoC4/Timer.c **** 
1072:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1074:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/Timer.c **** *
1076:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1077:.\Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/Timer.c **** *  input.
1079:.\Generated_Source\PSoC4/Timer.c **** *
1080:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1081:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1083:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/Timer.c **** *
1088:.\Generated_Source\PSoC4/Timer.c **** * Return:
1089:.\Generated_Source\PSoC4/Timer.c **** *  None
1090:.\Generated_Source\PSoC4/Timer.c **** *
1091:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/Timer.c **** {
1094:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/Timer.c **** 
1096:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/Timer.c **** 
1098:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/Timer.c **** 
1101:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1102:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 21


1103:.\Generated_Source\PSoC4/Timer.c **** 
1104:.\Generated_Source\PSoC4/Timer.c **** 
1105:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1107:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/Timer.c **** *
1109:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1110:.\Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/Timer.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/Timer.c **** *
1113:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1114:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1116:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/Timer.c **** *
1121:.\Generated_Source\PSoC4/Timer.c **** * Return:
1122:.\Generated_Source\PSoC4/Timer.c **** *  None
1123:.\Generated_Source\PSoC4/Timer.c **** *
1124:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/Timer.c **** {
1127:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/Timer.c **** 
1129:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1130:.\Generated_Source\PSoC4/Timer.c **** 
1131:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
1132:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
1133:.\Generated_Source\PSoC4/Timer.c **** 
1134:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/Timer.c **** }
1136:.\Generated_Source\PSoC4/Timer.c **** 
1137:.\Generated_Source\PSoC4/Timer.c **** 
1138:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1140:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/Timer.c **** *
1142:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1143:.\Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/Timer.c **** *
1145:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1146:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1148:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/Timer.c **** *
1153:.\Generated_Source\PSoC4/Timer.c **** * Return:
1154:.\Generated_Source\PSoC4/Timer.c **** *  None
1155:.\Generated_Source\PSoC4/Timer.c **** *
1156:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/Timer.c **** {
1159:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 22


1160:.\Generated_Source\PSoC4/Timer.c **** 
1161:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/Timer.c **** 
1163:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
1164:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/Timer.c **** 
1166:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/Timer.c **** }
1168:.\Generated_Source\PSoC4/Timer.c **** 
1169:.\Generated_Source\PSoC4/Timer.c **** 
1170:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1172:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/Timer.c **** *
1174:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1175:.\Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/Timer.c **** *  input.
1177:.\Generated_Source\PSoC4/Timer.c **** *
1178:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1179:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1181:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/Timer.c **** *
1186:.\Generated_Source\PSoC4/Timer.c **** * Return:
1187:.\Generated_Source\PSoC4/Timer.c **** *  None
1188:.\Generated_Source\PSoC4/Timer.c **** *
1189:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/Timer.c **** {
1192:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/Timer.c **** 
1194:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/Timer.c **** 
1196:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
1197:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/Timer.c **** 
1199:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/Timer.c **** }
1201:.\Generated_Source\PSoC4/Timer.c **** 
1202:.\Generated_Source\PSoC4/Timer.c **** 
1203:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1205:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/Timer.c **** *
1207:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1208:.\Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/Timer.c **** *
1212:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1213:.\Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 23


1217:.\Generated_Source\PSoC4/Timer.c **** *        define.
1218:.\Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1221:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/Timer.c **** *
1226:.\Generated_Source\PSoC4/Timer.c **** * Return:
1227:.\Generated_Source\PSoC4/Timer.c **** *  None
1228:.\Generated_Source\PSoC4/Timer.c **** *
1229:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/Timer.c **** {
1232:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/Timer.c **** 
1234:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/Timer.c **** 
1236:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/Timer.c **** 
1238:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/Timer.c **** }
1240:.\Generated_Source\PSoC4/Timer.c **** 
1241:.\Generated_Source\PSoC4/Timer.c **** 
1242:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1244:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/Timer.c **** *
1246:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1247:.\Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1248:.\Generated_Source\PSoC4/Timer.c **** *
1249:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1250:.\Generated_Source\PSoC4/Timer.c **** *  None
1251:.\Generated_Source\PSoC4/Timer.c **** *
1252:.\Generated_Source\PSoC4/Timer.c **** * Return:
1253:.\Generated_Source\PSoC4/Timer.c **** *  Status
1254:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1255:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/Timer.c **** *
1258:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1260:.\Generated_Source\PSoC4/Timer.c **** {
1261:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/Timer.c **** }
1264:.\Generated_Source\PSoC4/Timer.c **** 
1265:.\Generated_Source\PSoC4/Timer.c **** 
1266:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1268:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/Timer.c **** *
1270:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1271:.\Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 24


1274:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1275:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1277:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/Timer.c **** *
1280:.\Generated_Source\PSoC4/Timer.c **** * Return:
1281:.\Generated_Source\PSoC4/Timer.c **** *  None
1282:.\Generated_Source\PSoC4/Timer.c **** *
1283:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/Timer.c **** {
1286:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
  39              		.loc 1 1286 0
  40 000c 074A     		ldr	r2, .L2+8
  41 000e 0121     		mov	r1, #1
  42 0010 1160     		str	r1, [r2]
  43              	.LVL1:
  44              	.LBE11:
  45              	.LBE10:
  46              	.LBB12:
  47              	.LBB13:
 689:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
  48              		.loc 1 689 0
  49 0012 074A     		ldr	r2, .L2+12
  50 0014 6421     		mov	r1, #100
  51 0016 1160     		str	r1, [r2]
  52              	.LVL2:
  53              	.LBE13:
  54              	.LBE12:
  55              	.LBB14:
  56              	.LBB15:
 859:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
  57              		.loc 1 859 0
  58 0018 064A     		ldr	r2, .L2+16
  59 001a 3221     		mov	r1, #50
  60 001c 1160     		str	r1, [r2]
  61              	.LVL3:
  62              	.LBE15:
  63              	.LBE14:
  64              	.LBB16:
  65              	.LBB17:
 611:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
  66              		.loc 1 611 0
  67 001e 064A     		ldr	r2, .L2+20
  68              	.LBE17:
  69              	.LBE16:
 160:.\Generated_Source\PSoC4/Timer.c **** }
  70              		.loc 1 160 0
  71              		@ sp needed
  72              	.LBB19:
  73              	.LBB18:
 611:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
  74              		.loc 1 611 0
  75 0020 1360     		str	r3, [r2]
  76              	.LBE18:
  77              	.LBE19:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 25


 160:.\Generated_Source\PSoC4/Timer.c **** }
  78              		.loc 1 160 0
  79 0022 7047     		bx	lr
  80              	.L3:
  81              		.align	2
  82              	.L2:
  83 0024 00010540 		.word	1074069760
  84 0028 24010540 		.word	1074069796
  85 002c 38010540 		.word	1074069816
  86 0030 14010540 		.word	1074069780
  87 0034 0C010540 		.word	1074069772
  88 0038 08010540 		.word	1074069768
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	Timer_Init, .-Timer_Init
  92              		.section	.text.Timer_Stop,"ax",%progbits
  93              		.align	1
  94              		.global	Timer_Stop
  95              		.code	16
  96              		.thumb_func
  97              		.type	Timer_Stop, %function
  98              	Timer_Stop:
  99              	.LFB3:
 251:.\Generated_Source\PSoC4/Timer.c **** {
 100              		.loc 1 251 0
 101              		.cfi_startproc
 102 0000 08B5     		push	{r3, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 106              		.loc 1 254 0
 107 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 108              	.LVL4:
 256:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 109              		.loc 1 256 0
 110 0006 044B     		ldr	r3, .L5
 111 0008 0121     		mov	r1, #1
 112 000a 1A68     		ldr	r2, [r3]
 259:.\Generated_Source\PSoC4/Timer.c **** }
 113              		.loc 1 259 0
 114              		@ sp needed
 256:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 115              		.loc 1 256 0
 116 000c 8A43     		bic	r2, r1
 117 000e 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 118              		.loc 1 258 0
 119 0010 FFF7FEFF 		bl	CyExitCriticalSection
 120              	.LVL5:
 259:.\Generated_Source\PSoC4/Timer.c **** }
 121              		.loc 1 259 0
 122 0014 08BD     		pop	{r3, pc}
 123              	.L6:
 124 0016 C046     		.align	2
 125              	.L5:
 126 0018 00000540 		.word	1074069504
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 26


 127              		.cfi_endproc
 128              	.LFE3:
 129              		.size	Timer_Stop, .-Timer_Stop
 130              		.section	.text.Timer_SetMode,"ax",%progbits
 131              		.align	1
 132              		.global	Timer_SetMode
 133              		.code	16
 134              		.thumb_func
 135              		.type	Timer_SetMode, %function
 136              	Timer_SetMode:
 137              	.LFB4:
 288:.\Generated_Source\PSoC4/Timer.c **** {
 138              		.loc 1 288 0
 139              		.cfi_startproc
 140              	.LVL6:
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/Timer.c **** {
 145              		.loc 1 288 0
 146 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 147              		.loc 1 291 0
 148 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 149              	.LVL7:
 293:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 150              		.loc 1 293 0
 151 0008 054B     		ldr	r3, .L8
 152 000a 064A     		ldr	r2, .L8+4
 153 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/Timer.c **** }
 154              		.loc 1 297 0
 155              		@ sp needed
 293:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 156              		.loc 1 293 0
 157 000e 0A40     		and	r2, r1
 158 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 159              		.loc 1 294 0
 160 0012 1A68     		ldr	r2, [r3]
 161 0014 1443     		orr	r4, r2
 162              	.LVL8:
 163 0016 1C60     		str	r4, [r3]
 296:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 164              		.loc 1 296 0
 165 0018 FFF7FEFF 		bl	CyExitCriticalSection
 166              	.LVL9:
 297:.\Generated_Source\PSoC4/Timer.c **** }
 167              		.loc 1 297 0
 168 001c 10BD     		pop	{r4, pc}
 169              	.L9:
 170 001e C046     		.align	2
 171              	.L8:
 172 0020 00010540 		.word	1074069760
 173 0024 FFFFFFF8 		.word	-117440513
 174              		.cfi_endproc
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 27


 175              	.LFE4:
 176              		.size	Timer_SetMode, .-Timer_SetMode
 177              		.section	.text.Timer_SetQDMode,"ax",%progbits
 178              		.align	1
 179              		.global	Timer_SetQDMode
 180              		.code	16
 181              		.thumb_func
 182              		.type	Timer_SetQDMode, %function
 183              	Timer_SetQDMode:
 184              	.LFB5:
 321:.\Generated_Source\PSoC4/Timer.c **** {
 185              		.loc 1 321 0
 186              		.cfi_startproc
 187              	.LVL10:
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/Timer.c **** {
 192              		.loc 1 321 0
 193 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 324 0
 195 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL11:
 326:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 197              		.loc 1 326 0
 198 0008 054B     		ldr	r3, .L11
 199 000a 064A     		ldr	r2, .L11+4
 200 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/Timer.c **** }
 201              		.loc 1 330 0
 202              		@ sp needed
 326:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 203              		.loc 1 326 0
 204 000e 0A40     		and	r2, r1
 205 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 206              		.loc 1 327 0
 207 0012 1A68     		ldr	r2, [r3]
 208 0014 1443     		orr	r4, r2
 209              	.LVL12:
 210 0016 1C60     		str	r4, [r3]
 329:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 329 0
 212 0018 FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL13:
 330:.\Generated_Source\PSoC4/Timer.c **** }
 214              		.loc 1 330 0
 215 001c 10BD     		pop	{r4, pc}
 216              	.L12:
 217 001e C046     		.align	2
 218              	.L11:
 219 0020 00010540 		.word	1074069760
 220 0024 FFFF8FFF 		.word	-7340033
 221              		.cfi_endproc
 222              	.LFE5:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 28


 223              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 224              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 225              		.align	1
 226              		.global	Timer_SetPrescaler
 227              		.code	16
 228              		.thumb_func
 229              		.type	Timer_SetPrescaler, %function
 230              	Timer_SetPrescaler:
 231              	.LFB6:
 358:.\Generated_Source\PSoC4/Timer.c **** {
 232              		.loc 1 358 0
 233              		.cfi_startproc
 234              	.LVL14:
 235 0000 10B5     		push	{r4, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/Timer.c **** {
 239              		.loc 1 358 0
 240 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 361 0
 242 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 243              	.LVL15:
 363:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 244              		.loc 1 363 0
 245 0008 054B     		ldr	r3, .L14
 246 000a 064A     		ldr	r2, .L14+4
 247 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/Timer.c **** }
 248              		.loc 1 367 0
 249              		@ sp needed
 363:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 250              		.loc 1 363 0
 251 000e 0A40     		and	r2, r1
 252 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 253              		.loc 1 364 0
 254 0012 1A68     		ldr	r2, [r3]
 255 0014 1443     		orr	r4, r2
 256              	.LVL16:
 257 0016 1C60     		str	r4, [r3]
 366:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 258              		.loc 1 366 0
 259 0018 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL17:
 367:.\Generated_Source\PSoC4/Timer.c **** }
 261              		.loc 1 367 0
 262 001c 10BD     		pop	{r4, pc}
 263              	.L15:
 264 001e C046     		.align	2
 265              	.L14:
 266 0020 00010540 		.word	1074069760
 267 0024 FF00FFFF 		.word	-65281
 268              		.cfi_endproc
 269              	.LFE6:
 270              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 29


 271              		.section	.text.Timer_SetOneShot,"ax",%progbits
 272              		.align	1
 273              		.global	Timer_SetOneShot
 274              		.code	16
 275              		.thumb_func
 276              		.type	Timer_SetOneShot, %function
 277              	Timer_SetOneShot:
 278              	.LFB7:
 390:.\Generated_Source\PSoC4/Timer.c **** {
 279              		.loc 1 390 0
 280              		.cfi_startproc
 281              	.LVL18:
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 390:.\Generated_Source\PSoC4/Timer.c **** {
 286              		.loc 1 390 0
 287 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 288              		.loc 1 393 0
 289 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 290              	.LVL19:
 395:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 291              		.loc 1 395 0
 292 0008 064B     		ldr	r3, .L17
 293 000a 074A     		ldr	r2, .L17+4
 294 000c 1968     		ldr	r1, [r3]
 400:.\Generated_Source\PSoC4/Timer.c **** }
 295              		.loc 1 400 0
 296              		@ sp needed
 395:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 297              		.loc 1 395 0
 298 000e 0A40     		and	r2, r1
 299 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 300              		.loc 1 396 0
 301 0012 0121     		mov	r1, #1
 302 0014 1A68     		ldr	r2, [r3]
 303 0016 0C40     		and	r4, r1
 304              	.LVL20:
 305 0018 A404     		lsl	r4, r4, #18
 306 001a 1443     		orr	r4, r2
 307 001c 1C60     		str	r4, [r3]
 399:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 308              		.loc 1 399 0
 309 001e FFF7FEFF 		bl	CyExitCriticalSection
 310              	.LVL21:
 400:.\Generated_Source\PSoC4/Timer.c **** }
 311              		.loc 1 400 0
 312 0022 10BD     		pop	{r4, pc}
 313              	.L18:
 314              		.align	2
 315              	.L17:
 316 0024 00010540 		.word	1074069760
 317 0028 FFFFFBFF 		.word	-262145
 318              		.cfi_endproc
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 30


 319              	.LFE7:
 320              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 321              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 322              		.align	1
 323              		.global	Timer_SetPWMMode
 324              		.code	16
 325              		.thumb_func
 326              		.type	Timer_SetPWMMode, %function
 327              	Timer_SetPWMMode:
 328              	.LFB8:
 444:.\Generated_Source\PSoC4/Timer.c **** {
 329              		.loc 1 444 0
 330              		.cfi_startproc
 331              	.LVL22:
 445:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 332              		.loc 1 445 0
 333 0000 3F23     		mov	r3, #63
 334 0002 1840     		and	r0, r3
 335              	.LVL23:
 336 0004 014B     		ldr	r3, .L20
 446:.\Generated_Source\PSoC4/Timer.c **** }
 337              		.loc 1 446 0
 338              		@ sp needed
 445:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 339              		.loc 1 445 0
 340 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/Timer.c **** }
 341              		.loc 1 446 0
 342 0008 7047     		bx	lr
 343              	.L21:
 344 000a C046     		.align	2
 345              	.L20:
 346 000c 28010540 		.word	1074069800
 347              		.cfi_endproc
 348              	.LFE8:
 349              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 350              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 351              		.align	1
 352              		.global	Timer_SetPWMSyncKill
 353              		.code	16
 354              		.thumb_func
 355              		.type	Timer_SetPWMSyncKill, %function
 356              	Timer_SetPWMSyncKill:
 357              	.LFB9:
 480:.\Generated_Source\PSoC4/Timer.c **** {
 358              		.loc 1 480 0
 359              		.cfi_startproc
 360              	.LVL24:
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/Timer.c **** {
 365              		.loc 1 480 0
 366 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 367              		.loc 1 483 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 31


 368 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 369              	.LVL25:
 485:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 370              		.loc 1 485 0
 371 0008 064B     		ldr	r3, .L23
 372 000a 0421     		mov	r1, #4
 373 000c 1A68     		ldr	r2, [r3]
 490:.\Generated_Source\PSoC4/Timer.c **** }
 374              		.loc 1 490 0
 375              		@ sp needed
 485:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 376              		.loc 1 485 0
 377 000e 8A43     		bic	r2, r1
 378 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 379              		.loc 1 486 0
 380 0012 0121     		mov	r1, #1
 381 0014 1A68     		ldr	r2, [r3]
 382 0016 0C40     		and	r4, r1
 383              	.LVL26:
 384 0018 A400     		lsl	r4, r4, #2
 385 001a 1443     		orr	r4, r2
 386 001c 1C60     		str	r4, [r3]
 489:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 387              		.loc 1 489 0
 388 001e FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL27:
 490:.\Generated_Source\PSoC4/Timer.c **** }
 390              		.loc 1 490 0
 391 0022 10BD     		pop	{r4, pc}
 392              	.L24:
 393              		.align	2
 394              	.L23:
 395 0024 00010540 		.word	1074069760
 396              		.cfi_endproc
 397              	.LFE9:
 398              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 399              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 400              		.align	1
 401              		.global	Timer_SetPWMStopOnKill
 402              		.code	16
 403              		.thumb_func
 404              		.type	Timer_SetPWMStopOnKill, %function
 405              	Timer_SetPWMStopOnKill:
 406              	.LFB10:
 514:.\Generated_Source\PSoC4/Timer.c **** {
 407              		.loc 1 514 0
 408              		.cfi_startproc
 409              	.LVL28:
 410 0000 10B5     		push	{r4, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 4, -8
 413              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/Timer.c **** {
 414              		.loc 1 514 0
 415 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 32


 416              		.loc 1 517 0
 417 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 418              	.LVL29:
 519:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 419              		.loc 1 519 0
 420 0008 064B     		ldr	r3, .L26
 421 000a 0821     		mov	r1, #8
 422 000c 1A68     		ldr	r2, [r3]
 524:.\Generated_Source\PSoC4/Timer.c **** }
 423              		.loc 1 524 0
 424              		@ sp needed
 519:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 425              		.loc 1 519 0
 426 000e 8A43     		bic	r2, r1
 427 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 428              		.loc 1 520 0
 429 0012 0121     		mov	r1, #1
 430 0014 1A68     		ldr	r2, [r3]
 431 0016 0C40     		and	r4, r1
 432              	.LVL30:
 433 0018 E400     		lsl	r4, r4, #3
 434 001a 1443     		orr	r4, r2
 435 001c 1C60     		str	r4, [r3]
 523:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 436              		.loc 1 523 0
 437 001e FFF7FEFF 		bl	CyExitCriticalSection
 438              	.LVL31:
 524:.\Generated_Source\PSoC4/Timer.c **** }
 439              		.loc 1 524 0
 440 0022 10BD     		pop	{r4, pc}
 441              	.L27:
 442              		.align	2
 443              	.L26:
 444 0024 00010540 		.word	1074069760
 445              		.cfi_endproc
 446              	.LFE10:
 447              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 448              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 449              		.align	1
 450              		.global	Timer_SetPWMDeadTime
 451              		.code	16
 452              		.thumb_func
 453              		.type	Timer_SetPWMDeadTime, %function
 454              	Timer_SetPWMDeadTime:
 455              	.LFB11:
 547:.\Generated_Source\PSoC4/Timer.c **** {
 456              		.loc 1 547 0
 457              		.cfi_startproc
 458              	.LVL32:
 459 0000 10B5     		push	{r4, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/Timer.c **** {
 463              		.loc 1 547 0
 464 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 33


 550:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 465              		.loc 1 550 0
 466 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL33:
 552:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 468              		.loc 1 552 0
 469 0008 064B     		ldr	r3, .L29
 470 000a 074A     		ldr	r2, .L29+4
 471 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 472              		.loc 1 553 0
 473 000e 2406     		lsl	r4, r4, #24
 474              	.LVL34:
 552:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 475              		.loc 1 552 0
 476 0010 0A40     		and	r2, r1
 477 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 478              		.loc 1 553 0
 479 0014 1A68     		ldr	r2, [r3]
 480 0016 240C     		lsr	r4, r4, #16
 481 0018 1443     		orr	r4, r2
 482 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 483              		.loc 1 556 0
 484 001c FFF7FEFF 		bl	CyExitCriticalSection
 485              	.LVL35:
 557:.\Generated_Source\PSoC4/Timer.c **** }
 486              		.loc 1 557 0
 487              		@ sp needed
 488 0020 10BD     		pop	{r4, pc}
 489              	.L30:
 490 0022 C046     		.align	2
 491              	.L29:
 492 0024 00010540 		.word	1074069760
 493 0028 FF00FFFF 		.word	-65281
 494              		.cfi_endproc
 495              	.LFE11:
 496              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
 497              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 498              		.align	1
 499              		.global	Timer_SetPWMInvert
 500              		.code	16
 501              		.thumb_func
 502              		.type	Timer_SetPWMInvert, %function
 503              	Timer_SetPWMInvert:
 504              	.LFB12:
 580:.\Generated_Source\PSoC4/Timer.c **** {
 505              		.loc 1 580 0
 506              		.cfi_startproc
 507              	.LVL36:
 508 0000 10B5     		push	{r4, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/Timer.c **** {
 512              		.loc 1 580 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 34


 513 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 514              		.loc 1 583 0
 515 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 516              	.LVL37:
 585:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 517              		.loc 1 585 0
 518 0008 054B     		ldr	r3, .L32
 519 000a 064A     		ldr	r2, .L32+4
 520 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/Timer.c **** }
 521              		.loc 1 589 0
 522              		@ sp needed
 585:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 523              		.loc 1 585 0
 524 000e 0A40     		and	r2, r1
 525 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 526              		.loc 1 586 0
 527 0012 1A68     		ldr	r2, [r3]
 528 0014 1443     		orr	r4, r2
 529              	.LVL38:
 530 0016 1C60     		str	r4, [r3]
 588:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 531              		.loc 1 588 0
 532 0018 FFF7FEFF 		bl	CyExitCriticalSection
 533              	.LVL39:
 589:.\Generated_Source\PSoC4/Timer.c **** }
 534              		.loc 1 589 0
 535 001c 10BD     		pop	{r4, pc}
 536              	.L33:
 537 001e C046     		.align	2
 538              	.L32:
 539 0020 00010540 		.word	1074069760
 540 0024 FFFFCFFF 		.word	-3145729
 541              		.cfi_endproc
 542              	.LFE12:
 543              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 544              		.section	.text.Timer_WriteCounter,"ax",%progbits
 545              		.align	1
 546              		.global	Timer_WriteCounter
 547              		.code	16
 548              		.thumb_func
 549              		.type	Timer_WriteCounter, %function
 550              	Timer_WriteCounter:
 551              	.LFB13:
 610:.\Generated_Source\PSoC4/Timer.c **** {
 552              		.loc 1 610 0
 553              		.cfi_startproc
 554              	.LVL40:
 611:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 555              		.loc 1 611 0
 556 0000 014B     		ldr	r3, .L35
 557 0002 80B2     		uxth	r0, r0
 558              	.LVL41:
 559 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 35


 560              		.loc 1 612 0
 561              		@ sp needed
 562 0006 7047     		bx	lr
 563              	.L36:
 564              		.align	2
 565              	.L35:
 566 0008 08010540 		.word	1074069768
 567              		.cfi_endproc
 568              	.LFE13:
 569              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 570              		.section	.text.Timer_ReadCounter,"ax",%progbits
 571              		.align	1
 572              		.global	Timer_ReadCounter
 573              		.code	16
 574              		.thumb_func
 575              		.type	Timer_ReadCounter, %function
 576              	Timer_ReadCounter:
 577              	.LFB14:
 630:.\Generated_Source\PSoC4/Timer.c **** {
 578              		.loc 1 630 0
 579              		.cfi_startproc
 631:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 580              		.loc 1 631 0
 581 0000 014B     		ldr	r3, .L38
 632:.\Generated_Source\PSoC4/Timer.c **** }
 582              		.loc 1 632 0
 583              		@ sp needed
 631:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 584              		.loc 1 631 0
 585 0002 1868     		ldr	r0, [r3]
 586 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/Timer.c **** }
 587              		.loc 1 632 0
 588 0006 7047     		bx	lr
 589              	.L39:
 590              		.align	2
 591              	.L38:
 592 0008 08010540 		.word	1074069768
 593              		.cfi_endproc
 594              	.LFE14:
 595              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 596              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 597              		.align	1
 598              		.global	Timer_SetCounterMode
 599              		.code	16
 600              		.thumb_func
 601              		.type	Timer_SetCounterMode, %function
 602              	Timer_SetCounterMode:
 603              	.LFB15:
 659:.\Generated_Source\PSoC4/Timer.c **** {
 604              		.loc 1 659 0
 605              		.cfi_startproc
 606              	.LVL42:
 607 0000 10B5     		push	{r4, lr}
 608              		.cfi_def_cfa_offset 8
 609              		.cfi_offset 4, -8
 610              		.cfi_offset 14, -4
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 36


 659:.\Generated_Source\PSoC4/Timer.c **** {
 611              		.loc 1 659 0
 612 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 613              		.loc 1 662 0
 614 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 615              	.LVL43:
 664:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 616              		.loc 1 664 0
 617 0008 054B     		ldr	r3, .L41
 618 000a 064A     		ldr	r2, .L41+4
 619 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/Timer.c **** }
 620              		.loc 1 668 0
 621              		@ sp needed
 664:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 622              		.loc 1 664 0
 623 000e 0A40     		and	r2, r1
 624 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 625              		.loc 1 665 0
 626 0012 1A68     		ldr	r2, [r3]
 627 0014 1443     		orr	r4, r2
 628              	.LVL44:
 629 0016 1C60     		str	r4, [r3]
 667:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 630              		.loc 1 667 0
 631 0018 FFF7FEFF 		bl	CyExitCriticalSection
 632              	.LVL45:
 668:.\Generated_Source\PSoC4/Timer.c **** }
 633              		.loc 1 668 0
 634 001c 10BD     		pop	{r4, pc}
 635              	.L42:
 636 001e C046     		.align	2
 637              	.L41:
 638 0020 00010540 		.word	1074069760
 639 0024 FFFFFCFF 		.word	-196609
 640              		.cfi_endproc
 641              	.LFE15:
 642              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 643              		.section	.text.Timer_WritePeriod,"ax",%progbits
 644              		.align	1
 645              		.global	Timer_WritePeriod
 646              		.code	16
 647              		.thumb_func
 648              		.type	Timer_WritePeriod, %function
 649              	Timer_WritePeriod:
 650              	.LFB16:
 688:.\Generated_Source\PSoC4/Timer.c **** {
 651              		.loc 1 688 0
 652              		.cfi_startproc
 653              	.LVL46:
 689:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 654              		.loc 1 689 0
 655 0000 014B     		ldr	r3, .L44
 656 0002 80B2     		uxth	r0, r0
 657              	.LVL47:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 37


 658 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/Timer.c **** }
 659              		.loc 1 690 0
 660              		@ sp needed
 661 0006 7047     		bx	lr
 662              	.L45:
 663              		.align	2
 664              	.L44:
 665 0008 14010540 		.word	1074069780
 666              		.cfi_endproc
 667              	.LFE16:
 668              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 669              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 670              		.align	1
 671              		.global	Timer_ReadPeriod
 672              		.code	16
 673              		.thumb_func
 674              		.type	Timer_ReadPeriod, %function
 675              	Timer_ReadPeriod:
 676              	.LFB17:
 708:.\Generated_Source\PSoC4/Timer.c **** {
 677              		.loc 1 708 0
 678              		.cfi_startproc
 709:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 679              		.loc 1 709 0
 680 0000 014B     		ldr	r3, .L47
 710:.\Generated_Source\PSoC4/Timer.c **** }
 681              		.loc 1 710 0
 682              		@ sp needed
 709:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 683              		.loc 1 709 0
 684 0002 1868     		ldr	r0, [r3]
 685 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/Timer.c **** }
 686              		.loc 1 710 0
 687 0006 7047     		bx	lr
 688              	.L48:
 689              		.align	2
 690              	.L47:
 691 0008 14010540 		.word	1074069780
 692              		.cfi_endproc
 693              	.LFE17:
 694              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 695              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 696              		.align	1
 697              		.global	Timer_SetCompareSwap
 698              		.code	16
 699              		.thumb_func
 700              		.type	Timer_SetCompareSwap, %function
 701              	Timer_SetCompareSwap:
 702              	.LFB18:
 734:.\Generated_Source\PSoC4/Timer.c **** {
 703              		.loc 1 734 0
 704              		.cfi_startproc
 705              	.LVL48:
 706 0000 10B5     		push	{r4, lr}
 707              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 38


 708              		.cfi_offset 4, -8
 709              		.cfi_offset 14, -4
 734:.\Generated_Source\PSoC4/Timer.c **** {
 710              		.loc 1 734 0
 711 0002 041C     		mov	r4, r0
 737:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 712              		.loc 1 737 0
 713 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 714              	.LVL49:
 739:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 715              		.loc 1 739 0
 716 0008 054B     		ldr	r3, .L50
 717 000a 0122     		mov	r2, #1
 718 000c 1968     		ldr	r1, [r3]
 743:.\Generated_Source\PSoC4/Timer.c **** }
 719              		.loc 1 743 0
 720              		@ sp needed
 739:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 721              		.loc 1 739 0
 722 000e 9143     		bic	r1, r2
 723 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 724              		.loc 1 740 0
 725 0012 1968     		ldr	r1, [r3]
 726 0014 2240     		and	r2, r4
 727 0016 0A43     		orr	r2, r1
 728 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 729              		.loc 1 742 0
 730 001a FFF7FEFF 		bl	CyExitCriticalSection
 731              	.LVL50:
 732              	.LVL51:
 743:.\Generated_Source\PSoC4/Timer.c **** }
 733              		.loc 1 743 0
 734 001e 10BD     		pop	{r4, pc}
 735              	.L51:
 736              		.align	2
 737              	.L50:
 738 0020 00010540 		.word	1074069760
 739              		.cfi_endproc
 740              	.LFE18:
 741              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 742              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 743              		.align	1
 744              		.global	Timer_WritePeriodBuf
 745              		.code	16
 746              		.thumb_func
 747              		.type	Timer_WritePeriodBuf, %function
 748              	Timer_WritePeriodBuf:
 749              	.LFB19:
 761:.\Generated_Source\PSoC4/Timer.c **** {
 750              		.loc 1 761 0
 751              		.cfi_startproc
 752              	.LVL52:
 762:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 753              		.loc 1 762 0
 754 0000 014B     		ldr	r3, .L53
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 39


 755 0002 80B2     		uxth	r0, r0
 756              	.LVL53:
 757 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/Timer.c **** }
 758              		.loc 1 763 0
 759              		@ sp needed
 760 0006 7047     		bx	lr
 761              	.L54:
 762              		.align	2
 763              	.L53:
 764 0008 18010540 		.word	1074069784
 765              		.cfi_endproc
 766              	.LFE19:
 767              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 768              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 769              		.align	1
 770              		.global	Timer_ReadPeriodBuf
 771              		.code	16
 772              		.thumb_func
 773              		.type	Timer_ReadPeriodBuf, %function
 774              	Timer_ReadPeriodBuf:
 775              	.LFB20:
 781:.\Generated_Source\PSoC4/Timer.c **** {
 776              		.loc 1 781 0
 777              		.cfi_startproc
 782:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 778              		.loc 1 782 0
 779 0000 014B     		ldr	r3, .L56
 783:.\Generated_Source\PSoC4/Timer.c **** }
 780              		.loc 1 783 0
 781              		@ sp needed
 782:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 782              		.loc 1 782 0
 783 0002 1868     		ldr	r0, [r3]
 784 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/Timer.c **** }
 785              		.loc 1 783 0
 786 0006 7047     		bx	lr
 787              	.L57:
 788              		.align	2
 789              	.L56:
 790 0008 18010540 		.word	1074069784
 791              		.cfi_endproc
 792              	.LFE20:
 793              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 794              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 795              		.align	1
 796              		.global	Timer_SetPeriodSwap
 797              		.code	16
 798              		.thumb_func
 799              		.type	Timer_SetPeriodSwap, %function
 800              	Timer_SetPeriodSwap:
 801              	.LFB21:
 807:.\Generated_Source\PSoC4/Timer.c **** {
 802              		.loc 1 807 0
 803              		.cfi_startproc
 804              	.LVL54:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 40


 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/Timer.c **** {
 809              		.loc 1 807 0
 810 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 811              		.loc 1 810 0
 812 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 813              	.LVL55:
 812:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 814              		.loc 1 812 0
 815 0008 064B     		ldr	r3, .L59
 816 000a 0221     		mov	r1, #2
 817 000c 1A68     		ldr	r2, [r3]
 817:.\Generated_Source\PSoC4/Timer.c **** }
 818              		.loc 1 817 0
 819              		@ sp needed
 812:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 820              		.loc 1 812 0
 821 000e 8A43     		bic	r2, r1
 822 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 823              		.loc 1 813 0
 824 0012 0121     		mov	r1, #1
 825 0014 1A68     		ldr	r2, [r3]
 826 0016 0C40     		and	r4, r1
 827              	.LVL56:
 828 0018 8C40     		lsl	r4, r4, r1
 829 001a 1443     		orr	r4, r2
 830 001c 1C60     		str	r4, [r3]
 816:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 831              		.loc 1 816 0
 832 001e FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL57:
 817:.\Generated_Source\PSoC4/Timer.c **** }
 834              		.loc 1 817 0
 835 0022 10BD     		pop	{r4, pc}
 836              	.L60:
 837              		.align	2
 838              	.L59:
 839 0024 00010540 		.word	1074069760
 840              		.cfi_endproc
 841              	.LFE21:
 842              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 843              		.section	.text.Timer_WriteCompare,"ax",%progbits
 844              		.align	1
 845              		.global	Timer_WriteCompare
 846              		.code	16
 847              		.thumb_func
 848              		.type	Timer_WriteCompare, %function
 849              	Timer_WriteCompare:
 850              	.LFB22:
 836:.\Generated_Source\PSoC4/Timer.c **** {
 851              		.loc 1 836 0
 852              		.cfi_startproc
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 41


 853              	.LVL58:
 859:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 854              		.loc 1 859 0
 855 0000 014B     		ldr	r3, .L62
 856 0002 80B2     		uxth	r0, r0
 857              	.LVL59:
 858 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/Timer.c **** }
 859              		.loc 1 860 0
 860              		@ sp needed
 861 0006 7047     		bx	lr
 862              	.L63:
 863              		.align	2
 864              	.L62:
 865 0008 0C010540 		.word	1074069772
 866              		.cfi_endproc
 867              	.LFE22:
 868              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 869              		.section	.text.Timer_ReadCompare,"ax",%progbits
 870              		.align	1
 871              		.global	Timer_ReadCompare
 872              		.code	16
 873              		.thumb_func
 874              		.type	Timer_ReadCompare, %function
 875              	Timer_ReadCompare:
 876              	.LFB23:
 879:.\Generated_Source\PSoC4/Timer.c **** {
 877              		.loc 1 879 0
 878              		.cfi_startproc
 904:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 879              		.loc 1 904 0
 880 0000 014B     		ldr	r3, .L65
 906:.\Generated_Source\PSoC4/Timer.c **** }
 881              		.loc 1 906 0
 882              		@ sp needed
 904:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 883              		.loc 1 904 0
 884 0002 1868     		ldr	r0, [r3]
 885 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/Timer.c **** }
 886              		.loc 1 906 0
 887 0006 7047     		bx	lr
 888              	.L66:
 889              		.align	2
 890              	.L65:
 891 0008 0C010540 		.word	1074069772
 892              		.cfi_endproc
 893              	.LFE23:
 894              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 895              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 896              		.align	1
 897              		.global	Timer_WriteCompareBuf
 898              		.code	16
 899              		.thumb_func
 900              		.type	Timer_WriteCompareBuf, %function
 901              	Timer_WriteCompareBuf:
 902              	.LFB24:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 42


 925:.\Generated_Source\PSoC4/Timer.c **** {
 903              		.loc 1 925 0
 904              		.cfi_startproc
 905              	.LVL60:
 946:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 906              		.loc 1 946 0
 907 0000 014B     		ldr	r3, .L68
 908 0002 80B2     		uxth	r0, r0
 909              	.LVL61:
 910 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/Timer.c **** }
 911              		.loc 1 947 0
 912              		@ sp needed
 913 0006 7047     		bx	lr
 914              	.L69:
 915              		.align	2
 916              	.L68:
 917 0008 10010540 		.word	1074069776
 918              		.cfi_endproc
 919              	.LFE24:
 920              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 921              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 922              		.align	1
 923              		.global	Timer_ReadCompareBuf
 924              		.code	16
 925              		.thumb_func
 926              		.type	Timer_ReadCompareBuf, %function
 927              	Timer_ReadCompareBuf:
 928              	.LFB25:
 966:.\Generated_Source\PSoC4/Timer.c **** {
 929              		.loc 1 966 0
 930              		.cfi_startproc
 991:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 931              		.loc 1 991 0
 932 0000 014B     		ldr	r3, .L71
 993:.\Generated_Source\PSoC4/Timer.c **** }
 933              		.loc 1 993 0
 934              		@ sp needed
 991:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 935              		.loc 1 991 0
 936 0002 1868     		ldr	r0, [r3]
 937 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/Timer.c **** }
 938              		.loc 1 993 0
 939 0006 7047     		bx	lr
 940              	.L72:
 941              		.align	2
 942              	.L71:
 943 0008 10010540 		.word	1074069776
 944              		.cfi_endproc
 945              	.LFE25:
 946              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 947              		.section	.text.Timer_ReadCapture,"ax",%progbits
 948              		.align	1
 949              		.global	Timer_ReadCapture
 950              		.code	16
 951              		.thumb_func
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 43


 952              		.type	Timer_ReadCapture, %function
 953              	Timer_ReadCapture:
 954              	.LFB26:
1012:.\Generated_Source\PSoC4/Timer.c **** {
 955              		.loc 1 1012 0
 956              		.cfi_startproc
1013:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 957              		.loc 1 1013 0
 958 0000 014B     		ldr	r3, .L74
1014:.\Generated_Source\PSoC4/Timer.c **** }
 959              		.loc 1 1014 0
 960              		@ sp needed
1013:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 961              		.loc 1 1013 0
 962 0002 1868     		ldr	r0, [r3]
 963 0004 80B2     		uxth	r0, r0
1014:.\Generated_Source\PSoC4/Timer.c **** }
 964              		.loc 1 1014 0
 965 0006 7047     		bx	lr
 966              	.L75:
 967              		.align	2
 968              	.L74:
 969 0008 0C010540 		.word	1074069772
 970              		.cfi_endproc
 971              	.LFE26:
 972              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 973              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 974              		.align	1
 975              		.global	Timer_ReadCaptureBuf
 976              		.code	16
 977              		.thumb_func
 978              		.type	Timer_ReadCaptureBuf, %function
 979              	Timer_ReadCaptureBuf:
 980              	.LFB27:
1033:.\Generated_Source\PSoC4/Timer.c **** {
 981              		.loc 1 1033 0
 982              		.cfi_startproc
1034:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 983              		.loc 1 1034 0
 984 0000 014B     		ldr	r3, .L77
1035:.\Generated_Source\PSoC4/Timer.c **** }
 985              		.loc 1 1035 0
 986              		@ sp needed
1034:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 987              		.loc 1 1034 0
 988 0002 1868     		ldr	r0, [r3]
 989 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/Timer.c **** }
 990              		.loc 1 1035 0
 991 0006 7047     		bx	lr
 992              	.L78:
 993              		.align	2
 994              	.L77:
 995 0008 10010540 		.word	1074069776
 996              		.cfi_endproc
 997              	.LFE27:
 998              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 44


 999              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 1000              		.align	1
 1001              		.global	Timer_SetCaptureMode
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	Timer_SetCaptureMode, %function
 1005              	Timer_SetCaptureMode:
 1006              	.LFB28:
1060:.\Generated_Source\PSoC4/Timer.c **** {
 1007              		.loc 1 1060 0
 1008              		.cfi_startproc
 1009              	.LVL62:
 1010 0000 10B5     		push	{r4, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 4, -8
 1013              		.cfi_offset 14, -4
1060:.\Generated_Source\PSoC4/Timer.c **** {
 1014              		.loc 1 1060 0
 1015 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1016              		.loc 1 1063 0
 1017 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1018              	.LVL63:
1065:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1019              		.loc 1 1065 0
 1020 0008 054B     		ldr	r3, .L80
 1021 000a 0321     		mov	r1, #3
 1022 000c 1A68     		ldr	r2, [r3]
1069:.\Generated_Source\PSoC4/Timer.c **** }
 1023              		.loc 1 1069 0
 1024              		@ sp needed
1065:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1025              		.loc 1 1065 0
 1026 000e 8A43     		bic	r2, r1
 1027 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1028              		.loc 1 1066 0
 1029 0012 1A68     		ldr	r2, [r3]
 1030 0014 1443     		orr	r4, r2
 1031              	.LVL64:
 1032 0016 1C60     		str	r4, [r3]
1068:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1033              		.loc 1 1068 0
 1034 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1035              	.LVL65:
1069:.\Generated_Source\PSoC4/Timer.c **** }
 1036              		.loc 1 1069 0
 1037 001c 10BD     		pop	{r4, pc}
 1038              	.L81:
 1039 001e C046     		.align	2
 1040              	.L80:
 1041 0020 24010540 		.word	1074069796
 1042              		.cfi_endproc
 1043              	.LFE28:
 1044              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1045              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1046              		.align	1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 45


 1047              		.global	Timer_SetReloadMode
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	Timer_SetReloadMode, %function
 1051              	Timer_SetReloadMode:
 1052              	.LFB29:
1093:.\Generated_Source\PSoC4/Timer.c **** {
 1053              		.loc 1 1093 0
 1054              		.cfi_startproc
 1055              	.LVL66:
 1056 0000 10B5     		push	{r4, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 4, -8
 1059              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/Timer.c **** {
 1060              		.loc 1 1093 0
 1061 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1062              		.loc 1 1096 0
 1063 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1064              	.LVL67:
1098:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1065              		.loc 1 1098 0
 1066 0008 054B     		ldr	r3, .L83
 1067 000a 3021     		mov	r1, #48
 1068 000c 1A68     		ldr	r2, [r3]
1099:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1069              		.loc 1 1099 0
 1070 000e 2401     		lsl	r4, r4, #4
 1071              	.LVL68:
1098:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1072              		.loc 1 1098 0
 1073 0010 8A43     		bic	r2, r1
 1074 0012 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1075              		.loc 1 1099 0
 1076 0014 1A68     		ldr	r2, [r3]
1102:.\Generated_Source\PSoC4/Timer.c **** }
 1077              		.loc 1 1102 0
 1078              		@ sp needed
1099:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1079              		.loc 1 1099 0
 1080 0016 1443     		orr	r4, r2
 1081 0018 1C60     		str	r4, [r3]
1101:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1082              		.loc 1 1101 0
 1083 001a FFF7FEFF 		bl	CyExitCriticalSection
 1084              	.LVL69:
1102:.\Generated_Source\PSoC4/Timer.c **** }
 1085              		.loc 1 1102 0
 1086 001e 10BD     		pop	{r4, pc}
 1087              	.L84:
 1088              		.align	2
 1089              	.L83:
 1090 0020 24010540 		.word	1074069796
 1091              		.cfi_endproc
 1092              	.LFE29:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 46


 1093              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1094              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1095              		.align	1
 1096              		.global	Timer_SetStartMode
 1097              		.code	16
 1098              		.thumb_func
 1099              		.type	Timer_SetStartMode, %function
 1100              	Timer_SetStartMode:
 1101              	.LFB30:
1126:.\Generated_Source\PSoC4/Timer.c **** {
 1102              		.loc 1 1126 0
 1103              		.cfi_startproc
 1104              	.LVL70:
 1105 0000 10B5     		push	{r4, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 4, -8
 1108              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/Timer.c **** {
 1109              		.loc 1 1126 0
 1110 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1111              		.loc 1 1129 0
 1112 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1113              	.LVL71:
1131:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1114              		.loc 1 1131 0
 1115 0008 054B     		ldr	r3, .L86
 1116 000a 064A     		ldr	r2, .L86+4
 1117 000c 1968     		ldr	r1, [r3]
1132:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1118              		.loc 1 1132 0
 1119 000e 2402     		lsl	r4, r4, #8
 1120              	.LVL72:
1131:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1121              		.loc 1 1131 0
 1122 0010 0A40     		and	r2, r1
 1123 0012 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1124              		.loc 1 1132 0
 1125 0014 1A68     		ldr	r2, [r3]
1135:.\Generated_Source\PSoC4/Timer.c **** }
 1126              		.loc 1 1135 0
 1127              		@ sp needed
1132:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1128              		.loc 1 1132 0
 1129 0016 1443     		orr	r4, r2
 1130 0018 1C60     		str	r4, [r3]
1134:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1131              		.loc 1 1134 0
 1132 001a FFF7FEFF 		bl	CyExitCriticalSection
 1133              	.LVL73:
1135:.\Generated_Source\PSoC4/Timer.c **** }
 1134              		.loc 1 1135 0
 1135 001e 10BD     		pop	{r4, pc}
 1136              	.L87:
 1137              		.align	2
 1138              	.L86:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 47


 1139 0020 24010540 		.word	1074069796
 1140 0024 FFFCFFFF 		.word	-769
 1141              		.cfi_endproc
 1142              	.LFE30:
 1143              		.size	Timer_SetStartMode, .-Timer_SetStartMode
 1144              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1145              		.align	1
 1146              		.global	Timer_SetStopMode
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	Timer_SetStopMode, %function
 1150              	Timer_SetStopMode:
 1151              	.LFB31:
1158:.\Generated_Source\PSoC4/Timer.c **** {
 1152              		.loc 1 1158 0
 1153              		.cfi_startproc
 1154              	.LVL74:
 1155 0000 10B5     		push	{r4, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 4, -8
 1158              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/Timer.c **** {
 1159              		.loc 1 1158 0
 1160 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 1161 0
 1162 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL75:
1163:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1164              		.loc 1 1163 0
 1165 0008 054B     		ldr	r3, .L89
 1166 000a C021     		mov	r1, #192
 1167 000c 1A68     		ldr	r2, [r3]
1164:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1168              		.loc 1 1164 0
 1169 000e A401     		lsl	r4, r4, #6
 1170              	.LVL76:
1163:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1171              		.loc 1 1163 0
 1172 0010 8A43     		bic	r2, r1
 1173 0012 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1174              		.loc 1 1164 0
 1175 0014 1A68     		ldr	r2, [r3]
1167:.\Generated_Source\PSoC4/Timer.c **** }
 1176              		.loc 1 1167 0
 1177              		@ sp needed
1164:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1178              		.loc 1 1164 0
 1179 0016 1443     		orr	r4, r2
 1180 0018 1C60     		str	r4, [r3]
1166:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1181              		.loc 1 1166 0
 1182 001a FFF7FEFF 		bl	CyExitCriticalSection
 1183              	.LVL77:
1167:.\Generated_Source\PSoC4/Timer.c **** }
 1184              		.loc 1 1167 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 48


 1185 001e 10BD     		pop	{r4, pc}
 1186              	.L90:
 1187              		.align	2
 1188              	.L89:
 1189 0020 24010540 		.word	1074069796
 1190              		.cfi_endproc
 1191              	.LFE31:
 1192              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1193              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1194              		.align	1
 1195              		.global	Timer_SetCountMode
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	Timer_SetCountMode, %function
 1199              	Timer_SetCountMode:
 1200              	.LFB32:
1191:.\Generated_Source\PSoC4/Timer.c **** {
 1201              		.loc 1 1191 0
 1202              		.cfi_startproc
 1203              	.LVL78:
 1204 0000 10B5     		push	{r4, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 4, -8
 1207              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/Timer.c **** {
 1208              		.loc 1 1191 0
 1209 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1210              		.loc 1 1194 0
 1211 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1212              	.LVL79:
1196:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1213              		.loc 1 1196 0
 1214 0008 054B     		ldr	r3, .L92
 1215 000a 0C21     		mov	r1, #12
 1216 000c 1A68     		ldr	r2, [r3]
1197:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1217              		.loc 1 1197 0
 1218 000e A400     		lsl	r4, r4, #2
 1219              	.LVL80:
1196:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1220              		.loc 1 1196 0
 1221 0010 8A43     		bic	r2, r1
 1222 0012 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1223              		.loc 1 1197 0
 1224 0014 1A68     		ldr	r2, [r3]
1200:.\Generated_Source\PSoC4/Timer.c **** }
 1225              		.loc 1 1200 0
 1226              		@ sp needed
1197:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1227              		.loc 1 1197 0
 1228 0016 1443     		orr	r4, r2
 1229 0018 1C60     		str	r4, [r3]
1199:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1230              		.loc 1 1199 0
 1231 001a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 49


 1232              	.LVL81:
1200:.\Generated_Source\PSoC4/Timer.c **** }
 1233              		.loc 1 1200 0
 1234 001e 10BD     		pop	{r4, pc}
 1235              	.L93:
 1236              		.align	2
 1237              	.L92:
 1238 0020 24010540 		.word	1074069796
 1239              		.cfi_endproc
 1240              	.LFE32:
 1241              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1242              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1243              		.align	1
 1244              		.global	Timer_TriggerCommand
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	Timer_TriggerCommand, %function
 1248              	Timer_TriggerCommand:
 1249              	.LFB33:
1231:.\Generated_Source\PSoC4/Timer.c **** {
 1250              		.loc 1 1231 0
 1251              		.cfi_startproc
 1252              	.LVL82:
 1253 0000 38B5     		push	{r3, r4, r5, lr}
 1254              		.cfi_def_cfa_offset 16
 1255              		.cfi_offset 3, -16
 1256              		.cfi_offset 4, -12
 1257              		.cfi_offset 5, -8
 1258              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/Timer.c **** {
 1259              		.loc 1 1231 0
 1260 0002 0C1C     		mov	r4, r1
 1261 0004 051C     		mov	r5, r0
1234:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1262              		.loc 1 1234 0
 1263 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1264              	.LVL83:
1236:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
 1265              		.loc 1 1236 0
 1266 000a 034B     		ldr	r3, .L95
 1267 000c A540     		lsl	r5, r5, r4
 1268              	.LVL84:
 1269 000e 1D60     		str	r5, [r3]
1238:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1270              		.loc 1 1238 0
 1271 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1272              	.LVL85:
1239:.\Generated_Source\PSoC4/Timer.c **** }
 1273              		.loc 1 1239 0
 1274              		@ sp needed
 1275              	.LVL86:
 1276 0014 38BD     		pop	{r3, r4, r5, pc}
 1277              	.L96:
 1278 0016 C046     		.align	2
 1279              	.L95:
 1280 0018 08000540 		.word	1074069512
 1281              		.cfi_endproc
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 50


 1282              	.LFE33:
 1283              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
 1284              		.section	.text.Timer_Enable,"ax",%progbits
 1285              		.align	1
 1286              		.global	Timer_Enable
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	Timer_Enable, %function
 1290              	Timer_Enable:
 1291              	.LFB1:
 178:.\Generated_Source\PSoC4/Timer.c **** {
 1292              		.loc 1 178 0
 1293              		.cfi_startproc
 1294 0000 10B5     		push	{r4, lr}
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 4, -8
 1297              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1298              		.loc 1 181 0
 1299 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1300              	.LVL87:
 182:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 1301              		.loc 1 182 0
 1302 0006 064B     		ldr	r3, .L98
 1303 0008 0124     		mov	r4, #1
 1304 000a 1A68     		ldr	r2, [r3]
 197:.\Generated_Source\PSoC4/Timer.c **** }
 1305              		.loc 1 197 0
 1306              		@ sp needed
 182:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 1307              		.loc 1 182 0
 1308 000c 2243     		orr	r2, r4
 1309 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1310              		.loc 1 183 0
 1311 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1312              	.LVL88:
 194:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 1313              		.loc 1 194 0
 1314 0014 201C     		mov	r0, r4
 1315 0016 1821     		mov	r1, #24
 1316 0018 FFF7FEFF 		bl	Timer_TriggerCommand
 1317              	.LVL89:
 197:.\Generated_Source\PSoC4/Timer.c **** }
 1318              		.loc 1 197 0
 1319 001c 10BD     		pop	{r4, pc}
 1320              	.L99:
 1321 001e C046     		.align	2
 1322              	.L98:
 1323 0020 00000540 		.word	1074069504
 1324              		.cfi_endproc
 1325              	.LFE1:
 1326              		.size	Timer_Enable, .-Timer_Enable
 1327              		.section	.text.Timer_Start,"ax",%progbits
 1328              		.align	1
 1329              		.global	Timer_Start
 1330              		.code	16
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 51


 1331              		.thumb_func
 1332              		.type	Timer_Start, %function
 1333              	Timer_Start:
 1334              	.LFB2:
 225:.\Generated_Source\PSoC4/Timer.c **** {
 1335              		.loc 1 225 0
 1336              		.cfi_startproc
 1337 0000 10B5     		push	{r4, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 4, -8
 1340              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 1341              		.loc 1 226 0
 1342 0002 054C     		ldr	r4, .L103
 1343 0004 2378     		ldrb	r3, [r4]
 1344 0006 002B     		cmp	r3, #0
 1345 0008 03D1     		bne	.L101
 228:.\Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 1346              		.loc 1 228 0
 1347 000a FFF7FEFF 		bl	Timer_Init
 1348              	.LVL90:
 229:.\Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 1349              		.loc 1 229 0
 1350 000e 0123     		mov	r3, #1
 1351 0010 2370     		strb	r3, [r4]
 1352              	.L101:
 232:.\Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 1353              		.loc 1 232 0
 1354 0012 FFF7FEFF 		bl	Timer_Enable
 1355              	.LVL91:
 233:.\Generated_Source\PSoC4/Timer.c **** }
 1356              		.loc 1 233 0
 1357              		@ sp needed
 1358 0016 10BD     		pop	{r4, pc}
 1359              	.L104:
 1360              		.align	2
 1361              	.L103:
 1362 0018 00000000 		.word	.LANCHOR0
 1363              		.cfi_endproc
 1364              	.LFE2:
 1365              		.size	Timer_Start, .-Timer_Start
 1366              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1367              		.align	1
 1368              		.global	Timer_ReadStatus
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	Timer_ReadStatus, %function
 1372              	Timer_ReadStatus:
 1373              	.LFB34:
1260:.\Generated_Source\PSoC4/Timer.c **** {
 1374              		.loc 1 1260 0
 1375              		.cfi_startproc
1261:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1376              		.loc 1 1261 0
 1377 0000 034B     		ldr	r3, .L106
1263:.\Generated_Source\PSoC4/Timer.c **** }
 1378              		.loc 1 1263 0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 52


 1379              		@ sp needed
1261:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1380              		.loc 1 1261 0
 1381 0002 1A68     		ldr	r2, [r3]
1262:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1382              		.loc 1 1262 0
 1383 0004 1868     		ldr	r0, [r3]
 1384 0006 0123     		mov	r3, #1
 1385 0008 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1386              		.loc 1 1261 0
 1387 000a 930F     		lsr	r3, r2, #30
 1388 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/Timer.c **** }
 1389              		.loc 1 1263 0
 1390 000e 7047     		bx	lr
 1391              	.L107:
 1392              		.align	2
 1393              	.L106:
 1394 0010 04010540 		.word	1074069764
 1395              		.cfi_endproc
 1396              	.LFE34:
 1397              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1398              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1399              		.align	1
 1400              		.global	Timer_SetInterruptMode
 1401              		.code	16
 1402              		.thumb_func
 1403              		.type	Timer_SetInterruptMode, %function
 1404              	Timer_SetInterruptMode:
 1405              	.LFB35:
1285:.\Generated_Source\PSoC4/Timer.c **** {
 1406              		.loc 1 1285 0
 1407              		.cfi_startproc
 1408              	.LVL92:
 1409              		.loc 1 1286 0
 1410 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/Timer.c **** }
 1411              		.loc 1 1287 0
 1412              		@ sp needed
1286:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1413              		.loc 1 1286 0
 1414 0002 1860     		str	r0, [r3]
 1415              		.loc 1 1287 0
 1416 0004 7047     		bx	lr
 1417              	.L110:
 1418 0006 C046     		.align	2
 1419              	.L109:
 1420 0008 38010540 		.word	1074069816
 1421              		.cfi_endproc
 1422              	.LFE35:
 1423              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1424              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
 1425              		.align	1
 1426              		.global	Timer_GetInterruptSourceMasked
 1427              		.code	16
 1428              		.thumb_func
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 53


 1429              		.type	Timer_GetInterruptSourceMasked, %function
 1430              	Timer_GetInterruptSourceMasked:
 1431              	.LFB36:
1288:.\Generated_Source\PSoC4/Timer.c **** 
1289:.\Generated_Source\PSoC4/Timer.c **** 
1290:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/Timer.c **** *
1294:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1295:.\Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/Timer.c **** *
1297:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1298:.\Generated_Source\PSoC4/Timer.c **** *   None
1299:.\Generated_Source\PSoC4/Timer.c **** *
1300:.\Generated_Source\PSoC4/Timer.c **** * Return:
1301:.\Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1303:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/Timer.c **** *
1306:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/Timer.c **** {
 1432              		.loc 1 1308 0
 1433              		.cfi_startproc
1309:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1434              		.loc 1 1309 0
 1435 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/Timer.c **** }
 1436              		.loc 1 1310 0
 1437              		@ sp needed
1309:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1438              		.loc 1 1309 0
 1439 0002 1868     		ldr	r0, [r3]
 1440              		.loc 1 1310 0
 1441 0004 7047     		bx	lr
 1442              	.L113:
 1443 0006 C046     		.align	2
 1444              	.L112:
 1445 0008 3C010540 		.word	1074069820
 1446              		.cfi_endproc
 1447              	.LFE36:
 1448              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1449              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1450              		.align	1
 1451              		.global	Timer_GetInterruptSource
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	Timer_GetInterruptSource, %function
 1455              	Timer_GetInterruptSource:
 1456              	.LFB37:
1311:.\Generated_Source\PSoC4/Timer.c **** 
1312:.\Generated_Source\PSoC4/Timer.c **** 
1313:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1315:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 54


1316:.\Generated_Source\PSoC4/Timer.c **** *
1317:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1318:.\Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/Timer.c **** *
1320:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1321:.\Generated_Source\PSoC4/Timer.c **** *  None
1322:.\Generated_Source\PSoC4/Timer.c **** *
1323:.\Generated_Source\PSoC4/Timer.c **** * Return:
1324:.\Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1326:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/Timer.c **** *
1329:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/Timer.c **** {
 1457              		.loc 1 1331 0
 1458              		.cfi_startproc
1332:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1459              		.loc 1 1332 0
 1460 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/Timer.c **** }
 1461              		.loc 1 1333 0
 1462              		@ sp needed
1332:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1463              		.loc 1 1332 0
 1464 0002 1868     		ldr	r0, [r3]
 1465              		.loc 1 1333 0
 1466 0004 7047     		bx	lr
 1467              	.L116:
 1468 0006 C046     		.align	2
 1469              	.L115:
 1470 0008 30010540 		.word	1074069808
 1471              		.cfi_endproc
 1472              	.LFE37:
 1473              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1474              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1475              		.align	1
 1476              		.global	Timer_ClearInterrupt
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	Timer_ClearInterrupt, %function
 1480              	Timer_ClearInterrupt:
 1481              	.LFB38:
1334:.\Generated_Source\PSoC4/Timer.c **** 
1335:.\Generated_Source\PSoC4/Timer.c **** 
1336:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1338:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/Timer.c **** *
1340:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1341:.\Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/Timer.c **** *
1343:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1344:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1346:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 55


1347:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/Timer.c **** *
1349:.\Generated_Source\PSoC4/Timer.c **** * Return:
1350:.\Generated_Source\PSoC4/Timer.c **** *  None
1351:.\Generated_Source\PSoC4/Timer.c **** *
1352:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/Timer.c **** {
 1482              		.loc 1 1354 0
 1483              		.cfi_startproc
 1484              	.LVL93:
1355:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1485              		.loc 1 1355 0
 1486 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/Timer.c **** }
 1487              		.loc 1 1356 0
 1488              		@ sp needed
1355:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1489              		.loc 1 1355 0
 1490 0002 1860     		str	r0, [r3]
 1491              		.loc 1 1356 0
 1492 0004 7047     		bx	lr
 1493              	.L119:
 1494 0006 C046     		.align	2
 1495              	.L118:
 1496 0008 30010540 		.word	1074069808
 1497              		.cfi_endproc
 1498              	.LFE38:
 1499              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1500              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1501              		.align	1
 1502              		.global	Timer_SetInterrupt
 1503              		.code	16
 1504              		.thumb_func
 1505              		.type	Timer_SetInterrupt, %function
 1506              	Timer_SetInterrupt:
 1507              	.LFB39:
1357:.\Generated_Source\PSoC4/Timer.c **** 
1358:.\Generated_Source\PSoC4/Timer.c **** 
1359:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1361:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/Timer.c **** *
1363:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1364:.\Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/Timer.c **** *
1366:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1367:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1369:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/Timer.c **** *
1372:.\Generated_Source\PSoC4/Timer.c **** * Return:
1373:.\Generated_Source\PSoC4/Timer.c **** *  None
1374:.\Generated_Source\PSoC4/Timer.c **** *
1375:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 56


1377:.\Generated_Source\PSoC4/Timer.c **** {
 1508              		.loc 1 1377 0
 1509              		.cfi_startproc
 1510              	.LVL94:
1378:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1511              		.loc 1 1378 0
 1512 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/Timer.c **** }
 1513              		.loc 1 1379 0
 1514              		@ sp needed
1378:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1515              		.loc 1 1378 0
 1516 0002 1860     		str	r0, [r3]
 1517              		.loc 1 1379 0
 1518 0004 7047     		bx	lr
 1519              	.L122:
 1520 0006 C046     		.align	2
 1521              	.L121:
 1522 0008 34010540 		.word	1074069812
 1523              		.cfi_endproc
 1524              	.LFE39:
 1525              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1526              		.global	Timer_initVar
 1527              		.bss
 1528              		.set	.LANCHOR0,. + 0
 1529              		.type	Timer_initVar, %object
 1530              		.size	Timer_initVar, 1
 1531              	Timer_initVar:
 1532 0000 00       		.space	1
 1533              		.text
 1534              	.Letext0:
 1535              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1536              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1537              		.section	.debug_info,"",%progbits
 1538              	.Ldebug_info0:
 1539 0000 57090000 		.4byte	0x957
 1540 0004 0400     		.2byte	0x4
 1541 0006 00000000 		.4byte	.Ldebug_abbrev0
 1542 000a 04       		.byte	0x4
 1543 000b 01       		.uleb128 0x1
 1544 000c 6A040000 		.4byte	.LASF76
 1545 0010 01       		.byte	0x1
 1546 0011 0B020000 		.4byte	.LASF77
 1547 0015 1D000000 		.4byte	.LASF78
 1548 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1549 001d 00000000 		.4byte	0
 1550 0021 00000000 		.4byte	.Ldebug_line0
 1551 0025 02       		.uleb128 0x2
 1552 0026 01       		.byte	0x1
 1553 0027 06       		.byte	0x6
 1554 0028 13010000 		.4byte	.LASF0
 1555 002c 02       		.uleb128 0x2
 1556 002d 01       		.byte	0x1
 1557 002e 08       		.byte	0x8
 1558 002f F6030000 		.4byte	.LASF1
 1559 0033 02       		.uleb128 0x2
 1560 0034 02       		.byte	0x2
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 57


 1561 0035 05       		.byte	0x5
 1562 0036 15040000 		.4byte	.LASF2
 1563 003a 02       		.uleb128 0x2
 1564 003b 02       		.byte	0x2
 1565 003c 07       		.byte	0x7
 1566 003d 8C020000 		.4byte	.LASF3
 1567 0041 02       		.uleb128 0x2
 1568 0042 04       		.byte	0x4
 1569 0043 05       		.byte	0x5
 1570 0044 42010000 		.4byte	.LASF4
 1571 0048 02       		.uleb128 0x2
 1572 0049 04       		.byte	0x4
 1573 004a 07       		.byte	0x7
 1574 004b 4D020000 		.4byte	.LASF5
 1575 004f 02       		.uleb128 0x2
 1576 0050 08       		.byte	0x8
 1577 0051 05       		.byte	0x5
 1578 0052 05010000 		.4byte	.LASF6
 1579 0056 02       		.uleb128 0x2
 1580 0057 08       		.byte	0x8
 1581 0058 07       		.byte	0x7
 1582 0059 BD000000 		.4byte	.LASF7
 1583 005d 03       		.uleb128 0x3
 1584 005e 04       		.byte	0x4
 1585 005f 05       		.byte	0x5
 1586 0060 696E7400 		.ascii	"int\000"
 1587 0064 02       		.uleb128 0x2
 1588 0065 04       		.byte	0x4
 1589 0066 07       		.byte	0x7
 1590 0067 2C020000 		.4byte	.LASF8
 1591 006b 04       		.uleb128 0x4
 1592 006c 72010000 		.4byte	.LASF9
 1593 0070 02       		.byte	0x2
 1594 0071 A1       		.byte	0xa1
 1595 0072 2C000000 		.4byte	0x2c
 1596 0076 04       		.uleb128 0x4
 1597 0077 96010000 		.4byte	.LASF10
 1598 007b 02       		.byte	0x2
 1599 007c A3       		.byte	0xa3
 1600 007d 48000000 		.4byte	0x48
 1601 0081 02       		.uleb128 0x2
 1602 0082 04       		.byte	0x4
 1603 0083 04       		.byte	0x4
 1604 0084 9A030000 		.4byte	.LASF11
 1605 0088 02       		.uleb128 0x2
 1606 0089 08       		.byte	0x8
 1607 008a 04       		.byte	0x4
 1608 008b 78010000 		.4byte	.LASF12
 1609 008f 02       		.uleb128 0x2
 1610 0090 01       		.byte	0x1
 1611 0091 08       		.byte	0x8
 1612 0092 60040000 		.4byte	.LASF13
 1613 0096 05       		.uleb128 0x5
 1614 0097 FC020000 		.4byte	.LASF14
 1615 009b 02       		.byte	0x2
 1616 009c 4D01     		.2byte	0x14d
 1617 009e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 58


 1618 00a2 06       		.uleb128 0x6
 1619 00a3 76000000 		.4byte	0x76
 1620 00a7 02       		.uleb128 0x2
 1621 00a8 04       		.byte	0x4
 1622 00a9 07       		.byte	0x7
 1623 00aa 2B030000 		.4byte	.LASF15
 1624 00ae 07       		.uleb128 0x7
 1625 00af 7F010000 		.4byte	.LASF16
 1626 00b3 01       		.byte	0x1
 1627 00b4 0405     		.2byte	0x504
 1628 00b6 01       		.byte	0x1
 1629 00b7 C8000000 		.4byte	0xc8
 1630 00bb 08       		.uleb128 0x8
 1631 00bc 1F040000 		.4byte	.LASF18
 1632 00c0 01       		.byte	0x1
 1633 00c1 0405     		.2byte	0x504
 1634 00c3 76000000 		.4byte	0x76
 1635 00c7 00       		.byte	0
 1636 00c8 07       		.uleb128 0x7
 1637 00c9 75000000 		.4byte	.LASF17
 1638 00cd 01       		.byte	0x1
 1639 00ce AF02     		.2byte	0x2af
 1640 00d0 01       		.byte	0x1
 1641 00d1 E2000000 		.4byte	0xe2
 1642 00d5 08       		.uleb128 0x8
 1643 00d6 9A000000 		.4byte	.LASF19
 1644 00da 01       		.byte	0x1
 1645 00db AF02     		.2byte	0x2af
 1646 00dd 76000000 		.4byte	0x76
 1647 00e1 00       		.byte	0
 1648 00e2 07       		.uleb128 0x7
 1649 00e3 9D010000 		.4byte	.LASF20
 1650 00e7 01       		.byte	0x1
 1651 00e8 4303     		.2byte	0x343
 1652 00ea 01       		.byte	0x1
 1653 00eb FC000000 		.4byte	0xfc
 1654 00ef 08       		.uleb128 0x8
 1655 00f0 6B030000 		.4byte	.LASF21
 1656 00f4 01       		.byte	0x1
 1657 00f5 4303     		.2byte	0x343
 1658 00f7 76000000 		.4byte	0x76
 1659 00fb 00       		.byte	0
 1660 00fc 07       		.uleb128 0x7
 1661 00fd 9F020000 		.4byte	.LASF22
 1662 0101 01       		.byte	0x1
 1663 0102 6102     		.2byte	0x261
 1664 0104 01       		.byte	0x1
 1665 0105 16010000 		.4byte	0x116
 1666 0109 08       		.uleb128 0x8
 1667 010a 17000000 		.4byte	.LASF23
 1668 010e 01       		.byte	0x1
 1669 010f 6102     		.2byte	0x261
 1670 0111 76000000 		.4byte	0x76
 1671 0115 00       		.byte	0
 1672 0116 09       		.uleb128 0x9
 1673 0117 40040000 		.4byte	.LASF24
 1674 011b 01       		.byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 59


 1675 011c 26       		.byte	0x26
 1676 011d 00000000 		.4byte	.LFB0
 1677 0121 3C000000 		.4byte	.LFE0-.LFB0
 1678 0125 01       		.uleb128 0x1
 1679 0126 9C       		.byte	0x9c
 1680 0127 90010000 		.4byte	0x190
 1681 012b 0A       		.uleb128 0xa
 1682 012c AE000000 		.4byte	0xae
 1683 0130 0C000000 		.4byte	.LBB10
 1684 0134 06000000 		.4byte	.LBE10-.LBB10
 1685 0138 01       		.byte	0x1
 1686 0139 40       		.byte	0x40
 1687 013a 45010000 		.4byte	0x145
 1688 013e 0B       		.uleb128 0xb
 1689 013f BB000000 		.4byte	0xbb
 1690 0143 01       		.byte	0x1
 1691 0144 00       		.byte	0
 1692 0145 0A       		.uleb128 0xa
 1693 0146 C8000000 		.4byte	0xc8
 1694 014a 12000000 		.4byte	.LBB12
 1695 014e 06000000 		.4byte	.LBE12-.LBB12
 1696 0152 01       		.byte	0x1
 1697 0153 43       		.byte	0x43
 1698 0154 5F010000 		.4byte	0x15f
 1699 0158 0B       		.uleb128 0xb
 1700 0159 D5000000 		.4byte	0xd5
 1701 015d 64       		.byte	0x64
 1702 015e 00       		.byte	0
 1703 015f 0A       		.uleb128 0xa
 1704 0160 E2000000 		.4byte	0xe2
 1705 0164 18000000 		.4byte	.LBB14
 1706 0168 06000000 		.4byte	.LBE14-.LBB14
 1707 016c 01       		.byte	0x1
 1708 016d 46       		.byte	0x46
 1709 016e 79010000 		.4byte	0x179
 1710 0172 0B       		.uleb128 0xb
 1711 0173 EF000000 		.4byte	0xef
 1712 0177 32       		.byte	0x32
 1713 0178 00       		.byte	0
 1714 0179 0C       		.uleb128 0xc
 1715 017a FC000000 		.4byte	0xfc
 1716 017e 1E000000 		.4byte	.LBB16
 1717 0182 00000000 		.4byte	.Ldebug_ranges0+0
 1718 0186 01       		.byte	0x1
 1719 0187 54       		.byte	0x54
 1720 0188 0B       		.uleb128 0xb
 1721 0189 09010000 		.4byte	0x109
 1722 018d 00       		.byte	0
 1723 018e 00       		.byte	0
 1724 018f 00       		.byte	0
 1725 0190 09       		.uleb128 0x9
 1726 0191 C4020000 		.4byte	.LASF25
 1727 0195 01       		.byte	0x1
 1728 0196 FA       		.byte	0xfa
 1729 0197 00000000 		.4byte	.LFB3
 1730 019b 1C000000 		.4byte	.LFE3-.LFB3
 1731 019f 01       		.uleb128 0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 60


 1732 01a0 9C       		.byte	0x9c
 1733 01a1 C7010000 		.4byte	0x1c7
 1734 01a5 0D       		.uleb128 0xd
 1735 01a6 0E050000 		.4byte	.LASF27
 1736 01aa 01       		.byte	0x1
 1737 01ab FC       		.byte	0xfc
 1738 01ac 6B000000 		.4byte	0x6b
 1739 01b0 00000000 		.4byte	.LLST0
 1740 01b4 0E       		.uleb128 0xe
 1741 01b5 06000000 		.4byte	.LVL4
 1742 01b9 42090000 		.4byte	0x942
 1743 01bd 0E       		.uleb128 0xe
 1744 01be 14000000 		.4byte	.LVL5
 1745 01c2 4D090000 		.4byte	0x94d
 1746 01c6 00       		.byte	0
 1747 01c7 0F       		.uleb128 0xf
 1748 01c8 A1000000 		.4byte	.LASF26
 1749 01cc 01       		.byte	0x1
 1750 01cd 1F01     		.2byte	0x11f
 1751 01cf 00000000 		.4byte	.LFB4
 1752 01d3 28000000 		.4byte	.LFE4-.LFB4
 1753 01d7 01       		.uleb128 0x1
 1754 01d8 9C       		.byte	0x9c
 1755 01d9 10020000 		.4byte	0x210
 1756 01dd 10       		.uleb128 0x10
 1757 01de 65040000 		.4byte	.LASF29
 1758 01e2 01       		.byte	0x1
 1759 01e3 1F01     		.2byte	0x11f
 1760 01e5 76000000 		.4byte	0x76
 1761 01e9 13000000 		.4byte	.LLST1
 1762 01ed 11       		.uleb128 0x11
 1763 01ee 0E050000 		.4byte	.LASF27
 1764 01f2 01       		.byte	0x1
 1765 01f3 2101     		.2byte	0x121
 1766 01f5 6B000000 		.4byte	0x6b
 1767 01f9 3F000000 		.4byte	.LLST2
 1768 01fd 0E       		.uleb128 0xe
 1769 01fe 08000000 		.4byte	.LVL7
 1770 0202 42090000 		.4byte	0x942
 1771 0206 0E       		.uleb128 0xe
 1772 0207 1C000000 		.4byte	.LVL9
 1773 020b 4D090000 		.4byte	0x94d
 1774 020f 00       		.byte	0
 1775 0210 0F       		.uleb128 0xf
 1776 0211 1F010000 		.4byte	.LASF28
 1777 0215 01       		.byte	0x1
 1778 0216 4001     		.2byte	0x140
 1779 0218 00000000 		.4byte	.LFB5
 1780 021c 28000000 		.4byte	.LFE5-.LFB5
 1781 0220 01       		.uleb128 0x1
 1782 0221 9C       		.byte	0x9c
 1783 0222 59020000 		.4byte	0x259
 1784 0226 10       		.uleb128 0x10
 1785 0227 FE000000 		.4byte	.LASF30
 1786 022b 01       		.byte	0x1
 1787 022c 4001     		.2byte	0x140
 1788 022e 76000000 		.4byte	0x76
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 61


 1789 0232 52000000 		.4byte	.LLST3
 1790 0236 11       		.uleb128 0x11
 1791 0237 0E050000 		.4byte	.LASF27
 1792 023b 01       		.byte	0x1
 1793 023c 4201     		.2byte	0x142
 1794 023e 6B000000 		.4byte	0x6b
 1795 0242 7E000000 		.4byte	.LLST4
 1796 0246 0E       		.uleb128 0xe
 1797 0247 08000000 		.4byte	.LVL11
 1798 024b 42090000 		.4byte	0x942
 1799 024f 0E       		.uleb128 0xe
 1800 0250 1C000000 		.4byte	.LVL13
 1801 0254 4D090000 		.4byte	0x94d
 1802 0258 00       		.byte	0
 1803 0259 0F       		.uleb128 0xf
 1804 025a 2D040000 		.4byte	.LASF31
 1805 025e 01       		.byte	0x1
 1806 025f 6501     		.2byte	0x165
 1807 0261 00000000 		.4byte	.LFB6
 1808 0265 28000000 		.4byte	.LFE6-.LFB6
 1809 0269 01       		.uleb128 0x1
 1810 026a 9C       		.byte	0x9c
 1811 026b A2020000 		.4byte	0x2a2
 1812 026f 10       		.uleb128 0x10
 1813 0270 A0030000 		.4byte	.LASF32
 1814 0274 01       		.byte	0x1
 1815 0275 6501     		.2byte	0x165
 1816 0277 76000000 		.4byte	0x76
 1817 027b 91000000 		.4byte	.LLST5
 1818 027f 11       		.uleb128 0x11
 1819 0280 0E050000 		.4byte	.LASF27
 1820 0284 01       		.byte	0x1
 1821 0285 6701     		.2byte	0x167
 1822 0287 6B000000 		.4byte	0x6b
 1823 028b BD000000 		.4byte	.LLST6
 1824 028f 0E       		.uleb128 0xe
 1825 0290 08000000 		.4byte	.LVL15
 1826 0294 42090000 		.4byte	0x942
 1827 0298 0E       		.uleb128 0xe
 1828 0299 1C000000 		.4byte	.LVL17
 1829 029d 4D090000 		.4byte	0x94d
 1830 02a1 00       		.byte	0
 1831 02a2 0F       		.uleb128 0xf
 1832 02a3 34050000 		.4byte	.LASF33
 1833 02a7 01       		.byte	0x1
 1834 02a8 8501     		.2byte	0x185
 1835 02aa 00000000 		.4byte	.LFB7
 1836 02ae 2C000000 		.4byte	.LFE7-.LFB7
 1837 02b2 01       		.uleb128 0x1
 1838 02b3 9C       		.byte	0x9c
 1839 02b4 EB020000 		.4byte	0x2eb
 1840 02b8 10       		.uleb128 0x10
 1841 02b9 CF020000 		.4byte	.LASF34
 1842 02bd 01       		.byte	0x1
 1843 02be 8501     		.2byte	0x185
 1844 02c0 76000000 		.4byte	0x76
 1845 02c4 D0000000 		.4byte	.LLST7
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 62


 1846 02c8 11       		.uleb128 0x11
 1847 02c9 0E050000 		.4byte	.LASF27
 1848 02cd 01       		.byte	0x1
 1849 02ce 8701     		.2byte	0x187
 1850 02d0 6B000000 		.4byte	0x6b
 1851 02d4 FC000000 		.4byte	.LLST8
 1852 02d8 0E       		.uleb128 0xe
 1853 02d9 08000000 		.4byte	.LVL19
 1854 02dd 42090000 		.4byte	0x942
 1855 02e1 0E       		.uleb128 0xe
 1856 02e2 22000000 		.4byte	.LVL21
 1857 02e6 4D090000 		.4byte	0x94d
 1858 02ea 00       		.byte	0
 1859 02eb 0F       		.uleb128 0xf
 1860 02ec 6F050000 		.4byte	.LASF35
 1861 02f0 01       		.byte	0x1
 1862 02f1 BB01     		.2byte	0x1bb
 1863 02f3 00000000 		.4byte	.LFB8
 1864 02f7 10000000 		.4byte	.LFE8-.LFB8
 1865 02fb 01       		.uleb128 0x1
 1866 02fc 9C       		.byte	0x9c
 1867 02fd 12030000 		.4byte	0x312
 1868 0301 10       		.uleb128 0x10
 1869 0302 5F020000 		.4byte	.LASF36
 1870 0306 01       		.byte	0x1
 1871 0307 BB01     		.2byte	0x1bb
 1872 0309 76000000 		.4byte	0x76
 1873 030d 0F010000 		.4byte	.LLST9
 1874 0311 00       		.byte	0
 1875 0312 0F       		.uleb128 0xf
 1876 0313 E9000000 		.4byte	.LASF37
 1877 0317 01       		.byte	0x1
 1878 0318 DF01     		.2byte	0x1df
 1879 031a 00000000 		.4byte	.LFB9
 1880 031e 28000000 		.4byte	.LFE9-.LFB9
 1881 0322 01       		.uleb128 0x1
 1882 0323 9C       		.byte	0x9c
 1883 0324 5B030000 		.4byte	0x35b
 1884 0328 10       		.uleb128 0x10
 1885 0329 49030000 		.4byte	.LASF38
 1886 032d 01       		.byte	0x1
 1887 032e DF01     		.2byte	0x1df
 1888 0330 76000000 		.4byte	0x76
 1889 0334 30010000 		.4byte	.LLST10
 1890 0338 11       		.uleb128 0x11
 1891 0339 0E050000 		.4byte	.LASF27
 1892 033d 01       		.byte	0x1
 1893 033e E101     		.2byte	0x1e1
 1894 0340 6B000000 		.4byte	0x6b
 1895 0344 5C010000 		.4byte	.LLST11
 1896 0348 0E       		.uleb128 0xe
 1897 0349 08000000 		.4byte	.LVL25
 1898 034d 42090000 		.4byte	0x942
 1899 0351 0E       		.uleb128 0xe
 1900 0352 22000000 		.4byte	.LVL27
 1901 0356 4D090000 		.4byte	0x94d
 1902 035a 00       		.byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 63


 1903 035b 0F       		.uleb128 0xf
 1904 035c 00000000 		.4byte	.LASF39
 1905 0360 01       		.byte	0x1
 1906 0361 0102     		.2byte	0x201
 1907 0363 00000000 		.4byte	.LFB10
 1908 0367 28000000 		.4byte	.LFE10-.LFB10
 1909 036b 01       		.uleb128 0x1
 1910 036c 9C       		.byte	0x9c
 1911 036d A4030000 		.4byte	0x3a4
 1912 0371 10       		.uleb128 0x10
 1913 0372 04040000 		.4byte	.LASF40
 1914 0376 01       		.byte	0x1
 1915 0377 0102     		.2byte	0x201
 1916 0379 76000000 		.4byte	0x76
 1917 037d 6F010000 		.4byte	.LLST12
 1918 0381 11       		.uleb128 0x11
 1919 0382 0E050000 		.4byte	.LASF27
 1920 0386 01       		.byte	0x1
 1921 0387 0302     		.2byte	0x203
 1922 0389 6B000000 		.4byte	0x6b
 1923 038d 9B010000 		.4byte	.LLST13
 1924 0391 0E       		.uleb128 0xe
 1925 0392 08000000 		.4byte	.LVL29
 1926 0396 42090000 		.4byte	0x942
 1927 039a 0E       		.uleb128 0xe
 1928 039b 22000000 		.4byte	.LVL31
 1929 039f 4D090000 		.4byte	0x94d
 1930 03a3 00       		.byte	0
 1931 03a4 0F       		.uleb128 0xf
 1932 03a5 D4000000 		.4byte	.LASF41
 1933 03a9 01       		.byte	0x1
 1934 03aa 2202     		.2byte	0x222
 1935 03ac 00000000 		.4byte	.LFB11
 1936 03b0 2C000000 		.4byte	.LFE11-.LFB11
 1937 03b4 01       		.uleb128 0x1
 1938 03b5 9C       		.byte	0x9c
 1939 03b6 ED030000 		.4byte	0x3ed
 1940 03ba 10       		.uleb128 0x10
 1941 03bb EC010000 		.4byte	.LASF42
 1942 03bf 01       		.byte	0x1
 1943 03c0 2202     		.2byte	0x222
 1944 03c2 76000000 		.4byte	0x76
 1945 03c6 AE010000 		.4byte	.LLST14
 1946 03ca 11       		.uleb128 0x11
 1947 03cb 0E050000 		.4byte	.LASF27
 1948 03cf 01       		.byte	0x1
 1949 03d0 2402     		.2byte	0x224
 1950 03d2 6B000000 		.4byte	0x6b
 1951 03d6 DA010000 		.4byte	.LLST15
 1952 03da 0E       		.uleb128 0xe
 1953 03db 08000000 		.4byte	.LVL33
 1954 03df 42090000 		.4byte	0x942
 1955 03e3 0E       		.uleb128 0xe
 1956 03e4 20000000 		.4byte	.LVL35
 1957 03e8 4D090000 		.4byte	0x94d
 1958 03ec 00       		.byte	0
 1959 03ed 0F       		.uleb128 0xf
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 64


 1960 03ee 58030000 		.4byte	.LASF43
 1961 03f2 01       		.byte	0x1
 1962 03f3 4302     		.2byte	0x243
 1963 03f5 00000000 		.4byte	.LFB12
 1964 03f9 28000000 		.4byte	.LFE12-.LFB12
 1965 03fd 01       		.uleb128 0x1
 1966 03fe 9C       		.byte	0x9c
 1967 03ff 36040000 		.4byte	0x436
 1968 0403 10       		.uleb128 0x10
 1969 0404 D5010000 		.4byte	.LASF44
 1970 0408 01       		.byte	0x1
 1971 0409 4302     		.2byte	0x243
 1972 040b 76000000 		.4byte	0x76
 1973 040f ED010000 		.4byte	.LLST16
 1974 0413 11       		.uleb128 0x11
 1975 0414 0E050000 		.4byte	.LASF27
 1976 0418 01       		.byte	0x1
 1977 0419 4502     		.2byte	0x245
 1978 041b 6B000000 		.4byte	0x6b
 1979 041f 19020000 		.4byte	.LLST17
 1980 0423 0E       		.uleb128 0xe
 1981 0424 08000000 		.4byte	.LVL37
 1982 0428 42090000 		.4byte	0x942
 1983 042c 0E       		.uleb128 0xe
 1984 042d 1C000000 		.4byte	.LVL39
 1985 0431 4D090000 		.4byte	0x94d
 1986 0435 00       		.byte	0
 1987 0436 12       		.uleb128 0x12
 1988 0437 FC000000 		.4byte	0xfc
 1989 043b 00000000 		.4byte	.LFB13
 1990 043f 0C000000 		.4byte	.LFE13-.LFB13
 1991 0443 01       		.uleb128 0x1
 1992 0444 9C       		.byte	0x9c
 1993 0445 53040000 		.4byte	0x453
 1994 0449 13       		.uleb128 0x13
 1995 044a 09010000 		.4byte	0x109
 1996 044e 2C020000 		.4byte	.LLST18
 1997 0452 00       		.byte	0
 1998 0453 14       		.uleb128 0x14
 1999 0454 B2020000 		.4byte	.LASF47
 2000 0458 01       		.byte	0x1
 2001 0459 7502     		.2byte	0x275
 2002 045b 76000000 		.4byte	0x76
 2003 045f 00000000 		.4byte	.LFB14
 2004 0463 0C000000 		.4byte	.LFE14-.LFB14
 2005 0467 01       		.uleb128 0x1
 2006 0468 9C       		.byte	0x9c
 2007 0469 0F       		.uleb128 0xf
 2008 046a 4B040000 		.4byte	.LASF45
 2009 046e 01       		.byte	0x1
 2010 046f 9202     		.2byte	0x292
 2011 0471 00000000 		.4byte	.LFB15
 2012 0475 28000000 		.4byte	.LFE15-.LFB15
 2013 0479 01       		.uleb128 0x1
 2014 047a 9C       		.byte	0x9c
 2015 047b B2040000 		.4byte	0x4b2
 2016 047f 10       		.uleb128 0x10
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 65


 2017 0480 E6040000 		.4byte	.LASF46
 2018 0484 01       		.byte	0x1
 2019 0485 9202     		.2byte	0x292
 2020 0487 76000000 		.4byte	0x76
 2021 048b 4D020000 		.4byte	.LLST19
 2022 048f 11       		.uleb128 0x11
 2023 0490 0E050000 		.4byte	.LASF27
 2024 0494 01       		.byte	0x1
 2025 0495 9402     		.2byte	0x294
 2026 0497 6B000000 		.4byte	0x6b
 2027 049b 79020000 		.4byte	.LLST20
 2028 049f 0E       		.uleb128 0xe
 2029 04a0 08000000 		.4byte	.LVL43
 2030 04a4 42090000 		.4byte	0x942
 2031 04a8 0E       		.uleb128 0xe
 2032 04a9 1C000000 		.4byte	.LVL45
 2033 04ad 4D090000 		.4byte	0x94d
 2034 04b1 00       		.byte	0
 2035 04b2 12       		.uleb128 0x12
 2036 04b3 C8000000 		.4byte	0xc8
 2037 04b7 00000000 		.4byte	.LFB16
 2038 04bb 0C000000 		.4byte	.LFE16-.LFB16
 2039 04bf 01       		.uleb128 0x1
 2040 04c0 9C       		.byte	0x9c
 2041 04c1 CF040000 		.4byte	0x4cf
 2042 04c5 13       		.uleb128 0x13
 2043 04c6 D5000000 		.4byte	0xd5
 2044 04ca 8C020000 		.4byte	.LLST21
 2045 04ce 00       		.byte	0
 2046 04cf 14       		.uleb128 0x14
 2047 04d0 F2040000 		.4byte	.LASF48
 2048 04d4 01       		.byte	0x1
 2049 04d5 C302     		.2byte	0x2c3
 2050 04d7 76000000 		.4byte	0x76
 2051 04db 00000000 		.4byte	.LFB17
 2052 04df 0C000000 		.4byte	.LFE17-.LFB17
 2053 04e3 01       		.uleb128 0x1
 2054 04e4 9C       		.byte	0x9c
 2055 04e5 0F       		.uleb128 0xf
 2056 04e6 16030000 		.4byte	.LASF49
 2057 04ea 01       		.byte	0x1
 2058 04eb DD02     		.2byte	0x2dd
 2059 04ed 00000000 		.4byte	.LFB18
 2060 04f1 24000000 		.4byte	.LFE18-.LFB18
 2061 04f5 01       		.uleb128 0x1
 2062 04f6 9C       		.byte	0x9c
 2063 04f7 2E050000 		.4byte	0x52e
 2064 04fb 10       		.uleb128 0x10
 2065 04fc 5A050000 		.4byte	.LASF50
 2066 0500 01       		.byte	0x1
 2067 0501 DD02     		.2byte	0x2dd
 2068 0503 76000000 		.4byte	0x76
 2069 0507 AD020000 		.4byte	.LLST22
 2070 050b 11       		.uleb128 0x11
 2071 050c 0E050000 		.4byte	.LASF27
 2072 0510 01       		.byte	0x1
 2073 0511 DF02     		.2byte	0x2df
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 66


 2074 0513 6B000000 		.4byte	0x6b
 2075 0517 D9020000 		.4byte	.LLST23
 2076 051b 0E       		.uleb128 0xe
 2077 051c 08000000 		.4byte	.LVL49
 2078 0520 42090000 		.4byte	0x942
 2079 0524 0E       		.uleb128 0xe
 2080 0525 1E000000 		.4byte	.LVL50
 2081 0529 4D090000 		.4byte	0x94d
 2082 052d 00       		.byte	0
 2083 052e 0F       		.uleb128 0xf
 2084 052f 34030000 		.4byte	.LASF51
 2085 0533 01       		.byte	0x1
 2086 0534 F802     		.2byte	0x2f8
 2087 0536 00000000 		.4byte	.LFB19
 2088 053a 0C000000 		.4byte	.LFE19-.LFB19
 2089 053e 01       		.uleb128 0x1
 2090 053f 9C       		.byte	0x9c
 2091 0540 55050000 		.4byte	0x555
 2092 0544 10       		.uleb128 0x10
 2093 0545 65050000 		.4byte	.LASF52
 2094 0549 01       		.byte	0x1
 2095 054a F802     		.2byte	0x2f8
 2096 054c 76000000 		.4byte	0x76
 2097 0550 EC020000 		.4byte	.LLST24
 2098 0554 00       		.byte	0
 2099 0555 14       		.uleb128 0x14
 2100 0556 02030000 		.4byte	.LASF53
 2101 055a 01       		.byte	0x1
 2102 055b 0C03     		.2byte	0x30c
 2103 055d 76000000 		.4byte	0x76
 2104 0561 00000000 		.4byte	.LFB20
 2105 0565 0C000000 		.4byte	.LFE20-.LFB20
 2106 0569 01       		.uleb128 0x1
 2107 056a 9C       		.byte	0x9c
 2108 056b 0F       		.uleb128 0xf
 2109 056c BC030000 		.4byte	.LASF54
 2110 0570 01       		.byte	0x1
 2111 0571 2603     		.2byte	0x326
 2112 0573 00000000 		.4byte	.LFB21
 2113 0577 28000000 		.4byte	.LFE21-.LFB21
 2114 057b 01       		.uleb128 0x1
 2115 057c 9C       		.byte	0x9c
 2116 057d B4050000 		.4byte	0x5b4
 2117 0581 10       		.uleb128 0x10
 2118 0582 5A050000 		.4byte	.LASF50
 2119 0586 01       		.byte	0x1
 2120 0587 2603     		.2byte	0x326
 2121 0589 76000000 		.4byte	0x76
 2122 058d 0D030000 		.4byte	.LLST25
 2123 0591 11       		.uleb128 0x11
 2124 0592 0E050000 		.4byte	.LASF27
 2125 0596 01       		.byte	0x1
 2126 0597 2803     		.2byte	0x328
 2127 0599 6B000000 		.4byte	0x6b
 2128 059d 39030000 		.4byte	.LLST26
 2129 05a1 0E       		.uleb128 0xe
 2130 05a2 08000000 		.4byte	.LVL55
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 67


 2131 05a6 42090000 		.4byte	0x942
 2132 05aa 0E       		.uleb128 0xe
 2133 05ab 22000000 		.4byte	.LVL57
 2134 05af 4D090000 		.4byte	0x94d
 2135 05b3 00       		.byte	0
 2136 05b4 12       		.uleb128 0x12
 2137 05b5 E2000000 		.4byte	0xe2
 2138 05b9 00000000 		.4byte	.LFB22
 2139 05bd 0C000000 		.4byte	.LFE22-.LFB22
 2140 05c1 01       		.uleb128 0x1
 2141 05c2 9C       		.byte	0x9c
 2142 05c3 D1050000 		.4byte	0x5d1
 2143 05c7 13       		.uleb128 0x13
 2144 05c8 EF000000 		.4byte	0xef
 2145 05cc 4C030000 		.4byte	.LLST27
 2146 05d0 00       		.byte	0
 2147 05d1 14       		.uleb128 0x14
 2148 05d2 DA010000 		.4byte	.LASF55
 2149 05d6 01       		.byte	0x1
 2150 05d7 6E03     		.2byte	0x36e
 2151 05d9 76000000 		.4byte	0x76
 2152 05dd 00000000 		.4byte	.LFB23
 2153 05e1 0C000000 		.4byte	.LFE23-.LFB23
 2154 05e5 01       		.uleb128 0x1
 2155 05e6 9C       		.byte	0x9c
 2156 05e7 0F       		.uleb128 0xf
 2157 05e8 F5010000 		.4byte	.LASF56
 2158 05ec 01       		.byte	0x1
 2159 05ed 9C03     		.2byte	0x39c
 2160 05ef 00000000 		.4byte	.LFB24
 2161 05f3 0C000000 		.4byte	.LFE24-.LFB24
 2162 05f7 01       		.uleb128 0x1
 2163 05f8 9C       		.byte	0x9c
 2164 05f9 0E060000 		.4byte	0x60e
 2165 05fd 10       		.uleb128 0x10
 2166 05fe 03050000 		.4byte	.LASF57
 2167 0602 01       		.byte	0x1
 2168 0603 9C03     		.2byte	0x39c
 2169 0605 76000000 		.4byte	0x76
 2170 0609 6D030000 		.4byte	.LLST28
 2171 060d 00       		.byte	0
 2172 060e 14       		.uleb128 0x14
 2173 060f 80050000 		.4byte	.LASF58
 2174 0613 01       		.byte	0x1
 2175 0614 C503     		.2byte	0x3c5
 2176 0616 76000000 		.4byte	0x76
 2177 061a 00000000 		.4byte	.LFB25
 2178 061e 0C000000 		.4byte	.LFE25-.LFB25
 2179 0622 01       		.uleb128 0x1
 2180 0623 9C       		.byte	0x9c
 2181 0624 14       		.uleb128 0x14
 2182 0625 4B010000 		.4byte	.LASF59
 2183 0629 01       		.byte	0x1
 2184 062a F303     		.2byte	0x3f3
 2185 062c 76000000 		.4byte	0x76
 2186 0630 00000000 		.4byte	.LFB26
 2187 0634 0C000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 68


 2188 0638 01       		.uleb128 0x1
 2189 0639 9C       		.byte	0x9c
 2190 063a 14       		.uleb128 0x14
 2191 063b D0030000 		.4byte	.LASF60
 2192 063f 01       		.byte	0x1
 2193 0640 0804     		.2byte	0x408
 2194 0642 76000000 		.4byte	0x76
 2195 0646 00000000 		.4byte	.LFB27
 2196 064a 0C000000 		.4byte	.LFE27-.LFB27
 2197 064e 01       		.uleb128 0x1
 2198 064f 9C       		.byte	0x9c
 2199 0650 0F       		.uleb128 0xf
 2200 0651 1F050000 		.4byte	.LASF61
 2201 0655 01       		.byte	0x1
 2202 0656 2304     		.2byte	0x423
 2203 0658 00000000 		.4byte	.LFB28
 2204 065c 24000000 		.4byte	.LFE28-.LFB28
 2205 0660 01       		.uleb128 0x1
 2206 0661 9C       		.byte	0x9c
 2207 0662 99060000 		.4byte	0x699
 2208 0666 10       		.uleb128 0x10
 2209 0667 C9010000 		.4byte	.LASF62
 2210 066b 01       		.byte	0x1
 2211 066c 2304     		.2byte	0x423
 2212 066e 76000000 		.4byte	0x76
 2213 0672 8E030000 		.4byte	.LLST29
 2214 0676 11       		.uleb128 0x11
 2215 0677 0E050000 		.4byte	.LASF27
 2216 067b 01       		.byte	0x1
 2217 067c 2504     		.2byte	0x425
 2218 067e 6B000000 		.4byte	0x6b
 2219 0682 BA030000 		.4byte	.LLST30
 2220 0686 0E       		.uleb128 0xe
 2221 0687 08000000 		.4byte	.LVL63
 2222 068b 42090000 		.4byte	0x942
 2223 068f 0E       		.uleb128 0xe
 2224 0690 1C000000 		.4byte	.LVL65
 2225 0694 4D090000 		.4byte	0x94d
 2226 0698 00       		.byte	0
 2227 0699 0F       		.uleb128 0xf
 2228 069a 73030000 		.4byte	.LASF63
 2229 069e 01       		.byte	0x1
 2230 069f 4404     		.2byte	0x444
 2231 06a1 00000000 		.4byte	.LFB29
 2232 06a5 24000000 		.4byte	.LFE29-.LFB29
 2233 06a9 01       		.uleb128 0x1
 2234 06aa 9C       		.byte	0x9c
 2235 06ab E2060000 		.4byte	0x6e2
 2236 06af 10       		.uleb128 0x10
 2237 06b0 C9010000 		.4byte	.LASF62
 2238 06b4 01       		.byte	0x1
 2239 06b5 4404     		.2byte	0x444
 2240 06b7 76000000 		.4byte	0x76
 2241 06bb CD030000 		.4byte	.LLST31
 2242 06bf 11       		.uleb128 0x11
 2243 06c0 0E050000 		.4byte	.LASF27
 2244 06c4 01       		.byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 69


 2245 06c5 4604     		.2byte	0x446
 2246 06c7 6B000000 		.4byte	0x6b
 2247 06cb F9030000 		.4byte	.LLST32
 2248 06cf 0E       		.uleb128 0xe
 2249 06d0 08000000 		.4byte	.LVL67
 2250 06d4 42090000 		.4byte	0x942
 2251 06d8 0E       		.uleb128 0xe
 2252 06d9 1E000000 		.4byte	.LVL69
 2253 06dd 4D090000 		.4byte	0x94d
 2254 06e1 00       		.byte	0
 2255 06e2 0F       		.uleb128 0xf
 2256 06e3 87030000 		.4byte	.LASF64
 2257 06e7 01       		.byte	0x1
 2258 06e8 6504     		.2byte	0x465
 2259 06ea 00000000 		.4byte	.LFB30
 2260 06ee 28000000 		.4byte	.LFE30-.LFB30
 2261 06f2 01       		.uleb128 0x1
 2262 06f3 9C       		.byte	0x9c
 2263 06f4 2B070000 		.4byte	0x72b
 2264 06f8 10       		.uleb128 0x10
 2265 06f9 C9010000 		.4byte	.LASF62
 2266 06fd 01       		.byte	0x1
 2267 06fe 6504     		.2byte	0x465
 2268 0700 76000000 		.4byte	0x76
 2269 0704 0C040000 		.4byte	.LLST33
 2270 0708 11       		.uleb128 0x11
 2271 0709 0E050000 		.4byte	.LASF27
 2272 070d 01       		.byte	0x1
 2273 070e 6704     		.2byte	0x467
 2274 0710 6B000000 		.4byte	0x6b
 2275 0714 38040000 		.4byte	.LLST34
 2276 0718 0E       		.uleb128 0xe
 2277 0719 08000000 		.4byte	.LVL71
 2278 071d 42090000 		.4byte	0x942
 2279 0721 0E       		.uleb128 0xe
 2280 0722 1E000000 		.4byte	.LVL73
 2281 0726 4D090000 		.4byte	0x94d
 2282 072a 00       		.byte	0
 2283 072b 0F       		.uleb128 0xf
 2284 072c AA030000 		.4byte	.LASF65
 2285 0730 01       		.byte	0x1
 2286 0731 8504     		.2byte	0x485
 2287 0733 00000000 		.4byte	.LFB31
 2288 0737 24000000 		.4byte	.LFE31-.LFB31
 2289 073b 01       		.uleb128 0x1
 2290 073c 9C       		.byte	0x9c
 2291 073d 74070000 		.4byte	0x774
 2292 0741 10       		.uleb128 0x10
 2293 0742 C9010000 		.4byte	.LASF62
 2294 0746 01       		.byte	0x1
 2295 0747 8504     		.2byte	0x485
 2296 0749 76000000 		.4byte	0x76
 2297 074d 4B040000 		.4byte	.LLST35
 2298 0751 11       		.uleb128 0x11
 2299 0752 0E050000 		.4byte	.LASF27
 2300 0756 01       		.byte	0x1
 2301 0757 8704     		.2byte	0x487
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 70


 2302 0759 6B000000 		.4byte	0x6b
 2303 075d 77040000 		.4byte	.LLST36
 2304 0761 0E       		.uleb128 0xe
 2305 0762 08000000 		.4byte	.LVL75
 2306 0766 42090000 		.4byte	0x942
 2307 076a 0E       		.uleb128 0xe
 2308 076b 1E000000 		.4byte	.LVL77
 2309 076f 4D090000 		.4byte	0x94d
 2310 0773 00       		.byte	0
 2311 0774 0F       		.uleb128 0xf
 2312 0775 2F010000 		.4byte	.LASF66
 2313 0779 01       		.byte	0x1
 2314 077a A604     		.2byte	0x4a6
 2315 077c 00000000 		.4byte	.LFB32
 2316 0780 24000000 		.4byte	.LFE32-.LFB32
 2317 0784 01       		.uleb128 0x1
 2318 0785 9C       		.byte	0x9c
 2319 0786 BD070000 		.4byte	0x7bd
 2320 078a 10       		.uleb128 0x10
 2321 078b C9010000 		.4byte	.LASF62
 2322 078f 01       		.byte	0x1
 2323 0790 A604     		.2byte	0x4a6
 2324 0792 76000000 		.4byte	0x76
 2325 0796 8A040000 		.4byte	.LLST37
 2326 079a 11       		.uleb128 0x11
 2327 079b 0E050000 		.4byte	.LASF27
 2328 079f 01       		.byte	0x1
 2329 07a0 A804     		.2byte	0x4a8
 2330 07a2 6B000000 		.4byte	0x6b
 2331 07a6 B6040000 		.4byte	.LLST38
 2332 07aa 0E       		.uleb128 0xe
 2333 07ab 08000000 		.4byte	.LVL79
 2334 07af 42090000 		.4byte	0x942
 2335 07b3 0E       		.uleb128 0xe
 2336 07b4 1E000000 		.4byte	.LVL81
 2337 07b8 4D090000 		.4byte	0x94d
 2338 07bc 00       		.byte	0
 2339 07bd 0F       		.uleb128 0xf
 2340 07be 5D010000 		.4byte	.LASF67
 2341 07c2 01       		.byte	0x1
 2342 07c3 CE04     		.2byte	0x4ce
 2343 07c5 00000000 		.4byte	.LFB33
 2344 07c9 1C000000 		.4byte	.LFE33-.LFB33
 2345 07cd 01       		.uleb128 0x1
 2346 07ce 9C       		.byte	0x9c
 2347 07cf 16080000 		.4byte	0x816
 2348 07d3 10       		.uleb128 0x10
 2349 07d4 D5010000 		.4byte	.LASF44
 2350 07d8 01       		.byte	0x1
 2351 07d9 CE04     		.2byte	0x4ce
 2352 07db 76000000 		.4byte	0x76
 2353 07df C9040000 		.4byte	.LLST39
 2354 07e3 10       		.uleb128 0x10
 2355 07e4 45020000 		.4byte	.LASF68
 2356 07e8 01       		.byte	0x1
 2357 07e9 CE04     		.2byte	0x4ce
 2358 07eb 76000000 		.4byte	0x76
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 71


 2359 07ef F5040000 		.4byte	.LLST40
 2360 07f3 11       		.uleb128 0x11
 2361 07f4 0E050000 		.4byte	.LASF27
 2362 07f8 01       		.byte	0x1
 2363 07f9 D004     		.2byte	0x4d0
 2364 07fb 6B000000 		.4byte	0x6b
 2365 07ff 21050000 		.4byte	.LLST41
 2366 0803 0E       		.uleb128 0xe
 2367 0804 0A000000 		.4byte	.LVL83
 2368 0808 42090000 		.4byte	0x942
 2369 080c 0E       		.uleb128 0xe
 2370 080d 14000000 		.4byte	.LVL85
 2371 0811 4D090000 		.4byte	0x94d
 2372 0815 00       		.byte	0
 2373 0816 09       		.uleb128 0x9
 2374 0817 68020000 		.4byte	.LASF69
 2375 081b 01       		.byte	0x1
 2376 081c B1       		.byte	0xb1
 2377 081d 00000000 		.4byte	.LFB1
 2378 0821 24000000 		.4byte	.LFE1-.LFB1
 2379 0825 01       		.uleb128 0x1
 2380 0826 9C       		.byte	0x9c
 2381 0827 62080000 		.4byte	0x862
 2382 082b 0D       		.uleb128 0xd
 2383 082c 0E050000 		.4byte	.LASF27
 2384 0830 01       		.byte	0x1
 2385 0831 B3       		.byte	0xb3
 2386 0832 6B000000 		.4byte	0x6b
 2387 0836 34050000 		.4byte	.LLST42
 2388 083a 0E       		.uleb128 0xe
 2389 083b 06000000 		.4byte	.LVL87
 2390 083f 42090000 		.4byte	0x942
 2391 0843 0E       		.uleb128 0xe
 2392 0844 14000000 		.4byte	.LVL88
 2393 0848 4D090000 		.4byte	0x94d
 2394 084c 15       		.uleb128 0x15
 2395 084d 1C000000 		.4byte	.LVL89
 2396 0851 BD070000 		.4byte	0x7bd
 2397 0855 16       		.uleb128 0x16
 2398 0856 01       		.uleb128 0x1
 2399 0857 51       		.byte	0x51
 2400 0858 01       		.uleb128 0x1
 2401 0859 48       		.byte	0x48
 2402 085a 16       		.uleb128 0x16
 2403 085b 01       		.uleb128 0x1
 2404 085c 50       		.byte	0x50
 2405 085d 02       		.uleb128 0x2
 2406 085e 74       		.byte	0x74
 2407 085f 00       		.sleb128 0
 2408 0860 00       		.byte	0
 2409 0861 00       		.byte	0
 2410 0862 09       		.uleb128 0x9
 2411 0863 39020000 		.4byte	.LASF70
 2412 0867 01       		.byte	0x1
 2413 0868 E0       		.byte	0xe0
 2414 0869 00000000 		.4byte	.LFB2
 2415 086d 1C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 72


 2416 0871 01       		.uleb128 0x1
 2417 0872 9C       		.byte	0x9c
 2418 0873 8A080000 		.4byte	0x88a
 2419 0877 0E       		.uleb128 0xe
 2420 0878 0E000000 		.4byte	.LVL90
 2421 087c 16010000 		.4byte	0x116
 2422 0880 0E       		.uleb128 0xe
 2423 0881 16000000 		.4byte	.LVL91
 2424 0885 16080000 		.4byte	0x816
 2425 0889 00       		.byte	0
 2426 088a 14       		.uleb128 0x14
 2427 088b E5030000 		.4byte	.LASF71
 2428 088f 01       		.byte	0x1
 2429 0890 EB04     		.2byte	0x4eb
 2430 0892 76000000 		.4byte	0x76
 2431 0896 00000000 		.4byte	.LFB34
 2432 089a 14000000 		.4byte	.LFE34-.LFB34
 2433 089e 01       		.uleb128 0x1
 2434 089f 9C       		.byte	0x9c
 2435 08a0 12       		.uleb128 0x12
 2436 08a1 AE000000 		.4byte	0xae
 2437 08a5 00000000 		.4byte	.LFB35
 2438 08a9 0C000000 		.4byte	.LFE35-.LFB35
 2439 08ad 01       		.uleb128 0x1
 2440 08ae 9C       		.byte	0x9c
 2441 08af BB080000 		.4byte	0x8bb
 2442 08b3 17       		.uleb128 0x17
 2443 08b4 BB000000 		.4byte	0xbb
 2444 08b8 01       		.uleb128 0x1
 2445 08b9 50       		.byte	0x50
 2446 08ba 00       		.byte	0
 2447 08bb 14       		.uleb128 0x14
 2448 08bc DD020000 		.4byte	.LASF72
 2449 08c0 01       		.byte	0x1
 2450 08c1 1B05     		.2byte	0x51b
 2451 08c3 76000000 		.4byte	0x76
 2452 08c7 00000000 		.4byte	.LFB36
 2453 08cb 0C000000 		.4byte	.LFE36-.LFB36
 2454 08cf 01       		.uleb128 0x1
 2455 08d0 9C       		.byte	0x9c
 2456 08d1 14       		.uleb128 0x14
 2457 08d2 B0010000 		.4byte	.LASF73
 2458 08d6 01       		.byte	0x1
 2459 08d7 3205     		.2byte	0x532
 2460 08d9 76000000 		.4byte	0x76
 2461 08dd 00000000 		.4byte	.LFB37
 2462 08e1 0C000000 		.4byte	.LFE37-.LFB37
 2463 08e5 01       		.uleb128 0x1
 2464 08e6 9C       		.byte	0x9c
 2465 08e7 0F       		.uleb128 0xf
 2466 08e8 45050000 		.4byte	.LASF74
 2467 08ec 01       		.byte	0x1
 2468 08ed 4905     		.2byte	0x549
 2469 08ef 00000000 		.4byte	.LFB38
 2470 08f3 0C000000 		.4byte	.LFE38-.LFB38
 2471 08f7 01       		.uleb128 0x1
 2472 08f8 9C       		.byte	0x9c
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 73


 2473 08f9 0C090000 		.4byte	0x90c
 2474 08fd 18       		.uleb128 0x18
 2475 08fe 1F040000 		.4byte	.LASF18
 2476 0902 01       		.byte	0x1
 2477 0903 4905     		.2byte	0x549
 2478 0905 76000000 		.4byte	0x76
 2479 0909 01       		.uleb128 0x1
 2480 090a 50       		.byte	0x50
 2481 090b 00       		.byte	0
 2482 090c 0F       		.uleb128 0xf
 2483 090d 87000000 		.4byte	.LASF75
 2484 0911 01       		.byte	0x1
 2485 0912 6005     		.2byte	0x560
 2486 0914 00000000 		.4byte	.LFB39
 2487 0918 0C000000 		.4byte	.LFE39-.LFB39
 2488 091c 01       		.uleb128 0x1
 2489 091d 9C       		.byte	0x9c
 2490 091e 31090000 		.4byte	0x931
 2491 0922 18       		.uleb128 0x18
 2492 0923 1F040000 		.4byte	.LASF18
 2493 0927 01       		.byte	0x1
 2494 0928 6005     		.2byte	0x560
 2495 092a 76000000 		.4byte	0x76
 2496 092e 01       		.uleb128 0x1
 2497 092f 50       		.byte	0x50
 2498 0930 00       		.byte	0
 2499 0931 19       		.uleb128 0x19
 2500 0932 AF000000 		.4byte	.LASF79
 2501 0936 01       		.byte	0x1
 2502 0937 15       		.byte	0x15
 2503 0938 6B000000 		.4byte	0x6b
 2504 093c 05       		.uleb128 0x5
 2505 093d 03       		.byte	0x3
 2506 093e 00000000 		.4byte	Timer_initVar
 2507 0942 1A       		.uleb128 0x1a
 2508 0943 75020000 		.4byte	.LASF80
 2509 0947 03       		.byte	0x3
 2510 0948 82       		.byte	0x82
 2511 0949 6B000000 		.4byte	0x6b
 2512 094d 1B       		.uleb128 0x1b
 2513 094e 5F000000 		.4byte	.LASF81
 2514 0952 03       		.byte	0x3
 2515 0953 83       		.byte	0x83
 2516 0954 1C       		.uleb128 0x1c
 2517 0955 6B000000 		.4byte	0x6b
 2518 0959 00       		.byte	0
 2519 095a 00       		.byte	0
 2520              		.section	.debug_abbrev,"",%progbits
 2521              	.Ldebug_abbrev0:
 2522 0000 01       		.uleb128 0x1
 2523 0001 11       		.uleb128 0x11
 2524 0002 01       		.byte	0x1
 2525 0003 25       		.uleb128 0x25
 2526 0004 0E       		.uleb128 0xe
 2527 0005 13       		.uleb128 0x13
 2528 0006 0B       		.uleb128 0xb
 2529 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 74


 2530 0008 0E       		.uleb128 0xe
 2531 0009 1B       		.uleb128 0x1b
 2532 000a 0E       		.uleb128 0xe
 2533 000b 55       		.uleb128 0x55
 2534 000c 17       		.uleb128 0x17
 2535 000d 11       		.uleb128 0x11
 2536 000e 01       		.uleb128 0x1
 2537 000f 10       		.uleb128 0x10
 2538 0010 17       		.uleb128 0x17
 2539 0011 00       		.byte	0
 2540 0012 00       		.byte	0
 2541 0013 02       		.uleb128 0x2
 2542 0014 24       		.uleb128 0x24
 2543 0015 00       		.byte	0
 2544 0016 0B       		.uleb128 0xb
 2545 0017 0B       		.uleb128 0xb
 2546 0018 3E       		.uleb128 0x3e
 2547 0019 0B       		.uleb128 0xb
 2548 001a 03       		.uleb128 0x3
 2549 001b 0E       		.uleb128 0xe
 2550 001c 00       		.byte	0
 2551 001d 00       		.byte	0
 2552 001e 03       		.uleb128 0x3
 2553 001f 24       		.uleb128 0x24
 2554 0020 00       		.byte	0
 2555 0021 0B       		.uleb128 0xb
 2556 0022 0B       		.uleb128 0xb
 2557 0023 3E       		.uleb128 0x3e
 2558 0024 0B       		.uleb128 0xb
 2559 0025 03       		.uleb128 0x3
 2560 0026 08       		.uleb128 0x8
 2561 0027 00       		.byte	0
 2562 0028 00       		.byte	0
 2563 0029 04       		.uleb128 0x4
 2564 002a 16       		.uleb128 0x16
 2565 002b 00       		.byte	0
 2566 002c 03       		.uleb128 0x3
 2567 002d 0E       		.uleb128 0xe
 2568 002e 3A       		.uleb128 0x3a
 2569 002f 0B       		.uleb128 0xb
 2570 0030 3B       		.uleb128 0x3b
 2571 0031 0B       		.uleb128 0xb
 2572 0032 49       		.uleb128 0x49
 2573 0033 13       		.uleb128 0x13
 2574 0034 00       		.byte	0
 2575 0035 00       		.byte	0
 2576 0036 05       		.uleb128 0x5
 2577 0037 16       		.uleb128 0x16
 2578 0038 00       		.byte	0
 2579 0039 03       		.uleb128 0x3
 2580 003a 0E       		.uleb128 0xe
 2581 003b 3A       		.uleb128 0x3a
 2582 003c 0B       		.uleb128 0xb
 2583 003d 3B       		.uleb128 0x3b
 2584 003e 05       		.uleb128 0x5
 2585 003f 49       		.uleb128 0x49
 2586 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 75


 2587 0041 00       		.byte	0
 2588 0042 00       		.byte	0
 2589 0043 06       		.uleb128 0x6
 2590 0044 35       		.uleb128 0x35
 2591 0045 00       		.byte	0
 2592 0046 49       		.uleb128 0x49
 2593 0047 13       		.uleb128 0x13
 2594 0048 00       		.byte	0
 2595 0049 00       		.byte	0
 2596 004a 07       		.uleb128 0x7
 2597 004b 2E       		.uleb128 0x2e
 2598 004c 01       		.byte	0x1
 2599 004d 3F       		.uleb128 0x3f
 2600 004e 19       		.uleb128 0x19
 2601 004f 03       		.uleb128 0x3
 2602 0050 0E       		.uleb128 0xe
 2603 0051 3A       		.uleb128 0x3a
 2604 0052 0B       		.uleb128 0xb
 2605 0053 3B       		.uleb128 0x3b
 2606 0054 05       		.uleb128 0x5
 2607 0055 27       		.uleb128 0x27
 2608 0056 19       		.uleb128 0x19
 2609 0057 20       		.uleb128 0x20
 2610 0058 0B       		.uleb128 0xb
 2611 0059 01       		.uleb128 0x1
 2612 005a 13       		.uleb128 0x13
 2613 005b 00       		.byte	0
 2614 005c 00       		.byte	0
 2615 005d 08       		.uleb128 0x8
 2616 005e 05       		.uleb128 0x5
 2617 005f 00       		.byte	0
 2618 0060 03       		.uleb128 0x3
 2619 0061 0E       		.uleb128 0xe
 2620 0062 3A       		.uleb128 0x3a
 2621 0063 0B       		.uleb128 0xb
 2622 0064 3B       		.uleb128 0x3b
 2623 0065 05       		.uleb128 0x5
 2624 0066 49       		.uleb128 0x49
 2625 0067 13       		.uleb128 0x13
 2626 0068 00       		.byte	0
 2627 0069 00       		.byte	0
 2628 006a 09       		.uleb128 0x9
 2629 006b 2E       		.uleb128 0x2e
 2630 006c 01       		.byte	0x1
 2631 006d 3F       		.uleb128 0x3f
 2632 006e 19       		.uleb128 0x19
 2633 006f 03       		.uleb128 0x3
 2634 0070 0E       		.uleb128 0xe
 2635 0071 3A       		.uleb128 0x3a
 2636 0072 0B       		.uleb128 0xb
 2637 0073 3B       		.uleb128 0x3b
 2638 0074 0B       		.uleb128 0xb
 2639 0075 27       		.uleb128 0x27
 2640 0076 19       		.uleb128 0x19
 2641 0077 11       		.uleb128 0x11
 2642 0078 01       		.uleb128 0x1
 2643 0079 12       		.uleb128 0x12
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 76


 2644 007a 06       		.uleb128 0x6
 2645 007b 40       		.uleb128 0x40
 2646 007c 18       		.uleb128 0x18
 2647 007d 9742     		.uleb128 0x2117
 2648 007f 19       		.uleb128 0x19
 2649 0080 01       		.uleb128 0x1
 2650 0081 13       		.uleb128 0x13
 2651 0082 00       		.byte	0
 2652 0083 00       		.byte	0
 2653 0084 0A       		.uleb128 0xa
 2654 0085 1D       		.uleb128 0x1d
 2655 0086 01       		.byte	0x1
 2656 0087 31       		.uleb128 0x31
 2657 0088 13       		.uleb128 0x13
 2658 0089 11       		.uleb128 0x11
 2659 008a 01       		.uleb128 0x1
 2660 008b 12       		.uleb128 0x12
 2661 008c 06       		.uleb128 0x6
 2662 008d 58       		.uleb128 0x58
 2663 008e 0B       		.uleb128 0xb
 2664 008f 59       		.uleb128 0x59
 2665 0090 0B       		.uleb128 0xb
 2666 0091 01       		.uleb128 0x1
 2667 0092 13       		.uleb128 0x13
 2668 0093 00       		.byte	0
 2669 0094 00       		.byte	0
 2670 0095 0B       		.uleb128 0xb
 2671 0096 05       		.uleb128 0x5
 2672 0097 00       		.byte	0
 2673 0098 31       		.uleb128 0x31
 2674 0099 13       		.uleb128 0x13
 2675 009a 1C       		.uleb128 0x1c
 2676 009b 0B       		.uleb128 0xb
 2677 009c 00       		.byte	0
 2678 009d 00       		.byte	0
 2679 009e 0C       		.uleb128 0xc
 2680 009f 1D       		.uleb128 0x1d
 2681 00a0 01       		.byte	0x1
 2682 00a1 31       		.uleb128 0x31
 2683 00a2 13       		.uleb128 0x13
 2684 00a3 52       		.uleb128 0x52
 2685 00a4 01       		.uleb128 0x1
 2686 00a5 55       		.uleb128 0x55
 2687 00a6 17       		.uleb128 0x17
 2688 00a7 58       		.uleb128 0x58
 2689 00a8 0B       		.uleb128 0xb
 2690 00a9 59       		.uleb128 0x59
 2691 00aa 0B       		.uleb128 0xb
 2692 00ab 00       		.byte	0
 2693 00ac 00       		.byte	0
 2694 00ad 0D       		.uleb128 0xd
 2695 00ae 34       		.uleb128 0x34
 2696 00af 00       		.byte	0
 2697 00b0 03       		.uleb128 0x3
 2698 00b1 0E       		.uleb128 0xe
 2699 00b2 3A       		.uleb128 0x3a
 2700 00b3 0B       		.uleb128 0xb
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 77


 2701 00b4 3B       		.uleb128 0x3b
 2702 00b5 0B       		.uleb128 0xb
 2703 00b6 49       		.uleb128 0x49
 2704 00b7 13       		.uleb128 0x13
 2705 00b8 02       		.uleb128 0x2
 2706 00b9 17       		.uleb128 0x17
 2707 00ba 00       		.byte	0
 2708 00bb 00       		.byte	0
 2709 00bc 0E       		.uleb128 0xe
 2710 00bd 898201   		.uleb128 0x4109
 2711 00c0 00       		.byte	0
 2712 00c1 11       		.uleb128 0x11
 2713 00c2 01       		.uleb128 0x1
 2714 00c3 31       		.uleb128 0x31
 2715 00c4 13       		.uleb128 0x13
 2716 00c5 00       		.byte	0
 2717 00c6 00       		.byte	0
 2718 00c7 0F       		.uleb128 0xf
 2719 00c8 2E       		.uleb128 0x2e
 2720 00c9 01       		.byte	0x1
 2721 00ca 3F       		.uleb128 0x3f
 2722 00cb 19       		.uleb128 0x19
 2723 00cc 03       		.uleb128 0x3
 2724 00cd 0E       		.uleb128 0xe
 2725 00ce 3A       		.uleb128 0x3a
 2726 00cf 0B       		.uleb128 0xb
 2727 00d0 3B       		.uleb128 0x3b
 2728 00d1 05       		.uleb128 0x5
 2729 00d2 27       		.uleb128 0x27
 2730 00d3 19       		.uleb128 0x19
 2731 00d4 11       		.uleb128 0x11
 2732 00d5 01       		.uleb128 0x1
 2733 00d6 12       		.uleb128 0x12
 2734 00d7 06       		.uleb128 0x6
 2735 00d8 40       		.uleb128 0x40
 2736 00d9 18       		.uleb128 0x18
 2737 00da 9742     		.uleb128 0x2117
 2738 00dc 19       		.uleb128 0x19
 2739 00dd 01       		.uleb128 0x1
 2740 00de 13       		.uleb128 0x13
 2741 00df 00       		.byte	0
 2742 00e0 00       		.byte	0
 2743 00e1 10       		.uleb128 0x10
 2744 00e2 05       		.uleb128 0x5
 2745 00e3 00       		.byte	0
 2746 00e4 03       		.uleb128 0x3
 2747 00e5 0E       		.uleb128 0xe
 2748 00e6 3A       		.uleb128 0x3a
 2749 00e7 0B       		.uleb128 0xb
 2750 00e8 3B       		.uleb128 0x3b
 2751 00e9 05       		.uleb128 0x5
 2752 00ea 49       		.uleb128 0x49
 2753 00eb 13       		.uleb128 0x13
 2754 00ec 02       		.uleb128 0x2
 2755 00ed 17       		.uleb128 0x17
 2756 00ee 00       		.byte	0
 2757 00ef 00       		.byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 78


 2758 00f0 11       		.uleb128 0x11
 2759 00f1 34       		.uleb128 0x34
 2760 00f2 00       		.byte	0
 2761 00f3 03       		.uleb128 0x3
 2762 00f4 0E       		.uleb128 0xe
 2763 00f5 3A       		.uleb128 0x3a
 2764 00f6 0B       		.uleb128 0xb
 2765 00f7 3B       		.uleb128 0x3b
 2766 00f8 05       		.uleb128 0x5
 2767 00f9 49       		.uleb128 0x49
 2768 00fa 13       		.uleb128 0x13
 2769 00fb 02       		.uleb128 0x2
 2770 00fc 17       		.uleb128 0x17
 2771 00fd 00       		.byte	0
 2772 00fe 00       		.byte	0
 2773 00ff 12       		.uleb128 0x12
 2774 0100 2E       		.uleb128 0x2e
 2775 0101 01       		.byte	0x1
 2776 0102 31       		.uleb128 0x31
 2777 0103 13       		.uleb128 0x13
 2778 0104 11       		.uleb128 0x11
 2779 0105 01       		.uleb128 0x1
 2780 0106 12       		.uleb128 0x12
 2781 0107 06       		.uleb128 0x6
 2782 0108 40       		.uleb128 0x40
 2783 0109 18       		.uleb128 0x18
 2784 010a 9742     		.uleb128 0x2117
 2785 010c 19       		.uleb128 0x19
 2786 010d 01       		.uleb128 0x1
 2787 010e 13       		.uleb128 0x13
 2788 010f 00       		.byte	0
 2789 0110 00       		.byte	0
 2790 0111 13       		.uleb128 0x13
 2791 0112 05       		.uleb128 0x5
 2792 0113 00       		.byte	0
 2793 0114 31       		.uleb128 0x31
 2794 0115 13       		.uleb128 0x13
 2795 0116 02       		.uleb128 0x2
 2796 0117 17       		.uleb128 0x17
 2797 0118 00       		.byte	0
 2798 0119 00       		.byte	0
 2799 011a 14       		.uleb128 0x14
 2800 011b 2E       		.uleb128 0x2e
 2801 011c 00       		.byte	0
 2802 011d 3F       		.uleb128 0x3f
 2803 011e 19       		.uleb128 0x19
 2804 011f 03       		.uleb128 0x3
 2805 0120 0E       		.uleb128 0xe
 2806 0121 3A       		.uleb128 0x3a
 2807 0122 0B       		.uleb128 0xb
 2808 0123 3B       		.uleb128 0x3b
 2809 0124 05       		.uleb128 0x5
 2810 0125 27       		.uleb128 0x27
 2811 0126 19       		.uleb128 0x19
 2812 0127 49       		.uleb128 0x49
 2813 0128 13       		.uleb128 0x13
 2814 0129 11       		.uleb128 0x11
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 79


 2815 012a 01       		.uleb128 0x1
 2816 012b 12       		.uleb128 0x12
 2817 012c 06       		.uleb128 0x6
 2818 012d 40       		.uleb128 0x40
 2819 012e 18       		.uleb128 0x18
 2820 012f 9742     		.uleb128 0x2117
 2821 0131 19       		.uleb128 0x19
 2822 0132 00       		.byte	0
 2823 0133 00       		.byte	0
 2824 0134 15       		.uleb128 0x15
 2825 0135 898201   		.uleb128 0x4109
 2826 0138 01       		.byte	0x1
 2827 0139 11       		.uleb128 0x11
 2828 013a 01       		.uleb128 0x1
 2829 013b 31       		.uleb128 0x31
 2830 013c 13       		.uleb128 0x13
 2831 013d 00       		.byte	0
 2832 013e 00       		.byte	0
 2833 013f 16       		.uleb128 0x16
 2834 0140 8A8201   		.uleb128 0x410a
 2835 0143 00       		.byte	0
 2836 0144 02       		.uleb128 0x2
 2837 0145 18       		.uleb128 0x18
 2838 0146 9142     		.uleb128 0x2111
 2839 0148 18       		.uleb128 0x18
 2840 0149 00       		.byte	0
 2841 014a 00       		.byte	0
 2842 014b 17       		.uleb128 0x17
 2843 014c 05       		.uleb128 0x5
 2844 014d 00       		.byte	0
 2845 014e 31       		.uleb128 0x31
 2846 014f 13       		.uleb128 0x13
 2847 0150 02       		.uleb128 0x2
 2848 0151 18       		.uleb128 0x18
 2849 0152 00       		.byte	0
 2850 0153 00       		.byte	0
 2851 0154 18       		.uleb128 0x18
 2852 0155 05       		.uleb128 0x5
 2853 0156 00       		.byte	0
 2854 0157 03       		.uleb128 0x3
 2855 0158 0E       		.uleb128 0xe
 2856 0159 3A       		.uleb128 0x3a
 2857 015a 0B       		.uleb128 0xb
 2858 015b 3B       		.uleb128 0x3b
 2859 015c 05       		.uleb128 0x5
 2860 015d 49       		.uleb128 0x49
 2861 015e 13       		.uleb128 0x13
 2862 015f 02       		.uleb128 0x2
 2863 0160 18       		.uleb128 0x18
 2864 0161 00       		.byte	0
 2865 0162 00       		.byte	0
 2866 0163 19       		.uleb128 0x19
 2867 0164 34       		.uleb128 0x34
 2868 0165 00       		.byte	0
 2869 0166 03       		.uleb128 0x3
 2870 0167 0E       		.uleb128 0xe
 2871 0168 3A       		.uleb128 0x3a
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 80


 2872 0169 0B       		.uleb128 0xb
 2873 016a 3B       		.uleb128 0x3b
 2874 016b 0B       		.uleb128 0xb
 2875 016c 49       		.uleb128 0x49
 2876 016d 13       		.uleb128 0x13
 2877 016e 3F       		.uleb128 0x3f
 2878 016f 19       		.uleb128 0x19
 2879 0170 02       		.uleb128 0x2
 2880 0171 18       		.uleb128 0x18
 2881 0172 00       		.byte	0
 2882 0173 00       		.byte	0
 2883 0174 1A       		.uleb128 0x1a
 2884 0175 2E       		.uleb128 0x2e
 2885 0176 00       		.byte	0
 2886 0177 3F       		.uleb128 0x3f
 2887 0178 19       		.uleb128 0x19
 2888 0179 03       		.uleb128 0x3
 2889 017a 0E       		.uleb128 0xe
 2890 017b 3A       		.uleb128 0x3a
 2891 017c 0B       		.uleb128 0xb
 2892 017d 3B       		.uleb128 0x3b
 2893 017e 0B       		.uleb128 0xb
 2894 017f 27       		.uleb128 0x27
 2895 0180 19       		.uleb128 0x19
 2896 0181 49       		.uleb128 0x49
 2897 0182 13       		.uleb128 0x13
 2898 0183 3C       		.uleb128 0x3c
 2899 0184 19       		.uleb128 0x19
 2900 0185 00       		.byte	0
 2901 0186 00       		.byte	0
 2902 0187 1B       		.uleb128 0x1b
 2903 0188 2E       		.uleb128 0x2e
 2904 0189 01       		.byte	0x1
 2905 018a 3F       		.uleb128 0x3f
 2906 018b 19       		.uleb128 0x19
 2907 018c 03       		.uleb128 0x3
 2908 018d 0E       		.uleb128 0xe
 2909 018e 3A       		.uleb128 0x3a
 2910 018f 0B       		.uleb128 0xb
 2911 0190 3B       		.uleb128 0x3b
 2912 0191 0B       		.uleb128 0xb
 2913 0192 27       		.uleb128 0x27
 2914 0193 19       		.uleb128 0x19
 2915 0194 3C       		.uleb128 0x3c
 2916 0195 19       		.uleb128 0x19
 2917 0196 00       		.byte	0
 2918 0197 00       		.byte	0
 2919 0198 1C       		.uleb128 0x1c
 2920 0199 05       		.uleb128 0x5
 2921 019a 00       		.byte	0
 2922 019b 49       		.uleb128 0x49
 2923 019c 13       		.uleb128 0x13
 2924 019d 00       		.byte	0
 2925 019e 00       		.byte	0
 2926 019f 00       		.byte	0
 2927              		.section	.debug_loc,"",%progbits
 2928              	.Ldebug_loc0:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 81


 2929              	.LLST0:
 2930 0000 06000000 		.4byte	.LVL4
 2931 0004 13000000 		.4byte	.LVL5-1
 2932 0008 0100     		.2byte	0x1
 2933 000a 50       		.byte	0x50
 2934 000b 00000000 		.4byte	0
 2935 000f 00000000 		.4byte	0
 2936              	.LLST1:
 2937 0013 00000000 		.4byte	.LVL6
 2938 0017 07000000 		.4byte	.LVL7-1
 2939 001b 0100     		.2byte	0x1
 2940 001d 50       		.byte	0x50
 2941 001e 07000000 		.4byte	.LVL7-1
 2942 0022 16000000 		.4byte	.LVL8
 2943 0026 0100     		.2byte	0x1
 2944 0028 54       		.byte	0x54
 2945 0029 16000000 		.4byte	.LVL8
 2946 002d 28000000 		.4byte	.LFE4
 2947 0031 0400     		.2byte	0x4
 2948 0033 F3       		.byte	0xf3
 2949 0034 01       		.uleb128 0x1
 2950 0035 50       		.byte	0x50
 2951 0036 9F       		.byte	0x9f
 2952 0037 00000000 		.4byte	0
 2953 003b 00000000 		.4byte	0
 2954              	.LLST2:
 2955 003f 08000000 		.4byte	.LVL7
 2956 0043 1B000000 		.4byte	.LVL9-1
 2957 0047 0100     		.2byte	0x1
 2958 0049 50       		.byte	0x50
 2959 004a 00000000 		.4byte	0
 2960 004e 00000000 		.4byte	0
 2961              	.LLST3:
 2962 0052 00000000 		.4byte	.LVL10
 2963 0056 07000000 		.4byte	.LVL11-1
 2964 005a 0100     		.2byte	0x1
 2965 005c 50       		.byte	0x50
 2966 005d 07000000 		.4byte	.LVL11-1
 2967 0061 16000000 		.4byte	.LVL12
 2968 0065 0100     		.2byte	0x1
 2969 0067 54       		.byte	0x54
 2970 0068 16000000 		.4byte	.LVL12
 2971 006c 28000000 		.4byte	.LFE5
 2972 0070 0400     		.2byte	0x4
 2973 0072 F3       		.byte	0xf3
 2974 0073 01       		.uleb128 0x1
 2975 0074 50       		.byte	0x50
 2976 0075 9F       		.byte	0x9f
 2977 0076 00000000 		.4byte	0
 2978 007a 00000000 		.4byte	0
 2979              	.LLST4:
 2980 007e 08000000 		.4byte	.LVL11
 2981 0082 1B000000 		.4byte	.LVL13-1
 2982 0086 0100     		.2byte	0x1
 2983 0088 50       		.byte	0x50
 2984 0089 00000000 		.4byte	0
 2985 008d 00000000 		.4byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 82


 2986              	.LLST5:
 2987 0091 00000000 		.4byte	.LVL14
 2988 0095 07000000 		.4byte	.LVL15-1
 2989 0099 0100     		.2byte	0x1
 2990 009b 50       		.byte	0x50
 2991 009c 07000000 		.4byte	.LVL15-1
 2992 00a0 16000000 		.4byte	.LVL16
 2993 00a4 0100     		.2byte	0x1
 2994 00a6 54       		.byte	0x54
 2995 00a7 16000000 		.4byte	.LVL16
 2996 00ab 28000000 		.4byte	.LFE6
 2997 00af 0400     		.2byte	0x4
 2998 00b1 F3       		.byte	0xf3
 2999 00b2 01       		.uleb128 0x1
 3000 00b3 50       		.byte	0x50
 3001 00b4 9F       		.byte	0x9f
 3002 00b5 00000000 		.4byte	0
 3003 00b9 00000000 		.4byte	0
 3004              	.LLST6:
 3005 00bd 08000000 		.4byte	.LVL15
 3006 00c1 1B000000 		.4byte	.LVL17-1
 3007 00c5 0100     		.2byte	0x1
 3008 00c7 50       		.byte	0x50
 3009 00c8 00000000 		.4byte	0
 3010 00cc 00000000 		.4byte	0
 3011              	.LLST7:
 3012 00d0 00000000 		.4byte	.LVL18
 3013 00d4 07000000 		.4byte	.LVL19-1
 3014 00d8 0100     		.2byte	0x1
 3015 00da 50       		.byte	0x50
 3016 00db 07000000 		.4byte	.LVL19-1
 3017 00df 18000000 		.4byte	.LVL20
 3018 00e3 0100     		.2byte	0x1
 3019 00e5 54       		.byte	0x54
 3020 00e6 18000000 		.4byte	.LVL20
 3021 00ea 2C000000 		.4byte	.LFE7
 3022 00ee 0400     		.2byte	0x4
 3023 00f0 F3       		.byte	0xf3
 3024 00f1 01       		.uleb128 0x1
 3025 00f2 50       		.byte	0x50
 3026 00f3 9F       		.byte	0x9f
 3027 00f4 00000000 		.4byte	0
 3028 00f8 00000000 		.4byte	0
 3029              	.LLST8:
 3030 00fc 08000000 		.4byte	.LVL19
 3031 0100 21000000 		.4byte	.LVL21-1
 3032 0104 0100     		.2byte	0x1
 3033 0106 50       		.byte	0x50
 3034 0107 00000000 		.4byte	0
 3035 010b 00000000 		.4byte	0
 3036              	.LLST9:
 3037 010f 00000000 		.4byte	.LVL22
 3038 0113 04000000 		.4byte	.LVL23
 3039 0117 0100     		.2byte	0x1
 3040 0119 50       		.byte	0x50
 3041 011a 04000000 		.4byte	.LVL23
 3042 011e 10000000 		.4byte	.LFE8
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 83


 3043 0122 0400     		.2byte	0x4
 3044 0124 F3       		.byte	0xf3
 3045 0125 01       		.uleb128 0x1
 3046 0126 50       		.byte	0x50
 3047 0127 9F       		.byte	0x9f
 3048 0128 00000000 		.4byte	0
 3049 012c 00000000 		.4byte	0
 3050              	.LLST10:
 3051 0130 00000000 		.4byte	.LVL24
 3052 0134 07000000 		.4byte	.LVL25-1
 3053 0138 0100     		.2byte	0x1
 3054 013a 50       		.byte	0x50
 3055 013b 07000000 		.4byte	.LVL25-1
 3056 013f 18000000 		.4byte	.LVL26
 3057 0143 0100     		.2byte	0x1
 3058 0145 54       		.byte	0x54
 3059 0146 18000000 		.4byte	.LVL26
 3060 014a 28000000 		.4byte	.LFE9
 3061 014e 0400     		.2byte	0x4
 3062 0150 F3       		.byte	0xf3
 3063 0151 01       		.uleb128 0x1
 3064 0152 50       		.byte	0x50
 3065 0153 9F       		.byte	0x9f
 3066 0154 00000000 		.4byte	0
 3067 0158 00000000 		.4byte	0
 3068              	.LLST11:
 3069 015c 08000000 		.4byte	.LVL25
 3070 0160 21000000 		.4byte	.LVL27-1
 3071 0164 0100     		.2byte	0x1
 3072 0166 50       		.byte	0x50
 3073 0167 00000000 		.4byte	0
 3074 016b 00000000 		.4byte	0
 3075              	.LLST12:
 3076 016f 00000000 		.4byte	.LVL28
 3077 0173 07000000 		.4byte	.LVL29-1
 3078 0177 0100     		.2byte	0x1
 3079 0179 50       		.byte	0x50
 3080 017a 07000000 		.4byte	.LVL29-1
 3081 017e 18000000 		.4byte	.LVL30
 3082 0182 0100     		.2byte	0x1
 3083 0184 54       		.byte	0x54
 3084 0185 18000000 		.4byte	.LVL30
 3085 0189 28000000 		.4byte	.LFE10
 3086 018d 0400     		.2byte	0x4
 3087 018f F3       		.byte	0xf3
 3088 0190 01       		.uleb128 0x1
 3089 0191 50       		.byte	0x50
 3090 0192 9F       		.byte	0x9f
 3091 0193 00000000 		.4byte	0
 3092 0197 00000000 		.4byte	0
 3093              	.LLST13:
 3094 019b 08000000 		.4byte	.LVL29
 3095 019f 21000000 		.4byte	.LVL31-1
 3096 01a3 0100     		.2byte	0x1
 3097 01a5 50       		.byte	0x50
 3098 01a6 00000000 		.4byte	0
 3099 01aa 00000000 		.4byte	0
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 84


 3100              	.LLST14:
 3101 01ae 00000000 		.4byte	.LVL32
 3102 01b2 07000000 		.4byte	.LVL33-1
 3103 01b6 0100     		.2byte	0x1
 3104 01b8 50       		.byte	0x50
 3105 01b9 07000000 		.4byte	.LVL33-1
 3106 01bd 10000000 		.4byte	.LVL34
 3107 01c1 0100     		.2byte	0x1
 3108 01c3 54       		.byte	0x54
 3109 01c4 10000000 		.4byte	.LVL34
 3110 01c8 2C000000 		.4byte	.LFE11
 3111 01cc 0400     		.2byte	0x4
 3112 01ce F3       		.byte	0xf3
 3113 01cf 01       		.uleb128 0x1
 3114 01d0 50       		.byte	0x50
 3115 01d1 9F       		.byte	0x9f
 3116 01d2 00000000 		.4byte	0
 3117 01d6 00000000 		.4byte	0
 3118              	.LLST15:
 3119 01da 08000000 		.4byte	.LVL33
 3120 01de 1F000000 		.4byte	.LVL35-1
 3121 01e2 0100     		.2byte	0x1
 3122 01e4 50       		.byte	0x50
 3123 01e5 00000000 		.4byte	0
 3124 01e9 00000000 		.4byte	0
 3125              	.LLST16:
 3126 01ed 00000000 		.4byte	.LVL36
 3127 01f1 07000000 		.4byte	.LVL37-1
 3128 01f5 0100     		.2byte	0x1
 3129 01f7 50       		.byte	0x50
 3130 01f8 07000000 		.4byte	.LVL37-1
 3131 01fc 16000000 		.4byte	.LVL38
 3132 0200 0100     		.2byte	0x1
 3133 0202 54       		.byte	0x54
 3134 0203 16000000 		.4byte	.LVL38
 3135 0207 28000000 		.4byte	.LFE12
 3136 020b 0400     		.2byte	0x4
 3137 020d F3       		.byte	0xf3
 3138 020e 01       		.uleb128 0x1
 3139 020f 50       		.byte	0x50
 3140 0210 9F       		.byte	0x9f
 3141 0211 00000000 		.4byte	0
 3142 0215 00000000 		.4byte	0
 3143              	.LLST17:
 3144 0219 08000000 		.4byte	.LVL37
 3145 021d 1B000000 		.4byte	.LVL39-1
 3146 0221 0100     		.2byte	0x1
 3147 0223 50       		.byte	0x50
 3148 0224 00000000 		.4byte	0
 3149 0228 00000000 		.4byte	0
 3150              	.LLST18:
 3151 022c 00000000 		.4byte	.LVL40
 3152 0230 04000000 		.4byte	.LVL41
 3153 0234 0100     		.2byte	0x1
 3154 0236 50       		.byte	0x50
 3155 0237 04000000 		.4byte	.LVL41
 3156 023b 0C000000 		.4byte	.LFE13
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 85


 3157 023f 0400     		.2byte	0x4
 3158 0241 F3       		.byte	0xf3
 3159 0242 01       		.uleb128 0x1
 3160 0243 50       		.byte	0x50
 3161 0244 9F       		.byte	0x9f
 3162 0245 00000000 		.4byte	0
 3163 0249 00000000 		.4byte	0
 3164              	.LLST19:
 3165 024d 00000000 		.4byte	.LVL42
 3166 0251 07000000 		.4byte	.LVL43-1
 3167 0255 0100     		.2byte	0x1
 3168 0257 50       		.byte	0x50
 3169 0258 07000000 		.4byte	.LVL43-1
 3170 025c 16000000 		.4byte	.LVL44
 3171 0260 0100     		.2byte	0x1
 3172 0262 54       		.byte	0x54
 3173 0263 16000000 		.4byte	.LVL44
 3174 0267 28000000 		.4byte	.LFE15
 3175 026b 0400     		.2byte	0x4
 3176 026d F3       		.byte	0xf3
 3177 026e 01       		.uleb128 0x1
 3178 026f 50       		.byte	0x50
 3179 0270 9F       		.byte	0x9f
 3180 0271 00000000 		.4byte	0
 3181 0275 00000000 		.4byte	0
 3182              	.LLST20:
 3183 0279 08000000 		.4byte	.LVL43
 3184 027d 1B000000 		.4byte	.LVL45-1
 3185 0281 0100     		.2byte	0x1
 3186 0283 50       		.byte	0x50
 3187 0284 00000000 		.4byte	0
 3188 0288 00000000 		.4byte	0
 3189              	.LLST21:
 3190 028c 00000000 		.4byte	.LVL46
 3191 0290 04000000 		.4byte	.LVL47
 3192 0294 0100     		.2byte	0x1
 3193 0296 50       		.byte	0x50
 3194 0297 04000000 		.4byte	.LVL47
 3195 029b 0C000000 		.4byte	.LFE16
 3196 029f 0400     		.2byte	0x4
 3197 02a1 F3       		.byte	0xf3
 3198 02a2 01       		.uleb128 0x1
 3199 02a3 50       		.byte	0x50
 3200 02a4 9F       		.byte	0x9f
 3201 02a5 00000000 		.4byte	0
 3202 02a9 00000000 		.4byte	0
 3203              	.LLST22:
 3204 02ad 00000000 		.4byte	.LVL48
 3205 02b1 07000000 		.4byte	.LVL49-1
 3206 02b5 0100     		.2byte	0x1
 3207 02b7 50       		.byte	0x50
 3208 02b8 07000000 		.4byte	.LVL49-1
 3209 02bc 1E000000 		.4byte	.LVL51
 3210 02c0 0100     		.2byte	0x1
 3211 02c2 54       		.byte	0x54
 3212 02c3 1E000000 		.4byte	.LVL51
 3213 02c7 24000000 		.4byte	.LFE18
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 86


 3214 02cb 0400     		.2byte	0x4
 3215 02cd F3       		.byte	0xf3
 3216 02ce 01       		.uleb128 0x1
 3217 02cf 50       		.byte	0x50
 3218 02d0 9F       		.byte	0x9f
 3219 02d1 00000000 		.4byte	0
 3220 02d5 00000000 		.4byte	0
 3221              	.LLST23:
 3222 02d9 08000000 		.4byte	.LVL49
 3223 02dd 1D000000 		.4byte	.LVL50-1
 3224 02e1 0100     		.2byte	0x1
 3225 02e3 50       		.byte	0x50
 3226 02e4 00000000 		.4byte	0
 3227 02e8 00000000 		.4byte	0
 3228              	.LLST24:
 3229 02ec 00000000 		.4byte	.LVL52
 3230 02f0 04000000 		.4byte	.LVL53
 3231 02f4 0100     		.2byte	0x1
 3232 02f6 50       		.byte	0x50
 3233 02f7 04000000 		.4byte	.LVL53
 3234 02fb 0C000000 		.4byte	.LFE19
 3235 02ff 0400     		.2byte	0x4
 3236 0301 F3       		.byte	0xf3
 3237 0302 01       		.uleb128 0x1
 3238 0303 50       		.byte	0x50
 3239 0304 9F       		.byte	0x9f
 3240 0305 00000000 		.4byte	0
 3241 0309 00000000 		.4byte	0
 3242              	.LLST25:
 3243 030d 00000000 		.4byte	.LVL54
 3244 0311 07000000 		.4byte	.LVL55-1
 3245 0315 0100     		.2byte	0x1
 3246 0317 50       		.byte	0x50
 3247 0318 07000000 		.4byte	.LVL55-1
 3248 031c 18000000 		.4byte	.LVL56
 3249 0320 0100     		.2byte	0x1
 3250 0322 54       		.byte	0x54
 3251 0323 18000000 		.4byte	.LVL56
 3252 0327 28000000 		.4byte	.LFE21
 3253 032b 0400     		.2byte	0x4
 3254 032d F3       		.byte	0xf3
 3255 032e 01       		.uleb128 0x1
 3256 032f 50       		.byte	0x50
 3257 0330 9F       		.byte	0x9f
 3258 0331 00000000 		.4byte	0
 3259 0335 00000000 		.4byte	0
 3260              	.LLST26:
 3261 0339 08000000 		.4byte	.LVL55
 3262 033d 21000000 		.4byte	.LVL57-1
 3263 0341 0100     		.2byte	0x1
 3264 0343 50       		.byte	0x50
 3265 0344 00000000 		.4byte	0
 3266 0348 00000000 		.4byte	0
 3267              	.LLST27:
 3268 034c 00000000 		.4byte	.LVL58
 3269 0350 04000000 		.4byte	.LVL59
 3270 0354 0100     		.2byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 87


 3271 0356 50       		.byte	0x50
 3272 0357 04000000 		.4byte	.LVL59
 3273 035b 0C000000 		.4byte	.LFE22
 3274 035f 0400     		.2byte	0x4
 3275 0361 F3       		.byte	0xf3
 3276 0362 01       		.uleb128 0x1
 3277 0363 50       		.byte	0x50
 3278 0364 9F       		.byte	0x9f
 3279 0365 00000000 		.4byte	0
 3280 0369 00000000 		.4byte	0
 3281              	.LLST28:
 3282 036d 00000000 		.4byte	.LVL60
 3283 0371 04000000 		.4byte	.LVL61
 3284 0375 0100     		.2byte	0x1
 3285 0377 50       		.byte	0x50
 3286 0378 04000000 		.4byte	.LVL61
 3287 037c 0C000000 		.4byte	.LFE24
 3288 0380 0400     		.2byte	0x4
 3289 0382 F3       		.byte	0xf3
 3290 0383 01       		.uleb128 0x1
 3291 0384 50       		.byte	0x50
 3292 0385 9F       		.byte	0x9f
 3293 0386 00000000 		.4byte	0
 3294 038a 00000000 		.4byte	0
 3295              	.LLST29:
 3296 038e 00000000 		.4byte	.LVL62
 3297 0392 07000000 		.4byte	.LVL63-1
 3298 0396 0100     		.2byte	0x1
 3299 0398 50       		.byte	0x50
 3300 0399 07000000 		.4byte	.LVL63-1
 3301 039d 16000000 		.4byte	.LVL64
 3302 03a1 0100     		.2byte	0x1
 3303 03a3 54       		.byte	0x54
 3304 03a4 16000000 		.4byte	.LVL64
 3305 03a8 24000000 		.4byte	.LFE28
 3306 03ac 0400     		.2byte	0x4
 3307 03ae F3       		.byte	0xf3
 3308 03af 01       		.uleb128 0x1
 3309 03b0 50       		.byte	0x50
 3310 03b1 9F       		.byte	0x9f
 3311 03b2 00000000 		.4byte	0
 3312 03b6 00000000 		.4byte	0
 3313              	.LLST30:
 3314 03ba 08000000 		.4byte	.LVL63
 3315 03be 1B000000 		.4byte	.LVL65-1
 3316 03c2 0100     		.2byte	0x1
 3317 03c4 50       		.byte	0x50
 3318 03c5 00000000 		.4byte	0
 3319 03c9 00000000 		.4byte	0
 3320              	.LLST31:
 3321 03cd 00000000 		.4byte	.LVL66
 3322 03d1 07000000 		.4byte	.LVL67-1
 3323 03d5 0100     		.2byte	0x1
 3324 03d7 50       		.byte	0x50
 3325 03d8 07000000 		.4byte	.LVL67-1
 3326 03dc 10000000 		.4byte	.LVL68
 3327 03e0 0100     		.2byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 88


 3328 03e2 54       		.byte	0x54
 3329 03e3 10000000 		.4byte	.LVL68
 3330 03e7 24000000 		.4byte	.LFE29
 3331 03eb 0400     		.2byte	0x4
 3332 03ed F3       		.byte	0xf3
 3333 03ee 01       		.uleb128 0x1
 3334 03ef 50       		.byte	0x50
 3335 03f0 9F       		.byte	0x9f
 3336 03f1 00000000 		.4byte	0
 3337 03f5 00000000 		.4byte	0
 3338              	.LLST32:
 3339 03f9 08000000 		.4byte	.LVL67
 3340 03fd 1D000000 		.4byte	.LVL69-1
 3341 0401 0100     		.2byte	0x1
 3342 0403 50       		.byte	0x50
 3343 0404 00000000 		.4byte	0
 3344 0408 00000000 		.4byte	0
 3345              	.LLST33:
 3346 040c 00000000 		.4byte	.LVL70
 3347 0410 07000000 		.4byte	.LVL71-1
 3348 0414 0100     		.2byte	0x1
 3349 0416 50       		.byte	0x50
 3350 0417 07000000 		.4byte	.LVL71-1
 3351 041b 10000000 		.4byte	.LVL72
 3352 041f 0100     		.2byte	0x1
 3353 0421 54       		.byte	0x54
 3354 0422 10000000 		.4byte	.LVL72
 3355 0426 28000000 		.4byte	.LFE30
 3356 042a 0400     		.2byte	0x4
 3357 042c F3       		.byte	0xf3
 3358 042d 01       		.uleb128 0x1
 3359 042e 50       		.byte	0x50
 3360 042f 9F       		.byte	0x9f
 3361 0430 00000000 		.4byte	0
 3362 0434 00000000 		.4byte	0
 3363              	.LLST34:
 3364 0438 08000000 		.4byte	.LVL71
 3365 043c 1D000000 		.4byte	.LVL73-1
 3366 0440 0100     		.2byte	0x1
 3367 0442 50       		.byte	0x50
 3368 0443 00000000 		.4byte	0
 3369 0447 00000000 		.4byte	0
 3370              	.LLST35:
 3371 044b 00000000 		.4byte	.LVL74
 3372 044f 07000000 		.4byte	.LVL75-1
 3373 0453 0100     		.2byte	0x1
 3374 0455 50       		.byte	0x50
 3375 0456 07000000 		.4byte	.LVL75-1
 3376 045a 10000000 		.4byte	.LVL76
 3377 045e 0100     		.2byte	0x1
 3378 0460 54       		.byte	0x54
 3379 0461 10000000 		.4byte	.LVL76
 3380 0465 24000000 		.4byte	.LFE31
 3381 0469 0400     		.2byte	0x4
 3382 046b F3       		.byte	0xf3
 3383 046c 01       		.uleb128 0x1
 3384 046d 50       		.byte	0x50
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 89


 3385 046e 9F       		.byte	0x9f
 3386 046f 00000000 		.4byte	0
 3387 0473 00000000 		.4byte	0
 3388              	.LLST36:
 3389 0477 08000000 		.4byte	.LVL75
 3390 047b 1D000000 		.4byte	.LVL77-1
 3391 047f 0100     		.2byte	0x1
 3392 0481 50       		.byte	0x50
 3393 0482 00000000 		.4byte	0
 3394 0486 00000000 		.4byte	0
 3395              	.LLST37:
 3396 048a 00000000 		.4byte	.LVL78
 3397 048e 07000000 		.4byte	.LVL79-1
 3398 0492 0100     		.2byte	0x1
 3399 0494 50       		.byte	0x50
 3400 0495 07000000 		.4byte	.LVL79-1
 3401 0499 10000000 		.4byte	.LVL80
 3402 049d 0100     		.2byte	0x1
 3403 049f 54       		.byte	0x54
 3404 04a0 10000000 		.4byte	.LVL80
 3405 04a4 24000000 		.4byte	.LFE32
 3406 04a8 0400     		.2byte	0x4
 3407 04aa F3       		.byte	0xf3
 3408 04ab 01       		.uleb128 0x1
 3409 04ac 50       		.byte	0x50
 3410 04ad 9F       		.byte	0x9f
 3411 04ae 00000000 		.4byte	0
 3412 04b2 00000000 		.4byte	0
 3413              	.LLST38:
 3414 04b6 08000000 		.4byte	.LVL79
 3415 04ba 1D000000 		.4byte	.LVL81-1
 3416 04be 0100     		.2byte	0x1
 3417 04c0 50       		.byte	0x50
 3418 04c1 00000000 		.4byte	0
 3419 04c5 00000000 		.4byte	0
 3420              	.LLST39:
 3421 04c9 00000000 		.4byte	.LVL82
 3422 04cd 09000000 		.4byte	.LVL83-1
 3423 04d1 0100     		.2byte	0x1
 3424 04d3 50       		.byte	0x50
 3425 04d4 09000000 		.4byte	.LVL83-1
 3426 04d8 0E000000 		.4byte	.LVL84
 3427 04dc 0100     		.2byte	0x1
 3428 04de 55       		.byte	0x55
 3429 04df 0E000000 		.4byte	.LVL84
 3430 04e3 1C000000 		.4byte	.LFE33
 3431 04e7 0400     		.2byte	0x4
 3432 04e9 F3       		.byte	0xf3
 3433 04ea 01       		.uleb128 0x1
 3434 04eb 50       		.byte	0x50
 3435 04ec 9F       		.byte	0x9f
 3436 04ed 00000000 		.4byte	0
 3437 04f1 00000000 		.4byte	0
 3438              	.LLST40:
 3439 04f5 00000000 		.4byte	.LVL82
 3440 04f9 09000000 		.4byte	.LVL83-1
 3441 04fd 0100     		.2byte	0x1
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 90


 3442 04ff 51       		.byte	0x51
 3443 0500 09000000 		.4byte	.LVL83-1
 3444 0504 14000000 		.4byte	.LVL86
 3445 0508 0100     		.2byte	0x1
 3446 050a 54       		.byte	0x54
 3447 050b 14000000 		.4byte	.LVL86
 3448 050f 1C000000 		.4byte	.LFE33
 3449 0513 0400     		.2byte	0x4
 3450 0515 F3       		.byte	0xf3
 3451 0516 01       		.uleb128 0x1
 3452 0517 51       		.byte	0x51
 3453 0518 9F       		.byte	0x9f
 3454 0519 00000000 		.4byte	0
 3455 051d 00000000 		.4byte	0
 3456              	.LLST41:
 3457 0521 0A000000 		.4byte	.LVL83
 3458 0525 13000000 		.4byte	.LVL85-1
 3459 0529 0100     		.2byte	0x1
 3460 052b 50       		.byte	0x50
 3461 052c 00000000 		.4byte	0
 3462 0530 00000000 		.4byte	0
 3463              	.LLST42:
 3464 0534 06000000 		.4byte	.LVL87
 3465 0538 13000000 		.4byte	.LVL88-1
 3466 053c 0100     		.2byte	0x1
 3467 053e 50       		.byte	0x50
 3468 053f 00000000 		.4byte	0
 3469 0543 00000000 		.4byte	0
 3470              		.section	.debug_aranges,"",%progbits
 3471 0000 54010000 		.4byte	0x154
 3472 0004 0200     		.2byte	0x2
 3473 0006 00000000 		.4byte	.Ldebug_info0
 3474 000a 04       		.byte	0x4
 3475 000b 00       		.byte	0
 3476 000c 0000     		.2byte	0
 3477 000e 0000     		.2byte	0
 3478 0010 00000000 		.4byte	.LFB0
 3479 0014 3C000000 		.4byte	.LFE0-.LFB0
 3480 0018 00000000 		.4byte	.LFB3
 3481 001c 1C000000 		.4byte	.LFE3-.LFB3
 3482 0020 00000000 		.4byte	.LFB4
 3483 0024 28000000 		.4byte	.LFE4-.LFB4
 3484 0028 00000000 		.4byte	.LFB5
 3485 002c 28000000 		.4byte	.LFE5-.LFB5
 3486 0030 00000000 		.4byte	.LFB6
 3487 0034 28000000 		.4byte	.LFE6-.LFB6
 3488 0038 00000000 		.4byte	.LFB7
 3489 003c 2C000000 		.4byte	.LFE7-.LFB7
 3490 0040 00000000 		.4byte	.LFB8
 3491 0044 10000000 		.4byte	.LFE8-.LFB8
 3492 0048 00000000 		.4byte	.LFB9
 3493 004c 28000000 		.4byte	.LFE9-.LFB9
 3494 0050 00000000 		.4byte	.LFB10
 3495 0054 28000000 		.4byte	.LFE10-.LFB10
 3496 0058 00000000 		.4byte	.LFB11
 3497 005c 2C000000 		.4byte	.LFE11-.LFB11
 3498 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 91


 3499 0064 28000000 		.4byte	.LFE12-.LFB12
 3500 0068 00000000 		.4byte	.LFB13
 3501 006c 0C000000 		.4byte	.LFE13-.LFB13
 3502 0070 00000000 		.4byte	.LFB14
 3503 0074 0C000000 		.4byte	.LFE14-.LFB14
 3504 0078 00000000 		.4byte	.LFB15
 3505 007c 28000000 		.4byte	.LFE15-.LFB15
 3506 0080 00000000 		.4byte	.LFB16
 3507 0084 0C000000 		.4byte	.LFE16-.LFB16
 3508 0088 00000000 		.4byte	.LFB17
 3509 008c 0C000000 		.4byte	.LFE17-.LFB17
 3510 0090 00000000 		.4byte	.LFB18
 3511 0094 24000000 		.4byte	.LFE18-.LFB18
 3512 0098 00000000 		.4byte	.LFB19
 3513 009c 0C000000 		.4byte	.LFE19-.LFB19
 3514 00a0 00000000 		.4byte	.LFB20
 3515 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3516 00a8 00000000 		.4byte	.LFB21
 3517 00ac 28000000 		.4byte	.LFE21-.LFB21
 3518 00b0 00000000 		.4byte	.LFB22
 3519 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3520 00b8 00000000 		.4byte	.LFB23
 3521 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3522 00c0 00000000 		.4byte	.LFB24
 3523 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3524 00c8 00000000 		.4byte	.LFB25
 3525 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3526 00d0 00000000 		.4byte	.LFB26
 3527 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3528 00d8 00000000 		.4byte	.LFB27
 3529 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3530 00e0 00000000 		.4byte	.LFB28
 3531 00e4 24000000 		.4byte	.LFE28-.LFB28
 3532 00e8 00000000 		.4byte	.LFB29
 3533 00ec 24000000 		.4byte	.LFE29-.LFB29
 3534 00f0 00000000 		.4byte	.LFB30
 3535 00f4 28000000 		.4byte	.LFE30-.LFB30
 3536 00f8 00000000 		.4byte	.LFB31
 3537 00fc 24000000 		.4byte	.LFE31-.LFB31
 3538 0100 00000000 		.4byte	.LFB32
 3539 0104 24000000 		.4byte	.LFE32-.LFB32
 3540 0108 00000000 		.4byte	.LFB33
 3541 010c 1C000000 		.4byte	.LFE33-.LFB33
 3542 0110 00000000 		.4byte	.LFB1
 3543 0114 24000000 		.4byte	.LFE1-.LFB1
 3544 0118 00000000 		.4byte	.LFB2
 3545 011c 1C000000 		.4byte	.LFE2-.LFB2
 3546 0120 00000000 		.4byte	.LFB34
 3547 0124 14000000 		.4byte	.LFE34-.LFB34
 3548 0128 00000000 		.4byte	.LFB35
 3549 012c 0C000000 		.4byte	.LFE35-.LFB35
 3550 0130 00000000 		.4byte	.LFB36
 3551 0134 0C000000 		.4byte	.LFE36-.LFB36
 3552 0138 00000000 		.4byte	.LFB37
 3553 013c 0C000000 		.4byte	.LFE37-.LFB37
 3554 0140 00000000 		.4byte	.LFB38
 3555 0144 0C000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 92


 3556 0148 00000000 		.4byte	.LFB39
 3557 014c 0C000000 		.4byte	.LFE39-.LFB39
 3558 0150 00000000 		.4byte	0
 3559 0154 00000000 		.4byte	0
 3560              		.section	.debug_ranges,"",%progbits
 3561              	.Ldebug_ranges0:
 3562 0000 1E000000 		.4byte	.LBB16
 3563 0004 20000000 		.4byte	.LBE16
 3564 0008 20000000 		.4byte	.LBB19
 3565 000c 22000000 		.4byte	.LBE19
 3566 0010 00000000 		.4byte	0
 3567 0014 00000000 		.4byte	0
 3568 0018 00000000 		.4byte	.LFB0
 3569 001c 3C000000 		.4byte	.LFE0
 3570 0020 00000000 		.4byte	.LFB3
 3571 0024 1C000000 		.4byte	.LFE3
 3572 0028 00000000 		.4byte	.LFB4
 3573 002c 28000000 		.4byte	.LFE4
 3574 0030 00000000 		.4byte	.LFB5
 3575 0034 28000000 		.4byte	.LFE5
 3576 0038 00000000 		.4byte	.LFB6
 3577 003c 28000000 		.4byte	.LFE6
 3578 0040 00000000 		.4byte	.LFB7
 3579 0044 2C000000 		.4byte	.LFE7
 3580 0048 00000000 		.4byte	.LFB8
 3581 004c 10000000 		.4byte	.LFE8
 3582 0050 00000000 		.4byte	.LFB9
 3583 0054 28000000 		.4byte	.LFE9
 3584 0058 00000000 		.4byte	.LFB10
 3585 005c 28000000 		.4byte	.LFE10
 3586 0060 00000000 		.4byte	.LFB11
 3587 0064 2C000000 		.4byte	.LFE11
 3588 0068 00000000 		.4byte	.LFB12
 3589 006c 28000000 		.4byte	.LFE12
 3590 0070 00000000 		.4byte	.LFB13
 3591 0074 0C000000 		.4byte	.LFE13
 3592 0078 00000000 		.4byte	.LFB14
 3593 007c 0C000000 		.4byte	.LFE14
 3594 0080 00000000 		.4byte	.LFB15
 3595 0084 28000000 		.4byte	.LFE15
 3596 0088 00000000 		.4byte	.LFB16
 3597 008c 0C000000 		.4byte	.LFE16
 3598 0090 00000000 		.4byte	.LFB17
 3599 0094 0C000000 		.4byte	.LFE17
 3600 0098 00000000 		.4byte	.LFB18
 3601 009c 24000000 		.4byte	.LFE18
 3602 00a0 00000000 		.4byte	.LFB19
 3603 00a4 0C000000 		.4byte	.LFE19
 3604 00a8 00000000 		.4byte	.LFB20
 3605 00ac 0C000000 		.4byte	.LFE20
 3606 00b0 00000000 		.4byte	.LFB21
 3607 00b4 28000000 		.4byte	.LFE21
 3608 00b8 00000000 		.4byte	.LFB22
 3609 00bc 0C000000 		.4byte	.LFE22
 3610 00c0 00000000 		.4byte	.LFB23
 3611 00c4 0C000000 		.4byte	.LFE23
 3612 00c8 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 93


 3613 00cc 0C000000 		.4byte	.LFE24
 3614 00d0 00000000 		.4byte	.LFB25
 3615 00d4 0C000000 		.4byte	.LFE25
 3616 00d8 00000000 		.4byte	.LFB26
 3617 00dc 0C000000 		.4byte	.LFE26
 3618 00e0 00000000 		.4byte	.LFB27
 3619 00e4 0C000000 		.4byte	.LFE27
 3620 00e8 00000000 		.4byte	.LFB28
 3621 00ec 24000000 		.4byte	.LFE28
 3622 00f0 00000000 		.4byte	.LFB29
 3623 00f4 24000000 		.4byte	.LFE29
 3624 00f8 00000000 		.4byte	.LFB30
 3625 00fc 28000000 		.4byte	.LFE30
 3626 0100 00000000 		.4byte	.LFB31
 3627 0104 24000000 		.4byte	.LFE31
 3628 0108 00000000 		.4byte	.LFB32
 3629 010c 24000000 		.4byte	.LFE32
 3630 0110 00000000 		.4byte	.LFB33
 3631 0114 1C000000 		.4byte	.LFE33
 3632 0118 00000000 		.4byte	.LFB1
 3633 011c 24000000 		.4byte	.LFE1
 3634 0120 00000000 		.4byte	.LFB2
 3635 0124 1C000000 		.4byte	.LFE2
 3636 0128 00000000 		.4byte	.LFB34
 3637 012c 14000000 		.4byte	.LFE34
 3638 0130 00000000 		.4byte	.LFB35
 3639 0134 0C000000 		.4byte	.LFE35
 3640 0138 00000000 		.4byte	.LFB36
 3641 013c 0C000000 		.4byte	.LFE36
 3642 0140 00000000 		.4byte	.LFB37
 3643 0144 0C000000 		.4byte	.LFE37
 3644 0148 00000000 		.4byte	.LFB38
 3645 014c 0C000000 		.4byte	.LFE38
 3646 0150 00000000 		.4byte	.LFB39
 3647 0154 0C000000 		.4byte	.LFE39
 3648 0158 00000000 		.4byte	0
 3649 015c 00000000 		.4byte	0
 3650              		.section	.debug_line,"",%progbits
 3651              	.Ldebug_line0:
 3652 0000 E5030000 		.section	.debug_str,"MS",%progbits,1
 3652      02004F00 
 3652      00000201 
 3652      FB0E0D00 
 3652      01010101 
 3653              	.LASF39:
 3654 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 3654      725F5365 
 3654      7450574D 
 3654      53746F70 
 3654      4F6E4B69 
 3655              	.LASF23:
 3656 0017 636F756E 		.ascii	"count\000"
 3656      7400
 3657              	.LASF78:
 3658 001d 443A5C77 		.ascii	"D:\\wifi_work\\new_board\\newboard_0521_boot\\UART_"
 3658      6966695F 
 3658      776F726B 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 94


 3658      5C6E6577 
 3658      5F626F61 
 3659 004c 426F6F74 		.ascii	"Bootloadable.cydsn\000"
 3659      6C6F6164 
 3659      61626C65 
 3659      2E637964 
 3659      736E00
 3660              	.LASF81:
 3661 005f 43794578 		.ascii	"CyExitCriticalSection\000"
 3661      69744372 
 3661      69746963 
 3661      616C5365 
 3661      6374696F 
 3662              	.LASF17:
 3663 0075 54696D65 		.ascii	"Timer_WritePeriod\000"
 3663      725F5772 
 3663      69746550 
 3663      6572696F 
 3663      6400
 3664              	.LASF75:
 3665 0087 54696D65 		.ascii	"Timer_SetInterrupt\000"
 3665      725F5365 
 3665      74496E74 
 3665      65727275 
 3665      707400
 3666              	.LASF19:
 3667 009a 70657269 		.ascii	"period\000"
 3667      6F6400
 3668              	.LASF26:
 3669 00a1 54696D65 		.ascii	"Timer_SetMode\000"
 3669      725F5365 
 3669      744D6F64 
 3669      6500
 3670              	.LASF79:
 3671 00af 54696D65 		.ascii	"Timer_initVar\000"
 3671      725F696E 
 3671      69745661 
 3671      7200
 3672              	.LASF7:
 3673 00bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 3673      206C6F6E 
 3673      6720756E 
 3673      7369676E 
 3673      65642069 
 3674              	.LASF41:
 3675 00d4 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 3675      725F5365 
 3675      7450574D 
 3675      44656164 
 3675      54696D65 
 3676              	.LASF37:
 3677 00e9 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 3677      725F5365 
 3677      7450574D 
 3677      53796E63 
 3677      4B696C6C 
 3678              	.LASF30:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 95


 3679 00fe 71644D6F 		.ascii	"qdMode\000"
 3679      646500
 3680              	.LASF6:
 3681 0105 6C6F6E67 		.ascii	"long long int\000"
 3681      206C6F6E 
 3681      6720696E 
 3681      7400
 3682              	.LASF0:
 3683 0113 7369676E 		.ascii	"signed char\000"
 3683      65642063 
 3683      68617200 
 3684              	.LASF28:
 3685 011f 54696D65 		.ascii	"Timer_SetQDMode\000"
 3685      725F5365 
 3685      7451444D 
 3685      6F646500 
 3686              	.LASF66:
 3687 012f 54696D65 		.ascii	"Timer_SetCountMode\000"
 3687      725F5365 
 3687      74436F75 
 3687      6E744D6F 
 3687      646500
 3688              	.LASF4:
 3689 0142 6C6F6E67 		.ascii	"long int\000"
 3689      20696E74 
 3689      00
 3690              	.LASF59:
 3691 014b 54696D65 		.ascii	"Timer_ReadCapture\000"
 3691      725F5265 
 3691      61644361 
 3691      70747572 
 3691      6500
 3692              	.LASF67:
 3693 015d 54696D65 		.ascii	"Timer_TriggerCommand\000"
 3693      725F5472 
 3693      69676765 
 3693      72436F6D 
 3693      6D616E64 
 3694              	.LASF9:
 3695 0172 75696E74 		.ascii	"uint8\000"
 3695      3800
 3696              	.LASF12:
 3697 0178 646F7562 		.ascii	"double\000"
 3697      6C6500
 3698              	.LASF16:
 3699 017f 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 3699      725F5365 
 3699      74496E74 
 3699      65727275 
 3699      70744D6F 
 3700              	.LASF10:
 3701 0196 75696E74 		.ascii	"uint32\000"
 3701      333200
 3702              	.LASF20:
 3703 019d 54696D65 		.ascii	"Timer_WriteCompare\000"
 3703      725F5772 
 3703      69746543 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 96


 3703      6F6D7061 
 3703      726500
 3704              	.LASF73:
 3705 01b0 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 3705      725F4765 
 3705      74496E74 
 3705      65727275 
 3705      7074536F 
 3706              	.LASF62:
 3707 01c9 74726967 		.ascii	"triggerMode\000"
 3707      6765724D 
 3707      6F646500 
 3708              	.LASF44:
 3709 01d5 6D61736B 		.ascii	"mask\000"
 3709      00
 3710              	.LASF55:
 3711 01da 54696D65 		.ascii	"Timer_ReadCompare\000"
 3711      725F5265 
 3711      6164436F 
 3711      6D706172 
 3711      6500
 3712              	.LASF42:
 3713 01ec 64656164 		.ascii	"deadTime\000"
 3713      54696D65 
 3713      00
 3714              	.LASF56:
 3715 01f5 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 3715      725F5772 
 3715      69746543 
 3715      6F6D7061 
 3715      72654275 
 3716              	.LASF77:
 3717 020b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Timer.c\000"
 3717      6E657261 
 3717      7465645F 
 3717      536F7572 
 3717      63655C50 
 3718              	.LASF8:
 3719 022c 756E7369 		.ascii	"unsigned int\000"
 3719      676E6564 
 3719      20696E74 
 3719      00
 3720              	.LASF70:
 3721 0239 54696D65 		.ascii	"Timer_Start\000"
 3721      725F5374 
 3721      61727400 
 3722              	.LASF68:
 3723 0245 636F6D6D 		.ascii	"command\000"
 3723      616E6400 
 3724              	.LASF5:
 3725 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 3725      20756E73 
 3725      69676E65 
 3725      6420696E 
 3725      7400
 3726              	.LASF36:
 3727 025f 6D6F6465 		.ascii	"modeMask\000"
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 97


 3727      4D61736B 
 3727      00
 3728              	.LASF69:
 3729 0268 54696D65 		.ascii	"Timer_Enable\000"
 3729      725F456E 
 3729      61626C65 
 3729      00
 3730              	.LASF80:
 3731 0275 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3731      74657243 
 3731      72697469 
 3731      63616C53 
 3731      65637469 
 3732              	.LASF3:
 3733 028c 73686F72 		.ascii	"short unsigned int\000"
 3733      7420756E 
 3733      7369676E 
 3733      65642069 
 3733      6E7400
 3734              	.LASF22:
 3735 029f 54696D65 		.ascii	"Timer_WriteCounter\000"
 3735      725F5772 
 3735      69746543 
 3735      6F756E74 
 3735      657200
 3736              	.LASF47:
 3737 02b2 54696D65 		.ascii	"Timer_ReadCounter\000"
 3737      725F5265 
 3737      6164436F 
 3737      756E7465 
 3737      7200
 3738              	.LASF25:
 3739 02c4 54696D65 		.ascii	"Timer_Stop\000"
 3739      725F5374 
 3739      6F7000
 3740              	.LASF34:
 3741 02cf 6F6E6553 		.ascii	"oneShotEnable\000"
 3741      686F7445 
 3741      6E61626C 
 3741      6500
 3742              	.LASF72:
 3743 02dd 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 3743      725F4765 
 3743      74496E74 
 3743      65727275 
 3743      7074536F 
 3744              	.LASF14:
 3745 02fc 72656733 		.ascii	"reg32\000"
 3745      3200
 3746              	.LASF53:
 3747 0302 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 3747      725F5265 
 3747      61645065 
 3747      72696F64 
 3747      42756600 
 3748              	.LASF49:
 3749 0316 54696D65 		.ascii	"Timer_SetCompareSwap\000"
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 98


 3749      725F5365 
 3749      74436F6D 
 3749      70617265 
 3749      53776170 
 3750              	.LASF15:
 3751 032b 73697A65 		.ascii	"sizetype\000"
 3751      74797065 
 3751      00
 3752              	.LASF51:
 3753 0334 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 3753      725F5772 
 3753      69746550 
 3753      6572696F 
 3753      64427566 
 3754              	.LASF38:
 3755 0349 73796E63 		.ascii	"syncKillEnable\000"
 3755      4B696C6C 
 3755      456E6162 
 3755      6C6500
 3756              	.LASF43:
 3757 0358 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 3757      725F5365 
 3757      7450574D 
 3757      496E7665 
 3757      727400
 3758              	.LASF21:
 3759 036b 636F6D70 		.ascii	"compare\000"
 3759      61726500 
 3760              	.LASF63:
 3761 0373 54696D65 		.ascii	"Timer_SetReloadMode\000"
 3761      725F5365 
 3761      7452656C 
 3761      6F61644D 
 3761      6F646500 
 3762              	.LASF64:
 3763 0387 54696D65 		.ascii	"Timer_SetStartMode\000"
 3763      725F5365 
 3763      74537461 
 3763      72744D6F 
 3763      646500
 3764              	.LASF11:
 3765 039a 666C6F61 		.ascii	"float\000"
 3765      7400
 3766              	.LASF32:
 3767 03a0 70726573 		.ascii	"prescaler\000"
 3767      63616C65 
 3767      7200
 3768              	.LASF65:
 3769 03aa 54696D65 		.ascii	"Timer_SetStopMode\000"
 3769      725F5365 
 3769      7453746F 
 3769      704D6F64 
 3769      6500
 3770              	.LASF54:
 3771 03bc 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 3771      725F5365 
 3771      74506572 
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 99


 3771      696F6453 
 3771      77617000 
 3772              	.LASF60:
 3773 03d0 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 3773      725F5265 
 3773      61644361 
 3773      70747572 
 3773      65427566 
 3774              	.LASF71:
 3775 03e5 54696D65 		.ascii	"Timer_ReadStatus\000"
 3775      725F5265 
 3775      61645374 
 3775      61747573 
 3775      00
 3776              	.LASF1:
 3777 03f6 756E7369 		.ascii	"unsigned char\000"
 3777      676E6564 
 3777      20636861 
 3777      7200
 3778              	.LASF40:
 3779 0404 73746F70 		.ascii	"stopOnKillEnable\000"
 3779      4F6E4B69 
 3779      6C6C456E 
 3779      61626C65 
 3779      00
 3780              	.LASF2:
 3781 0415 73686F72 		.ascii	"short int\000"
 3781      7420696E 
 3781      7400
 3782              	.LASF18:
 3783 041f 696E7465 		.ascii	"interruptMask\000"
 3783      72727570 
 3783      744D6173 
 3783      6B00
 3784              	.LASF31:
 3785 042d 54696D65 		.ascii	"Timer_SetPrescaler\000"
 3785      725F5365 
 3785      74507265 
 3785      7363616C 
 3785      657200
 3786              	.LASF24:
 3787 0440 54696D65 		.ascii	"Timer_Init\000"
 3787      725F496E 
 3787      697400
 3788              	.LASF45:
 3789 044b 54696D65 		.ascii	"Timer_SetCounterMode\000"
 3789      725F5365 
 3789      74436F75 
 3789      6E746572 
 3789      4D6F6465 
 3790              	.LASF13:
 3791 0460 63686172 		.ascii	"char\000"
 3791      00
 3792              	.LASF29:
 3793 0465 6D6F6465 		.ascii	"mode\000"
 3793      00
 3794              	.LASF76:
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 100


 3795 046a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3795      4320342E 
 3795      382E3420 
 3795      32303134 
 3795      30353236 
 3796 049d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3796      20726576 
 3796      6973696F 
 3796      6E203231 
 3796      31333538 
 3797 04d0 73202D66 		.ascii	"s -ffunction-sections\000"
 3797      66756E63 
 3797      74696F6E 
 3797      2D736563 
 3797      74696F6E 
 3798              	.LASF46:
 3799 04e6 636F756E 		.ascii	"counterMode\000"
 3799      7465724D 
 3799      6F646500 
 3800              	.LASF48:
 3801 04f2 54696D65 		.ascii	"Timer_ReadPeriod\000"
 3801      725F5265 
 3801      61645065 
 3801      72696F64 
 3801      00
 3802              	.LASF57:
 3803 0503 636F6D70 		.ascii	"compareBuf\000"
 3803      61726542 
 3803      756600
 3804              	.LASF27:
 3805 050e 656E6162 		.ascii	"enableInterrupts\000"
 3805      6C65496E 
 3805      74657272 
 3805      75707473 
 3805      00
 3806              	.LASF61:
 3807 051f 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 3807      725F5365 
 3807      74436170 
 3807      74757265 
 3807      4D6F6465 
 3808              	.LASF33:
 3809 0534 54696D65 		.ascii	"Timer_SetOneShot\000"
 3809      725F5365 
 3809      744F6E65 
 3809      53686F74 
 3809      00
 3810              	.LASF74:
 3811 0545 54696D65 		.ascii	"Timer_ClearInterrupt\000"
 3811      725F436C 
 3811      65617249 
 3811      6E746572 
 3811      72757074 
 3812              	.LASF50:
 3813 055a 73776170 		.ascii	"swapEnable\000"
 3813      456E6162 
 3813      6C6500
ARM GAS  C:\Users\kevin\AppData\Local\Temp\ccCM08cR.s 			page 101


 3814              	.LASF52:
 3815 0565 70657269 		.ascii	"periodBuf\000"
 3815      6F644275 
 3815      6600
 3816              	.LASF35:
 3817 056f 54696D65 		.ascii	"Timer_SetPWMMode\000"
 3817      725F5365 
 3817      7450574D 
 3817      4D6F6465 
 3817      00
 3818              	.LASF58:
 3819 0580 54696D65 		.ascii	"Timer_ReadCompareBuf\000"
 3819      725F5265 
 3819      6164436F 
 3819      6D706172 
 3819      65427566 
 3820              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
