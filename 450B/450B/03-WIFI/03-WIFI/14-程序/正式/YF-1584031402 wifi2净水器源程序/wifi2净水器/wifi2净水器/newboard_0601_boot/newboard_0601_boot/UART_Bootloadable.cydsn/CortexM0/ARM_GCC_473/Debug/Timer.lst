ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Timer_Init,"ax",%progbits
  18              		.align	1
  19              		.global	Timer_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	Timer_Init, %function
  23              	Timer_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Timer.c"
   1:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:.\Generated_Source\PSoC4/Timer.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/Timer.c **** *
   5:.\Generated_Source\PSoC4/Timer.c **** * Description:
   6:.\Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:.\Generated_Source\PSoC4/Timer.c **** *  component
   8:.\Generated_Source\PSoC4/Timer.c **** *
   9:.\Generated_Source\PSoC4/Timer.c **** * Note:
  10:.\Generated_Source\PSoC4/Timer.c **** *  None
  11:.\Generated_Source\PSoC4/Timer.c **** *
  12:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Timer.c **** 
  19:.\Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:.\Generated_Source\PSoC4/Timer.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/Timer.c **** 
  22:.\Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  23:.\Generated_Source\PSoC4/Timer.c **** 
  24:.\Generated_Source\PSoC4/Timer.c **** 
  25:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  27:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/Timer.c **** *
  29:.\Generated_Source\PSoC4/Timer.c **** * Summary:
  30:.\Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  31:.\Generated_Source\PSoC4/Timer.c **** *
  32:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 2


  33:.\Generated_Source\PSoC4/Timer.c **** *  None
  34:.\Generated_Source\PSoC4/Timer.c **** *
  35:.\Generated_Source\PSoC4/Timer.c **** * Return:
  36:.\Generated_Source\PSoC4/Timer.c **** *  None
  37:.\Generated_Source\PSoC4/Timer.c **** *
  38:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  40:.\Generated_Source\PSoC4/Timer.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/Timer.c **** 
  42:.\Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  44:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG =
  45:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_QUAD_ENCODING_MODES     << Timer_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_CONFIG                  << Timer_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  48:.\Generated_Source\PSoC4/Timer.c **** 
  49:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  50:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG =
  51:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_PWM_STOP_EVENT          << Timer_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_OUT_INVERT          << Timer_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_OUT_N_INVERT        << Timer_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_MODE                << Timer_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/Timer.c **** 
  56:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  57:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/Timer.c ****             ((uint32)(Timer_PWM_RUN_MODE         << Timer_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/Timer.c **** 
  60:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/Timer.c ****         #else
  62:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |=
  63:.\Generated_Source\PSoC4/Timer.c ****             (((uint32)(Timer_PWM_ALIGN           << Timer_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/Timer.c ****              ((uint32)(Timer_PWM_KILL_EVENT      << Timer_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
  66:.\Generated_Source\PSoC4/Timer.c **** 
  67:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
  68:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/Timer.c ****             ((uint32)(Timer_PWM_DEAD_TIME_CYCLE  << Timer_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
  71:.\Generated_Source\PSoC4/Timer.c **** 
  72:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
  73:.\Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/Timer.c ****             ((uint32)Timer_PWM_PRESCALER         << Timer_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
  76:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
  77:.\Generated_Source\PSoC4/Timer.c **** 
  78:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  79:.\Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG =
  28              		.loc 1 79 0
  29 0000 074B     		ldr	r3, .L2
  30 0002 0022     		mov	r2, #0
  31 0004 1A60     		str	r2, [r3]
  80:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_TC_PRESCALER            << Timer_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_COUNTER_MODE         << Timer_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_RUN_MODE             << Timer_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_COMP_CAP_MODE        << Timer_MODE_SHIFT)));
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 3


  84:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  85:.\Generated_Source\PSoC4/Timer.c **** 
  86:.\Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  88:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_QUAD_PHIA_SIGNAL_MODE   << Timer_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_QUAD_INDEX_SIGNAL_MODE  << Timer_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_QUAD_STOP_SIGNAL_MODE   << Timer_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_QUAD_PHIB_SIGNAL_MODE   << Timer_START_SHIFT)));
  93:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  94:.\Generated_Source\PSoC4/Timer.c **** 
  95:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  96:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_PWM_SWITCH_SIGNAL_MODE  << Timer_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_COUNT_SIGNAL_MODE   << Timer_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_RELOAD_SIGNAL_MODE  << Timer_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_STOP_SIGNAL_MODE    << Timer_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_PWM_START_SIGNAL_MODE   << Timer_START_SHIFT)));
 102:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 103:.\Generated_Source\PSoC4/Timer.c **** 
 104:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 105:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  =
  32              		.loc 1 105 0
  33 0006 0749     		ldr	r1, .L2+4
  34              	.LBB8:
  35              	.LBB9:
 106:.\Generated_Source\PSoC4/Timer.c ****         (((uint32)(Timer_TC_CAPTURE_SIGNAL_MODE  << Timer_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_COUNT_SIGNAL_MODE    << Timer_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_RELOAD_SIGNAL_MODE   << Timer_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_STOP_SIGNAL_MODE     << Timer_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/Timer.c ****          ((uint32)(Timer_TC_START_SIGNAL_MODE    << Timer_START_SHIFT)));
 111:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
 112:.\Generated_Source\PSoC4/Timer.c **** 
 113:.\Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
 115:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
 117:.\Generated_Source\PSoC4/Timer.c **** 
 118:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 119:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 121:.\Generated_Source\PSoC4/Timer.c **** 
 122:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 123:.\Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
 125:.\Generated_Source\PSoC4/Timer.c **** 
 126:.\Generated_Source\PSoC4/Timer.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 128:.\Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/Timer.c **** 
 130:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/Timer.c **** 
 134:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 4


 137:.\Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
 143:.\Generated_Source\PSoC4/Timer.c **** 
 144:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 145:.\Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/Timer.c **** 
 148:.\Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/Timer.c **** 
 153:.\Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/Timer.c **** 
 158:.\Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 160:.\Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/Timer.c ****         #else
 165:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/Timer.c **** 
 169:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/Timer.c **** 
 174:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/Timer.c **** 
 178:.\Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 182:.\Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 183:.\Generated_Source\PSoC4/Timer.c **** }
 184:.\Generated_Source\PSoC4/Timer.c **** 
 185:.\Generated_Source\PSoC4/Timer.c **** 
 186:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 188:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/Timer.c **** *
 190:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 191:.\Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 192:.\Generated_Source\PSoC4/Timer.c **** *
 193:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 5


 194:.\Generated_Source\PSoC4/Timer.c **** *  None
 195:.\Generated_Source\PSoC4/Timer.c **** *
 196:.\Generated_Source\PSoC4/Timer.c **** * Return:
 197:.\Generated_Source\PSoC4/Timer.c **** *  None
 198:.\Generated_Source\PSoC4/Timer.c **** *
 199:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 201:.\Generated_Source\PSoC4/Timer.c **** {
 202:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/Timer.c **** 
 204:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 205:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 206:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 207:.\Generated_Source\PSoC4/Timer.c **** 
 208:.\Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 210:.\Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 212:.\Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
 214:.\Generated_Source\PSoC4/Timer.c **** 
 215:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 216:.\Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 218:.\Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 220:.\Generated_Source\PSoC4/Timer.c **** }
 221:.\Generated_Source\PSoC4/Timer.c **** 
 222:.\Generated_Source\PSoC4/Timer.c **** 
 223:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
 225:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/Timer.c **** *
 227:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 228:.\Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 229:.\Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 230:.\Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/Timer.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/Timer.c **** *
 233:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 234:.\Generated_Source\PSoC4/Timer.c **** *  None
 235:.\Generated_Source\PSoC4/Timer.c **** *
 236:.\Generated_Source\PSoC4/Timer.c **** * Return:
 237:.\Generated_Source\PSoC4/Timer.c **** *  None
 238:.\Generated_Source\PSoC4/Timer.c **** *
 239:.\Generated_Source\PSoC4/Timer.c **** * Global variables:
 240:.\Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 243:.\Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 245:.\Generated_Source\PSoC4/Timer.c **** *
 246:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 248:.\Generated_Source\PSoC4/Timer.c **** {
 249:.\Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 250:.\Generated_Source\PSoC4/Timer.c ****     {
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 6


 251:.\Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 252:.\Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 253:.\Generated_Source\PSoC4/Timer.c ****     }
 254:.\Generated_Source\PSoC4/Timer.c **** 
 255:.\Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 256:.\Generated_Source\PSoC4/Timer.c **** }
 257:.\Generated_Source\PSoC4/Timer.c **** 
 258:.\Generated_Source\PSoC4/Timer.c **** 
 259:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 261:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/Timer.c **** *
 263:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 264:.\Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 265:.\Generated_Source\PSoC4/Timer.c **** *
 266:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 267:.\Generated_Source\PSoC4/Timer.c **** *  None
 268:.\Generated_Source\PSoC4/Timer.c **** *
 269:.\Generated_Source\PSoC4/Timer.c **** * Return:
 270:.\Generated_Source\PSoC4/Timer.c **** *  None
 271:.\Generated_Source\PSoC4/Timer.c **** *
 272:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 274:.\Generated_Source\PSoC4/Timer.c **** {
 275:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/Timer.c **** 
 277:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 278:.\Generated_Source\PSoC4/Timer.c **** 
 279:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 280:.\Generated_Source\PSoC4/Timer.c **** 
 281:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 282:.\Generated_Source\PSoC4/Timer.c **** }
 283:.\Generated_Source\PSoC4/Timer.c **** 
 284:.\Generated_Source\PSoC4/Timer.c **** 
 285:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 287:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/Timer.c **** *
 289:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 290:.\Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 291:.\Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 292:.\Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/Timer.c **** *
 294:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 295:.\Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 296:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 297:.\Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/Timer.c **** *
 306:.\Generated_Source\PSoC4/Timer.c **** * Return:
 307:.\Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 7


 308:.\Generated_Source\PSoC4/Timer.c **** *
 309:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/Timer.c **** {
 312:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/Timer.c **** 
 314:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 315:.\Generated_Source\PSoC4/Timer.c **** 
 316:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 317:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 318:.\Generated_Source\PSoC4/Timer.c **** 
 319:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 320:.\Generated_Source\PSoC4/Timer.c **** }
 321:.\Generated_Source\PSoC4/Timer.c **** 
 322:.\Generated_Source\PSoC4/Timer.c **** 
 323:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
 325:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/Timer.c **** *
 327:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 328:.\Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/Timer.c **** *
 331:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 332:.\Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 334:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/Timer.c **** *
 339:.\Generated_Source\PSoC4/Timer.c **** * Return:
 340:.\Generated_Source\PSoC4/Timer.c **** *  None
 341:.\Generated_Source\PSoC4/Timer.c **** *
 342:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/Timer.c **** {
 345:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/Timer.c **** 
 347:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 348:.\Generated_Source\PSoC4/Timer.c **** 
 349:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 350:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 351:.\Generated_Source\PSoC4/Timer.c **** 
 352:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 353:.\Generated_Source\PSoC4/Timer.c **** }
 354:.\Generated_Source\PSoC4/Timer.c **** 
 355:.\Generated_Source\PSoC4/Timer.c **** 
 356:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 358:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/Timer.c **** *
 360:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 361:.\Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/Timer.c **** *
 364:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 8


 365:.\Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 367:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/Timer.c **** *
 376:.\Generated_Source\PSoC4/Timer.c **** * Return:
 377:.\Generated_Source\PSoC4/Timer.c **** *  None
 378:.\Generated_Source\PSoC4/Timer.c **** *
 379:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/Timer.c **** {
 382:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/Timer.c **** 
 384:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 385:.\Generated_Source\PSoC4/Timer.c **** 
 386:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 387:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 388:.\Generated_Source\PSoC4/Timer.c **** 
 389:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 390:.\Generated_Source\PSoC4/Timer.c **** }
 391:.\Generated_Source\PSoC4/Timer.c **** 
 392:.\Generated_Source\PSoC4/Timer.c **** 
 393:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 395:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/Timer.c **** *
 397:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 398:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 399:.\Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 401:.\Generated_Source\PSoC4/Timer.c **** *
 402:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 403:.\Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 405:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/Timer.c **** *
 408:.\Generated_Source\PSoC4/Timer.c **** * Return:
 409:.\Generated_Source\PSoC4/Timer.c **** *  None
 410:.\Generated_Source\PSoC4/Timer.c **** *
 411:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/Timer.c **** {
 414:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/Timer.c **** 
 416:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 417:.\Generated_Source\PSoC4/Timer.c **** 
 418:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 419:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 420:.\Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 9


 422:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 423:.\Generated_Source\PSoC4/Timer.c **** }
 424:.\Generated_Source\PSoC4/Timer.c **** 
 425:.\Generated_Source\PSoC4/Timer.c **** 
 426:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 428:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/Timer.c **** *
 430:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 431:.\Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/Timer.c **** *  the mode.
 436:.\Generated_Source\PSoC4/Timer.c **** *
 437:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 438:.\Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 441:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/Timer.c **** *
 462:.\Generated_Source\PSoC4/Timer.c **** * Return:
 463:.\Generated_Source\PSoC4/Timer.c **** *  None
 464:.\Generated_Source\PSoC4/Timer.c **** *
 465:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/Timer.c **** {
 468:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 469:.\Generated_Source\PSoC4/Timer.c **** }
 470:.\Generated_Source\PSoC4/Timer.c **** 
 471:.\Generated_Source\PSoC4/Timer.c **** 
 472:.\Generated_Source\PSoC4/Timer.c **** 
 473:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/Timer.c **** *
 477:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 478:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 10


 479:.\Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/Timer.c **** *
 483:.\Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/Timer.c **** *
 486:.\Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/Timer.c **** 
 491:.\Generated_Source\PSoC4/Timer.c **** *
 492:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 493:.\Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 495:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/Timer.c **** *
 498:.\Generated_Source\PSoC4/Timer.c **** * Return:
 499:.\Generated_Source\PSoC4/Timer.c **** *  None
 500:.\Generated_Source\PSoC4/Timer.c **** *
 501:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/Timer.c **** {
 504:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/Timer.c **** 
 506:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 507:.\Generated_Source\PSoC4/Timer.c **** 
 508:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 509:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 510:.\Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/Timer.c **** 
 512:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 513:.\Generated_Source\PSoC4/Timer.c **** }
 514:.\Generated_Source\PSoC4/Timer.c **** 
 515:.\Generated_Source\PSoC4/Timer.c **** 
 516:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/Timer.c **** *
 520:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 521:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/Timer.c **** *
 525:.\Generated_Source\PSoC4/Timer.c **** *
 526:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 527:.\Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 529:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/Timer.c **** *
 532:.\Generated_Source\PSoC4/Timer.c **** * Return:
 533:.\Generated_Source\PSoC4/Timer.c **** *  None
 534:.\Generated_Source\PSoC4/Timer.c **** *
 535:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 11


 536:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/Timer.c **** {
 538:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/Timer.c **** 
 540:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 541:.\Generated_Source\PSoC4/Timer.c **** 
 542:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 543:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 544:.\Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/Timer.c **** 
 546:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 547:.\Generated_Source\PSoC4/Timer.c **** }
 548:.\Generated_Source\PSoC4/Timer.c **** 
 549:.\Generated_Source\PSoC4/Timer.c **** 
 550:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/Timer.c **** *
 554:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 555:.\Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/Timer.c **** 
 560:.\Generated_Source\PSoC4/Timer.c **** *
 561:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 562:.\Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/Timer.c **** *
 565:.\Generated_Source\PSoC4/Timer.c **** * Return:
 566:.\Generated_Source\PSoC4/Timer.c **** *  None
 567:.\Generated_Source\PSoC4/Timer.c **** *
 568:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/Timer.c **** {
 571:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/Timer.c **** 
 573:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 574:.\Generated_Source\PSoC4/Timer.c **** 
 575:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 576:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 577:.\Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/Timer.c **** 
 579:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 580:.\Generated_Source\PSoC4/Timer.c **** }
 581:.\Generated_Source\PSoC4/Timer.c **** 
 582:.\Generated_Source\PSoC4/Timer.c **** 
 583:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 585:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/Timer.c **** *
 587:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 588:.\Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/Timer.c **** *
 592:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 12


 593:.\Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 595:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/Timer.c **** *
 598:.\Generated_Source\PSoC4/Timer.c **** * Return:
 599:.\Generated_Source\PSoC4/Timer.c **** *  None
 600:.\Generated_Source\PSoC4/Timer.c **** *
 601:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/Timer.c **** {
 604:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/Timer.c **** 
 606:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 607:.\Generated_Source\PSoC4/Timer.c **** 
 608:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 609:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 610:.\Generated_Source\PSoC4/Timer.c **** 
 611:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 612:.\Generated_Source\PSoC4/Timer.c **** }
 613:.\Generated_Source\PSoC4/Timer.c **** 
 614:.\Generated_Source\PSoC4/Timer.c **** 
 615:.\Generated_Source\PSoC4/Timer.c **** 
 616:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 618:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/Timer.c **** *
 620:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 621:.\Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/Timer.c **** *
 625:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 626:.\Generated_Source\PSoC4/Timer.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/Timer.c **** *
 628:.\Generated_Source\PSoC4/Timer.c **** * Return:
 629:.\Generated_Source\PSoC4/Timer.c **** *  None
 630:.\Generated_Source\PSoC4/Timer.c **** *
 631:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/Timer.c **** {
 634:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 635:.\Generated_Source\PSoC4/Timer.c **** }
 636:.\Generated_Source\PSoC4/Timer.c **** 
 637:.\Generated_Source\PSoC4/Timer.c **** 
 638:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 640:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/Timer.c **** *
 642:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 643:.\Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/Timer.c **** *
 645:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 646:.\Generated_Source\PSoC4/Timer.c **** *  None
 647:.\Generated_Source\PSoC4/Timer.c **** *
 648:.\Generated_Source\PSoC4/Timer.c **** * Return:
 649:.\Generated_Source\PSoC4/Timer.c **** *  Current counter value
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 13


 650:.\Generated_Source\PSoC4/Timer.c **** *
 651:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
 653:.\Generated_Source\PSoC4/Timer.c **** {
 654:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 655:.\Generated_Source\PSoC4/Timer.c **** }
 656:.\Generated_Source\PSoC4/Timer.c **** 
 657:.\Generated_Source\PSoC4/Timer.c **** 
 658:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 660:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/Timer.c **** *
 662:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 663:.\Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/Timer.c **** *
 666:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 667:.\Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 669:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/Timer.c **** *                                         and period
 676:.\Generated_Source\PSoC4/Timer.c **** *
 677:.\Generated_Source\PSoC4/Timer.c **** * Return:
 678:.\Generated_Source\PSoC4/Timer.c **** *  None
 679:.\Generated_Source\PSoC4/Timer.c **** *
 680:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/Timer.c **** {
 683:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/Timer.c **** 
 685:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 686:.\Generated_Source\PSoC4/Timer.c **** 
 687:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 688:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 689:.\Generated_Source\PSoC4/Timer.c **** 
 690:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 691:.\Generated_Source\PSoC4/Timer.c **** }
 692:.\Generated_Source\PSoC4/Timer.c **** 
 693:.\Generated_Source\PSoC4/Timer.c **** 
 694:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 696:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/Timer.c **** *
 698:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 699:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/Timer.c **** *
 703:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 704:.\Generated_Source\PSoC4/Timer.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/Timer.c **** *
 706:.\Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 14


 707:.\Generated_Source\PSoC4/Timer.c **** *  None
 708:.\Generated_Source\PSoC4/Timer.c **** *
 709:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/Timer.c **** {
 712:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 713:.\Generated_Source\PSoC4/Timer.c **** }
 714:.\Generated_Source\PSoC4/Timer.c **** 
 715:.\Generated_Source\PSoC4/Timer.c **** 
 716:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 718:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/Timer.c **** *
 720:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 721:.\Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/Timer.c **** *
 723:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 724:.\Generated_Source\PSoC4/Timer.c **** *  None
 725:.\Generated_Source\PSoC4/Timer.c **** *
 726:.\Generated_Source\PSoC4/Timer.c **** * Return:
 727:.\Generated_Source\PSoC4/Timer.c **** *  Period value
 728:.\Generated_Source\PSoC4/Timer.c **** *
 729:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/Timer.c **** {
 732:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 733:.\Generated_Source\PSoC4/Timer.c **** }
 734:.\Generated_Source\PSoC4/Timer.c **** 
 735:.\Generated_Source\PSoC4/Timer.c **** 
 736:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 738:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/Timer.c **** *
 740:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 741:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/Timer.c **** *
 746:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 747:.\Generated_Source\PSoC4/Timer.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 749:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/Timer.c **** *
 752:.\Generated_Source\PSoC4/Timer.c **** * Return:
 753:.\Generated_Source\PSoC4/Timer.c **** *  None
 754:.\Generated_Source\PSoC4/Timer.c **** *
 755:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/Timer.c **** {
 758:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/Timer.c **** 
 760:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 761:.\Generated_Source\PSoC4/Timer.c **** 
 762:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 763:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 15


 764:.\Generated_Source\PSoC4/Timer.c **** 
 765:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/Timer.c **** }
 767:.\Generated_Source\PSoC4/Timer.c **** 
 768:.\Generated_Source\PSoC4/Timer.c **** 
 769:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 771:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/Timer.c **** *
 773:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 774:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/Timer.c **** *
 776:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 777:.\Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/Timer.c **** *
 779:.\Generated_Source\PSoC4/Timer.c **** * Return:
 780:.\Generated_Source\PSoC4/Timer.c **** *  None
 781:.\Generated_Source\PSoC4/Timer.c **** *
 782:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/Timer.c **** {
 785:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 786:.\Generated_Source\PSoC4/Timer.c **** }
 787:.\Generated_Source\PSoC4/Timer.c **** 
 788:.\Generated_Source\PSoC4/Timer.c **** 
 789:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/Timer.c **** *
 793:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 794:.\Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/Timer.c **** *
 796:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 797:.\Generated_Source\PSoC4/Timer.c **** *  None
 798:.\Generated_Source\PSoC4/Timer.c **** *
 799:.\Generated_Source\PSoC4/Timer.c **** * Return:
 800:.\Generated_Source\PSoC4/Timer.c **** *  Period value
 801:.\Generated_Source\PSoC4/Timer.c **** *
 802:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/Timer.c **** {
 805:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 806:.\Generated_Source\PSoC4/Timer.c **** }
 807:.\Generated_Source\PSoC4/Timer.c **** 
 808:.\Generated_Source\PSoC4/Timer.c **** 
 809:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 811:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/Timer.c **** *
 813:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 814:.\Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/Timer.c **** *  switch event.
 818:.\Generated_Source\PSoC4/Timer.c **** *
 819:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 820:.\Generated_Source\PSoC4/Timer.c **** *  swapEnable
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 16


 821:.\Generated_Source\PSoC4/Timer.c **** *   Values:
 822:.\Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/Timer.c **** *
 825:.\Generated_Source\PSoC4/Timer.c **** * Return:
 826:.\Generated_Source\PSoC4/Timer.c **** *  None
 827:.\Generated_Source\PSoC4/Timer.c **** *
 828:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/Timer.c **** {
 831:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/Timer.c **** 
 833:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/Timer.c **** 
 835:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 836:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 837:.\Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/Timer.c **** 
 839:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 840:.\Generated_Source\PSoC4/Timer.c **** }
 841:.\Generated_Source\PSoC4/Timer.c **** 
 842:.\Generated_Source\PSoC4/Timer.c **** 
 843:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 845:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/Timer.c **** *
 847:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 848:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/Timer.c **** *
 851:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 852:.\Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/Timer.c **** *
 854:.\Generated_Source\PSoC4/Timer.c **** * Return:
 855:.\Generated_Source\PSoC4/Timer.c **** *  None
 856:.\Generated_Source\PSoC4/Timer.c **** *
 857:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/Timer.c **** {
 860:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/Timer.c **** 
 864:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/Timer.c **** 
 867:.\Generated_Source\PSoC4/Timer.c ****         if (Timer__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/Timer.c ****         {
 869:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_REG = ((compare + 1u) & Timer_16BIT_MASK);
 870:.\Generated_Source\PSoC4/Timer.c ****         }
 871:.\Generated_Source\PSoC4/Timer.c ****         else if (Timer__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/Timer.c ****         {
 873:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_REG = ((compare - 1u) & Timer_16BIT_MASK);
 874:.\Generated_Source\PSoC4/Timer.c ****         }
 875:.\Generated_Source\PSoC4/Timer.c ****         else
 876:.\Generated_Source\PSoC4/Timer.c ****         {
 877:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 17


 878:.\Generated_Source\PSoC4/Timer.c ****         }
 879:.\Generated_Source\PSoC4/Timer.c ****     #else
 880:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 881:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/Timer.c **** }
 883:.\Generated_Source\PSoC4/Timer.c **** 
 884:.\Generated_Source\PSoC4/Timer.c **** 
 885:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
 887:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/Timer.c **** *
 889:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 890:.\Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/Timer.c **** *
 893:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 894:.\Generated_Source\PSoC4/Timer.c **** *  None
 895:.\Generated_Source\PSoC4/Timer.c **** *
 896:.\Generated_Source\PSoC4/Timer.c **** * Return:
 897:.\Generated_Source\PSoC4/Timer.c **** *  Compare value
 898:.\Generated_Source\PSoC4/Timer.c **** *
 899:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 901:.\Generated_Source\PSoC4/Timer.c **** {
 902:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/Timer.c **** 
 907:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/Timer.c **** 
 910:.\Generated_Source\PSoC4/Timer.c ****         if (Timer__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/Timer.c ****         {
 912:.\Generated_Source\PSoC4/Timer.c ****             regVal = ((Timer_COMP_CAP_REG - 1u) & Timer_16BIT_MASK);
 913:.\Generated_Source\PSoC4/Timer.c ****         }
 914:.\Generated_Source\PSoC4/Timer.c ****         else if (Timer__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/Timer.c ****         {
 916:.\Generated_Source\PSoC4/Timer.c ****             regVal = ((Timer_COMP_CAP_REG + 1u) & Timer_16BIT_MASK);
 917:.\Generated_Source\PSoC4/Timer.c ****         }
 918:.\Generated_Source\PSoC4/Timer.c ****         else
 919:.\Generated_Source\PSoC4/Timer.c ****         {
 920:.\Generated_Source\PSoC4/Timer.c ****             regVal = (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 921:.\Generated_Source\PSoC4/Timer.c ****         }
 922:.\Generated_Source\PSoC4/Timer.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/Timer.c ****     #else
 924:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 925:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/Timer.c **** }
 927:.\Generated_Source\PSoC4/Timer.c **** 
 928:.\Generated_Source\PSoC4/Timer.c **** 
 929:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 931:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/Timer.c **** *
 933:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 934:.\Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 18


 935:.\Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/Timer.c **** *
 937:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 938:.\Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/Timer.c **** *
 940:.\Generated_Source\PSoC4/Timer.c **** * Return:
 941:.\Generated_Source\PSoC4/Timer.c **** *  None
 942:.\Generated_Source\PSoC4/Timer.c **** *
 943:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/Timer.c **** {
 946:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/Timer.c **** 
 950:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/Timer.c **** 
 953:.\Generated_Source\PSoC4/Timer.c ****         if (Timer__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/Timer.c ****         {
 955:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_BUF_REG = ((compareBuf + 1u) & Timer_16BIT_MASK);
 956:.\Generated_Source\PSoC4/Timer.c ****         }
 957:.\Generated_Source\PSoC4/Timer.c ****         else if (Timer__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/Timer.c ****         {
 959:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_BUF_REG = ((compareBuf - 1u) & Timer_16BIT_MASK);
 960:.\Generated_Source\PSoC4/Timer.c ****         }
 961:.\Generated_Source\PSoC4/Timer.c ****         else
 962:.\Generated_Source\PSoC4/Timer.c ****         {
 963:.\Generated_Source\PSoC4/Timer.c ****             Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 964:.\Generated_Source\PSoC4/Timer.c ****         }
 965:.\Generated_Source\PSoC4/Timer.c ****     #else
 966:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 967:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/Timer.c **** }
 969:.\Generated_Source\PSoC4/Timer.c **** 
 970:.\Generated_Source\PSoC4/Timer.c **** 
 971:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 973:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/Timer.c **** *
 975:.\Generated_Source\PSoC4/Timer.c **** * Summary:
 976:.\Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/Timer.c **** *
 979:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
 980:.\Generated_Source\PSoC4/Timer.c **** *  None
 981:.\Generated_Source\PSoC4/Timer.c **** *
 982:.\Generated_Source\PSoC4/Timer.c **** * Return:
 983:.\Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/Timer.c **** *
 985:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/Timer.c **** {
 988:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 19


 992:.\Generated_Source\PSoC4/Timer.c **** 
 993:.\Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/Timer.c **** 
 996:.\Generated_Source\PSoC4/Timer.c ****         if (Timer__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/Timer.c ****         {
 998:.\Generated_Source\PSoC4/Timer.c ****             regVal = ((Timer_COMP_CAP_BUF_REG - 1u) & Timer_16BIT_MASK);
 999:.\Generated_Source\PSoC4/Timer.c ****         }
1000:.\Generated_Source\PSoC4/Timer.c ****         else if (Timer__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/Timer.c ****         {
1002:.\Generated_Source\PSoC4/Timer.c ****             regVal = ((Timer_COMP_CAP_BUF_REG + 1u) & Timer_16BIT_MASK);
1003:.\Generated_Source\PSoC4/Timer.c ****         }
1004:.\Generated_Source\PSoC4/Timer.c ****         else
1005:.\Generated_Source\PSoC4/Timer.c ****         {
1006:.\Generated_Source\PSoC4/Timer.c ****             regVal = (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1007:.\Generated_Source\PSoC4/Timer.c ****         }
1008:.\Generated_Source\PSoC4/Timer.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/Timer.c ****     #else
1010:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1011:.\Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/Timer.c **** }
1013:.\Generated_Source\PSoC4/Timer.c **** 
1014:.\Generated_Source\PSoC4/Timer.c **** 
1015:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
1017:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/Timer.c **** *
1019:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1020:.\Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/Timer.c **** *
1023:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1024:.\Generated_Source\PSoC4/Timer.c **** *  None
1025:.\Generated_Source\PSoC4/Timer.c **** *
1026:.\Generated_Source\PSoC4/Timer.c **** * Return:
1027:.\Generated_Source\PSoC4/Timer.c **** *  Capture value
1028:.\Generated_Source\PSoC4/Timer.c **** *
1029:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
1031:.\Generated_Source\PSoC4/Timer.c **** {
1032:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
1033:.\Generated_Source\PSoC4/Timer.c **** }
1034:.\Generated_Source\PSoC4/Timer.c **** 
1035:.\Generated_Source\PSoC4/Timer.c **** 
1036:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/Timer.c **** *
1040:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1041:.\Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/Timer.c **** *
1044:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1045:.\Generated_Source\PSoC4/Timer.c **** *  None
1046:.\Generated_Source\PSoC4/Timer.c **** *
1047:.\Generated_Source\PSoC4/Timer.c **** * Return:
1048:.\Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 20


1049:.\Generated_Source\PSoC4/Timer.c **** *
1050:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/Timer.c **** {
1053:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1054:.\Generated_Source\PSoC4/Timer.c **** }
1055:.\Generated_Source\PSoC4/Timer.c **** 
1056:.\Generated_Source\PSoC4/Timer.c **** 
1057:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1059:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/Timer.c **** *
1061:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1062:.\Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/Timer.c **** *
1066:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1067:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1069:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/Timer.c **** *
1074:.\Generated_Source\PSoC4/Timer.c **** * Return:
1075:.\Generated_Source\PSoC4/Timer.c **** *  None
1076:.\Generated_Source\PSoC4/Timer.c **** *
1077:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/Timer.c **** {
1080:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/Timer.c **** 
1082:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1083:.\Generated_Source\PSoC4/Timer.c **** 
1084:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
1085:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
1086:.\Generated_Source\PSoC4/Timer.c **** 
1087:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1088:.\Generated_Source\PSoC4/Timer.c **** }
1089:.\Generated_Source\PSoC4/Timer.c **** 
1090:.\Generated_Source\PSoC4/Timer.c **** 
1091:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1093:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/Timer.c **** *
1095:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1096:.\Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/Timer.c **** *  input.
1098:.\Generated_Source\PSoC4/Timer.c **** *
1099:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1100:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1102:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 21


1106:.\Generated_Source\PSoC4/Timer.c **** *
1107:.\Generated_Source\PSoC4/Timer.c **** * Return:
1108:.\Generated_Source\PSoC4/Timer.c **** *  None
1109:.\Generated_Source\PSoC4/Timer.c **** *
1110:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/Timer.c **** {
1113:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/Timer.c **** 
1115:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1116:.\Generated_Source\PSoC4/Timer.c **** 
1117:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
1118:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
1119:.\Generated_Source\PSoC4/Timer.c **** 
1120:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1121:.\Generated_Source\PSoC4/Timer.c **** }
1122:.\Generated_Source\PSoC4/Timer.c **** 
1123:.\Generated_Source\PSoC4/Timer.c **** 
1124:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1126:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/Timer.c **** *
1128:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1129:.\Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/Timer.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/Timer.c **** *
1132:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1133:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1135:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/Timer.c **** *
1140:.\Generated_Source\PSoC4/Timer.c **** * Return:
1141:.\Generated_Source\PSoC4/Timer.c **** *  None
1142:.\Generated_Source\PSoC4/Timer.c **** *
1143:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/Timer.c **** {
1146:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/Timer.c **** 
1148:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1149:.\Generated_Source\PSoC4/Timer.c **** 
1150:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
1151:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
1152:.\Generated_Source\PSoC4/Timer.c **** 
1153:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1154:.\Generated_Source\PSoC4/Timer.c **** }
1155:.\Generated_Source\PSoC4/Timer.c **** 
1156:.\Generated_Source\PSoC4/Timer.c **** 
1157:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1159:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/Timer.c **** *
1161:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1162:.\Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 22


1163:.\Generated_Source\PSoC4/Timer.c **** *
1164:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1165:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1167:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/Timer.c **** *
1172:.\Generated_Source\PSoC4/Timer.c **** * Return:
1173:.\Generated_Source\PSoC4/Timer.c **** *  None
1174:.\Generated_Source\PSoC4/Timer.c **** *
1175:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/Timer.c **** {
1178:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/Timer.c **** 
1180:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1181:.\Generated_Source\PSoC4/Timer.c **** 
1182:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
1183:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
1184:.\Generated_Source\PSoC4/Timer.c **** 
1185:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1186:.\Generated_Source\PSoC4/Timer.c **** }
1187:.\Generated_Source\PSoC4/Timer.c **** 
1188:.\Generated_Source\PSoC4/Timer.c **** 
1189:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1191:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/Timer.c **** *
1193:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1194:.\Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/Timer.c **** *  input.
1196:.\Generated_Source\PSoC4/Timer.c **** *
1197:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1198:.\Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1200:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/Timer.c **** *
1205:.\Generated_Source\PSoC4/Timer.c **** * Return:
1206:.\Generated_Source\PSoC4/Timer.c **** *  None
1207:.\Generated_Source\PSoC4/Timer.c **** *
1208:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/Timer.c **** {
1211:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/Timer.c **** 
1213:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1214:.\Generated_Source\PSoC4/Timer.c **** 
1215:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
1216:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
1217:.\Generated_Source\PSoC4/Timer.c **** 
1218:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1219:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 23


1220:.\Generated_Source\PSoC4/Timer.c **** 
1221:.\Generated_Source\PSoC4/Timer.c **** 
1222:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1224:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/Timer.c **** *
1226:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1227:.\Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/Timer.c **** *
1231:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1232:.\Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/Timer.c **** *        define.
1237:.\Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1240:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/Timer.c **** *
1245:.\Generated_Source\PSoC4/Timer.c **** * Return:
1246:.\Generated_Source\PSoC4/Timer.c **** *  None
1247:.\Generated_Source\PSoC4/Timer.c **** *
1248:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/Timer.c **** {
1251:.\Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/Timer.c **** 
1253:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1254:.\Generated_Source\PSoC4/Timer.c **** 
1255:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
1256:.\Generated_Source\PSoC4/Timer.c **** 
1257:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1258:.\Generated_Source\PSoC4/Timer.c **** }
1259:.\Generated_Source\PSoC4/Timer.c **** 
1260:.\Generated_Source\PSoC4/Timer.c **** 
1261:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1263:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/Timer.c **** *
1265:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1266:.\Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1267:.\Generated_Source\PSoC4/Timer.c **** *
1268:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1269:.\Generated_Source\PSoC4/Timer.c **** *  None
1270:.\Generated_Source\PSoC4/Timer.c **** *
1271:.\Generated_Source\PSoC4/Timer.c **** * Return:
1272:.\Generated_Source\PSoC4/Timer.c **** *  Status
1273:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1274:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 24


1277:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1279:.\Generated_Source\PSoC4/Timer.c **** {
1280:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
1281:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
1282:.\Generated_Source\PSoC4/Timer.c **** }
1283:.\Generated_Source\PSoC4/Timer.c **** 
1284:.\Generated_Source\PSoC4/Timer.c **** 
1285:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1287:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/Timer.c **** *
1289:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1290:.\Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/Timer.c **** *
1293:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1294:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1296:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/Timer.c **** *
1299:.\Generated_Source\PSoC4/Timer.c **** * Return:
1300:.\Generated_Source\PSoC4/Timer.c **** *  None
1301:.\Generated_Source\PSoC4/Timer.c **** *
1302:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/Timer.c **** {
1305:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
  36              		.loc 1 1305 0
  37 0008 074B     		ldr	r3, .L2+8
  38              	.LBE9:
  39              	.LBE8:
 105:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  =
  40              		.loc 1 105 0
  41 000a 0C20     		mov	r0, #12
  42              	.LBB12:
  43              	.LBB10:
  44              		.loc 1 1305 0
  45 000c 0122     		mov	r2, #1
  46              	.LBE10:
  47              	.LBE12:
 105:.\Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  =
  48              		.loc 1 105 0
  49 000e 0860     		str	r0, [r1]
  50              	.LVL0:
  51              	.LBB13:
  52              	.LBB11:
  53              		.loc 1 1305 0
  54 0010 1A60     		str	r2, [r3]
  55              	.LVL1:
  56              	.LBE11:
  57              	.LBE13:
  58              	.LBB14:
  59              	.LBB15:
 712:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
  60              		.loc 1 712 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 25


  61 0012 0649     		ldr	r1, .L2+12
  62              	.LBE15:
  63              	.LBE14:
  64              	.LBB18:
  65              	.LBB19:
 880:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
  66              		.loc 1 880 0
  67 0014 064B     		ldr	r3, .L2+16
  68              	.LBE19:
  69              	.LBE18:
  70              	.LBB22:
  71              	.LBB16:
 712:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
  72              		.loc 1 712 0
  73 0016 6420     		mov	r0, #100
  74              	.LBE16:
  75              	.LBE22:
  76              	.LBB23:
  77              	.LBB20:
 880:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
  78              		.loc 1 880 0
  79 0018 3222     		mov	r2, #50
  80              	.LBE20:
  81              	.LBE23:
  82              	.LBB24:
  83              	.LBB17:
 712:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
  84              		.loc 1 712 0
  85 001a 0860     		str	r0, [r1]
  86              	.LVL2:
  87              	.LBE17:
  88              	.LBE24:
 183:.\Generated_Source\PSoC4/Timer.c **** }
  89              		.loc 1 183 0
  90              		@ sp needed for prologue
  91              	.LBB25:
  92              	.LBB21:
 880:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
  93              		.loc 1 880 0
  94 001c 1A60     		str	r2, [r3]
  95              	.LBE21:
  96              	.LBE25:
 183:.\Generated_Source\PSoC4/Timer.c **** }
  97              		.loc 1 183 0
  98 001e 7047     		bx	lr
  99              	.L3:
 100              		.align	2
 101              	.L2:
 102 0020 00010540 		.word	1074069760
 103 0024 24010540 		.word	1074069796
 104 0028 38010540 		.word	1074069816
 105 002c 14010540 		.word	1074069780
 106 0030 0C010540 		.word	1074069772
 107              		.cfi_endproc
 108              	.LFE0:
 109              		.size	Timer_Init, .-Timer_Init
 110              		.section	.text.Timer_Stop,"ax",%progbits
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 26


 111              		.align	1
 112              		.global	Timer_Stop
 113              		.code	16
 114              		.thumb_func
 115              		.type	Timer_Stop, %function
 116              	Timer_Stop:
 117              	.LFB3:
 274:.\Generated_Source\PSoC4/Timer.c **** {
 118              		.loc 1 274 0
 119              		.cfi_startproc
 120 0000 08B5     		push	{r3, lr}
 121              	.LCFI0:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 3, -8
 124              		.cfi_offset 14, -4
 277:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 125              		.loc 1 277 0
 126 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 127              	.LVL3:
 279:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 128              		.loc 1 279 0
 129 0006 044B     		ldr	r3, .L5
 130 0008 0121     		mov	r1, #1
 131 000a 1A68     		ldr	r2, [r3]
 282:.\Generated_Source\PSoC4/Timer.c **** }
 132              		.loc 1 282 0
 133              		@ sp needed for prologue
 279:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 134              		.loc 1 279 0
 135 000c 8A43     		bic	r2, r1
 136 000e 1A60     		str	r2, [r3]
 281:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 137              		.loc 1 281 0
 138 0010 FFF7FEFF 		bl	CyExitCriticalSection
 139              	.LVL4:
 282:.\Generated_Source\PSoC4/Timer.c **** }
 140              		.loc 1 282 0
 141 0014 08BD     		pop	{r3, pc}
 142              	.L6:
 143 0016 C046     		.align	2
 144              	.L5:
 145 0018 00000540 		.word	1074069504
 146              		.cfi_endproc
 147              	.LFE3:
 148              		.size	Timer_Stop, .-Timer_Stop
 149              		.section	.text.Timer_SetMode,"ax",%progbits
 150              		.align	1
 151              		.global	Timer_SetMode
 152              		.code	16
 153              		.thumb_func
 154              		.type	Timer_SetMode, %function
 155              	Timer_SetMode:
 156              	.LFB4:
 311:.\Generated_Source\PSoC4/Timer.c **** {
 157              		.loc 1 311 0
 158              		.cfi_startproc
 159              	.LVL5:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 27


 160 0000 10B5     		push	{r4, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
 311:.\Generated_Source\PSoC4/Timer.c **** {
 165              		.loc 1 311 0
 166 0002 041C     		mov	r4, r0
 314:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 167              		.loc 1 314 0
 168 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 169              	.LVL6:
 316:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 170              		.loc 1 316 0
 171 0008 054B     		ldr	r3, .L8
 172 000a 064A     		ldr	r2, .L8+4
 173 000c 1968     		ldr	r1, [r3]
 320:.\Generated_Source\PSoC4/Timer.c **** }
 174              		.loc 1 320 0
 175              		@ sp needed for prologue
 316:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 176              		.loc 1 316 0
 177 000e 0A40     		and	r2, r1
 178 0010 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 179              		.loc 1 317 0
 180 0012 1968     		ldr	r1, [r3]
 181 0014 0C43     		orr	r4, r1
 182              	.LVL7:
 183 0016 1C60     		str	r4, [r3]
 319:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 184              		.loc 1 319 0
 185 0018 FFF7FEFF 		bl	CyExitCriticalSection
 186              	.LVL8:
 320:.\Generated_Source\PSoC4/Timer.c **** }
 187              		.loc 1 320 0
 188 001c 10BD     		pop	{r4, pc}
 189              	.L9:
 190 001e C046     		.align	2
 191              	.L8:
 192 0020 00010540 		.word	1074069760
 193 0024 FFFFFFF8 		.word	-117440513
 194              		.cfi_endproc
 195              	.LFE4:
 196              		.size	Timer_SetMode, .-Timer_SetMode
 197              		.section	.text.Timer_SetQDMode,"ax",%progbits
 198              		.align	1
 199              		.global	Timer_SetQDMode
 200              		.code	16
 201              		.thumb_func
 202              		.type	Timer_SetQDMode, %function
 203              	Timer_SetQDMode:
 204              	.LFB5:
 344:.\Generated_Source\PSoC4/Timer.c **** {
 205              		.loc 1 344 0
 206              		.cfi_startproc
 207              	.LVL9:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 28


 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC4/Timer.c **** {
 213              		.loc 1 344 0
 214 0002 041C     		mov	r4, r0
 347:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 215              		.loc 1 347 0
 216 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 217              	.LVL10:
 349:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 218              		.loc 1 349 0
 219 0008 054B     		ldr	r3, .L11
 220 000a 064A     		ldr	r2, .L11+4
 221 000c 1968     		ldr	r1, [r3]
 353:.\Generated_Source\PSoC4/Timer.c **** }
 222              		.loc 1 353 0
 223              		@ sp needed for prologue
 349:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 224              		.loc 1 349 0
 225 000e 0A40     		and	r2, r1
 226 0010 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 227              		.loc 1 350 0
 228 0012 1968     		ldr	r1, [r3]
 229 0014 0C43     		orr	r4, r1
 230              	.LVL11:
 231 0016 1C60     		str	r4, [r3]
 352:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 232              		.loc 1 352 0
 233 0018 FFF7FEFF 		bl	CyExitCriticalSection
 234              	.LVL12:
 353:.\Generated_Source\PSoC4/Timer.c **** }
 235              		.loc 1 353 0
 236 001c 10BD     		pop	{r4, pc}
 237              	.L12:
 238 001e C046     		.align	2
 239              	.L11:
 240 0020 00010540 		.word	1074069760
 241 0024 FFFF8FFF 		.word	-7340033
 242              		.cfi_endproc
 243              	.LFE5:
 244              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 245              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 246              		.align	1
 247              		.global	Timer_SetPrescaler
 248              		.code	16
 249              		.thumb_func
 250              		.type	Timer_SetPrescaler, %function
 251              	Timer_SetPrescaler:
 252              	.LFB6:
 381:.\Generated_Source\PSoC4/Timer.c **** {
 253              		.loc 1 381 0
 254              		.cfi_startproc
 255              	.LVL13:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 29


 256 0000 10B5     		push	{r4, lr}
 257              	.LCFI3:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
 381:.\Generated_Source\PSoC4/Timer.c **** {
 261              		.loc 1 381 0
 262 0002 041C     		mov	r4, r0
 384:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 263              		.loc 1 384 0
 264 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 265              	.LVL14:
 386:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 266              		.loc 1 386 0
 267 0008 054B     		ldr	r3, .L14
 268 000a 064A     		ldr	r2, .L14+4
 269 000c 1968     		ldr	r1, [r3]
 390:.\Generated_Source\PSoC4/Timer.c **** }
 270              		.loc 1 390 0
 271              		@ sp needed for prologue
 386:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 272              		.loc 1 386 0
 273 000e 0A40     		and	r2, r1
 274 0010 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 275              		.loc 1 387 0
 276 0012 1968     		ldr	r1, [r3]
 277 0014 0C43     		orr	r4, r1
 278              	.LVL15:
 279 0016 1C60     		str	r4, [r3]
 389:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 280              		.loc 1 389 0
 281 0018 FFF7FEFF 		bl	CyExitCriticalSection
 282              	.LVL16:
 390:.\Generated_Source\PSoC4/Timer.c **** }
 283              		.loc 1 390 0
 284 001c 10BD     		pop	{r4, pc}
 285              	.L15:
 286 001e C046     		.align	2
 287              	.L14:
 288 0020 00010540 		.word	1074069760
 289 0024 FF00FFFF 		.word	-65281
 290              		.cfi_endproc
 291              	.LFE6:
 292              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
 293              		.section	.text.Timer_SetOneShot,"ax",%progbits
 294              		.align	1
 295              		.global	Timer_SetOneShot
 296              		.code	16
 297              		.thumb_func
 298              		.type	Timer_SetOneShot, %function
 299              	Timer_SetOneShot:
 300              	.LFB7:
 413:.\Generated_Source\PSoC4/Timer.c **** {
 301              		.loc 1 413 0
 302              		.cfi_startproc
 303              	.LVL17:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 30


 304 0000 10B5     		push	{r4, lr}
 305              	.LCFI4:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 4, -8
 308              		.cfi_offset 14, -4
 413:.\Generated_Source\PSoC4/Timer.c **** {
 309              		.loc 1 413 0
 310 0002 041C     		mov	r4, r0
 416:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 311              		.loc 1 416 0
 312 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 313              	.LVL18:
 418:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 314              		.loc 1 418 0
 315 0008 064B     		ldr	r3, .L17
 316 000a 074A     		ldr	r2, .L17+4
 317 000c 1968     		ldr	r1, [r3]
 423:.\Generated_Source\PSoC4/Timer.c **** }
 318              		.loc 1 423 0
 319              		@ sp needed for prologue
 418:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 320              		.loc 1 418 0
 321 000e 0A40     		and	r2, r1
 322 0010 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 323              		.loc 1 419 0
 324 0012 0121     		mov	r1, #1
 325 0014 1A68     		ldr	r2, [r3]
 326 0016 0C40     		and	r4, r1
 327              	.LVL19:
 328 0018 A404     		lsl	r4, r4, #18
 329 001a 1443     		orr	r4, r2
 330 001c 1C60     		str	r4, [r3]
 422:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 331              		.loc 1 422 0
 332 001e FFF7FEFF 		bl	CyExitCriticalSection
 333              	.LVL20:
 423:.\Generated_Source\PSoC4/Timer.c **** }
 334              		.loc 1 423 0
 335 0022 10BD     		pop	{r4, pc}
 336              	.L18:
 337              		.align	2
 338              	.L17:
 339 0024 00010540 		.word	1074069760
 340 0028 FFFFFBFF 		.word	-262145
 341              		.cfi_endproc
 342              	.LFE7:
 343              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 344              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 345              		.align	1
 346              		.global	Timer_SetPWMMode
 347              		.code	16
 348              		.thumb_func
 349              		.type	Timer_SetPWMMode, %function
 350              	Timer_SetPWMMode:
 351              	.LFB8:
 467:.\Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 31


 352              		.loc 1 467 0
 353              		.cfi_startproc
 354              	.LVL21:
 468:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 355              		.loc 1 468 0
 356 0000 3F23     		mov	r3, #63
 357 0002 0249     		ldr	r1, .L20
 358 0004 1840     		and	r0, r3
 359              	.LVL22:
 360 0006 0860     		str	r0, [r1]
 469:.\Generated_Source\PSoC4/Timer.c **** }
 361              		.loc 1 469 0
 362              		@ sp needed for prologue
 363 0008 7047     		bx	lr
 364              	.L21:
 365 000a C046     		.align	2
 366              	.L20:
 367 000c 28010540 		.word	1074069800
 368              		.cfi_endproc
 369              	.LFE8:
 370              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 371              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 372              		.align	1
 373              		.global	Timer_SetPWMSyncKill
 374              		.code	16
 375              		.thumb_func
 376              		.type	Timer_SetPWMSyncKill, %function
 377              	Timer_SetPWMSyncKill:
 378              	.LFB9:
 503:.\Generated_Source\PSoC4/Timer.c **** {
 379              		.loc 1 503 0
 380              		.cfi_startproc
 381              	.LVL23:
 382 0000 10B5     		push	{r4, lr}
 383              	.LCFI5:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 4, -8
 386              		.cfi_offset 14, -4
 503:.\Generated_Source\PSoC4/Timer.c **** {
 387              		.loc 1 503 0
 388 0002 041C     		mov	r4, r0
 506:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 389              		.loc 1 506 0
 390 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 391              	.LVL24:
 508:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 392              		.loc 1 508 0
 393 0008 064B     		ldr	r3, .L23
 394 000a 0421     		mov	r1, #4
 395 000c 1A68     		ldr	r2, [r3]
 513:.\Generated_Source\PSoC4/Timer.c **** }
 396              		.loc 1 513 0
 397              		@ sp needed for prologue
 508:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 398              		.loc 1 508 0
 399 000e 8A43     		bic	r2, r1
 400 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 32


 509:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 401              		.loc 1 509 0
 402 0012 0121     		mov	r1, #1
 403 0014 1A68     		ldr	r2, [r3]
 404 0016 0C40     		and	r4, r1
 405              	.LVL25:
 406 0018 A400     		lsl	r4, r4, #2
 407 001a 1443     		orr	r4, r2
 408 001c 1C60     		str	r4, [r3]
 512:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 409              		.loc 1 512 0
 410 001e FFF7FEFF 		bl	CyExitCriticalSection
 411              	.LVL26:
 513:.\Generated_Source\PSoC4/Timer.c **** }
 412              		.loc 1 513 0
 413 0022 10BD     		pop	{r4, pc}
 414              	.L24:
 415              		.align	2
 416              	.L23:
 417 0024 00010540 		.word	1074069760
 418              		.cfi_endproc
 419              	.LFE9:
 420              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 421              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 422              		.align	1
 423              		.global	Timer_SetPWMStopOnKill
 424              		.code	16
 425              		.thumb_func
 426              		.type	Timer_SetPWMStopOnKill, %function
 427              	Timer_SetPWMStopOnKill:
 428              	.LFB10:
 537:.\Generated_Source\PSoC4/Timer.c **** {
 429              		.loc 1 537 0
 430              		.cfi_startproc
 431              	.LVL27:
 432 0000 10B5     		push	{r4, lr}
 433              	.LCFI6:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 4, -8
 436              		.cfi_offset 14, -4
 537:.\Generated_Source\PSoC4/Timer.c **** {
 437              		.loc 1 537 0
 438 0002 041C     		mov	r4, r0
 540:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 439              		.loc 1 540 0
 440 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 441              	.LVL28:
 542:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 442              		.loc 1 542 0
 443 0008 064B     		ldr	r3, .L26
 444 000a 0821     		mov	r1, #8
 445 000c 1A68     		ldr	r2, [r3]
 547:.\Generated_Source\PSoC4/Timer.c **** }
 446              		.loc 1 547 0
 447              		@ sp needed for prologue
 542:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 448              		.loc 1 542 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 33


 449 000e 8A43     		bic	r2, r1
 450 0010 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 451              		.loc 1 543 0
 452 0012 0121     		mov	r1, #1
 453 0014 1A68     		ldr	r2, [r3]
 454 0016 0C40     		and	r4, r1
 455              	.LVL29:
 456 0018 E400     		lsl	r4, r4, #3
 457 001a 1443     		orr	r4, r2
 458 001c 1C60     		str	r4, [r3]
 546:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 459              		.loc 1 546 0
 460 001e FFF7FEFF 		bl	CyExitCriticalSection
 461              	.LVL30:
 547:.\Generated_Source\PSoC4/Timer.c **** }
 462              		.loc 1 547 0
 463 0022 10BD     		pop	{r4, pc}
 464              	.L27:
 465              		.align	2
 466              	.L26:
 467 0024 00010540 		.word	1074069760
 468              		.cfi_endproc
 469              	.LFE10:
 470              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 471              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 472              		.align	1
 473              		.global	Timer_SetPWMDeadTime
 474              		.code	16
 475              		.thumb_func
 476              		.type	Timer_SetPWMDeadTime, %function
 477              	Timer_SetPWMDeadTime:
 478              	.LFB11:
 570:.\Generated_Source\PSoC4/Timer.c **** {
 479              		.loc 1 570 0
 480              		.cfi_startproc
 481              	.LVL31:
 482 0000 10B5     		push	{r4, lr}
 483              	.LCFI7:
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 570:.\Generated_Source\PSoC4/Timer.c **** {
 487              		.loc 1 570 0
 488 0002 041C     		mov	r4, r0
 573:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 489              		.loc 1 573 0
 490 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 491              	.LVL32:
 575:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 492              		.loc 1 575 0
 493 0008 064B     		ldr	r3, .L29
 494 000a 074A     		ldr	r2, .L29+4
 495 000c 1968     		ldr	r1, [r3]
 576:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 496              		.loc 1 576 0
 497 000e 2406     		lsl	r4, r4, #24
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 34


 498              	.LVL33:
 575:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 499              		.loc 1 575 0
 500 0010 0A40     		and	r2, r1
 501 0012 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 502              		.loc 1 576 0
 503 0014 1968     		ldr	r1, [r3]
 504 0016 220C     		lsr	r2, r4, #16
 505 0018 0A43     		orr	r2, r1
 506 001a 1A60     		str	r2, [r3]
 579:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 507              		.loc 1 579 0
 508 001c FFF7FEFF 		bl	CyExitCriticalSection
 509              	.LVL34:
 580:.\Generated_Source\PSoC4/Timer.c **** }
 510              		.loc 1 580 0
 511              		@ sp needed for prologue
 512 0020 10BD     		pop	{r4, pc}
 513              	.L30:
 514 0022 C046     		.align	2
 515              	.L29:
 516 0024 00010540 		.word	1074069760
 517 0028 FF00FFFF 		.word	-65281
 518              		.cfi_endproc
 519              	.LFE11:
 520              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
 521              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 522              		.align	1
 523              		.global	Timer_SetPWMInvert
 524              		.code	16
 525              		.thumb_func
 526              		.type	Timer_SetPWMInvert, %function
 527              	Timer_SetPWMInvert:
 528              	.LFB12:
 603:.\Generated_Source\PSoC4/Timer.c **** {
 529              		.loc 1 603 0
 530              		.cfi_startproc
 531              	.LVL35:
 532 0000 10B5     		push	{r4, lr}
 533              	.LCFI8:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 4, -8
 536              		.cfi_offset 14, -4
 603:.\Generated_Source\PSoC4/Timer.c **** {
 537              		.loc 1 603 0
 538 0002 041C     		mov	r4, r0
 606:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 539              		.loc 1 606 0
 540 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 541              	.LVL36:
 608:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 542              		.loc 1 608 0
 543 0008 054B     		ldr	r3, .L32
 544 000a 064A     		ldr	r2, .L32+4
 545 000c 1968     		ldr	r1, [r3]
 612:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 35


 546              		.loc 1 612 0
 547              		@ sp needed for prologue
 608:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 548              		.loc 1 608 0
 549 000e 0A40     		and	r2, r1
 550 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 551              		.loc 1 609 0
 552 0012 1968     		ldr	r1, [r3]
 553 0014 0C43     		orr	r4, r1
 554              	.LVL37:
 555 0016 1C60     		str	r4, [r3]
 611:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 556              		.loc 1 611 0
 557 0018 FFF7FEFF 		bl	CyExitCriticalSection
 558              	.LVL38:
 612:.\Generated_Source\PSoC4/Timer.c **** }
 559              		.loc 1 612 0
 560 001c 10BD     		pop	{r4, pc}
 561              	.L33:
 562 001e C046     		.align	2
 563              	.L32:
 564 0020 00010540 		.word	1074069760
 565 0024 FFFFCFFF 		.word	-3145729
 566              		.cfi_endproc
 567              	.LFE12:
 568              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 569              		.section	.text.Timer_WriteCounter,"ax",%progbits
 570              		.align	1
 571              		.global	Timer_WriteCounter
 572              		.code	16
 573              		.thumb_func
 574              		.type	Timer_WriteCounter, %function
 575              	Timer_WriteCounter:
 576              	.LFB13:
 633:.\Generated_Source\PSoC4/Timer.c **** {
 577              		.loc 1 633 0
 578              		.cfi_startproc
 579              	.LVL39:
 634:.\Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 580              		.loc 1 634 0
 581 0000 014B     		ldr	r3, .L35
 582 0002 80B2     		uxth	r0, r0
 583              	.LVL40:
 584 0004 1860     		str	r0, [r3]
 635:.\Generated_Source\PSoC4/Timer.c **** }
 585              		.loc 1 635 0
 586              		@ sp needed for prologue
 587 0006 7047     		bx	lr
 588              	.L36:
 589              		.align	2
 590              	.L35:
 591 0008 08010540 		.word	1074069768
 592              		.cfi_endproc
 593              	.LFE13:
 594              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 595              		.section	.text.Timer_ReadCounter,"ax",%progbits
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 36


 596              		.align	1
 597              		.global	Timer_ReadCounter
 598              		.code	16
 599              		.thumb_func
 600              		.type	Timer_ReadCounter, %function
 601              	Timer_ReadCounter:
 602              	.LFB14:
 653:.\Generated_Source\PSoC4/Timer.c **** {
 603              		.loc 1 653 0
 604              		.cfi_startproc
 654:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 605              		.loc 1 654 0
 606 0000 014B     		ldr	r3, .L38
 655:.\Generated_Source\PSoC4/Timer.c **** }
 607              		.loc 1 655 0
 608              		@ sp needed for prologue
 654:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 609              		.loc 1 654 0
 610 0002 1868     		ldr	r0, [r3]
 611 0004 80B2     		uxth	r0, r0
 655:.\Generated_Source\PSoC4/Timer.c **** }
 612              		.loc 1 655 0
 613 0006 7047     		bx	lr
 614              	.L39:
 615              		.align	2
 616              	.L38:
 617 0008 08010540 		.word	1074069768
 618              		.cfi_endproc
 619              	.LFE14:
 620              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 621              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 622              		.align	1
 623              		.global	Timer_SetCounterMode
 624              		.code	16
 625              		.thumb_func
 626              		.type	Timer_SetCounterMode, %function
 627              	Timer_SetCounterMode:
 628              	.LFB15:
 682:.\Generated_Source\PSoC4/Timer.c **** {
 629              		.loc 1 682 0
 630              		.cfi_startproc
 631              	.LVL41:
 632 0000 10B5     		push	{r4, lr}
 633              	.LCFI9:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 14, -4
 682:.\Generated_Source\PSoC4/Timer.c **** {
 637              		.loc 1 682 0
 638 0002 041C     		mov	r4, r0
 685:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 639              		.loc 1 685 0
 640 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 641              	.LVL42:
 687:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 642              		.loc 1 687 0
 643 0008 054B     		ldr	r3, .L41
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 37


 644 000a 064A     		ldr	r2, .L41+4
 645 000c 1968     		ldr	r1, [r3]
 691:.\Generated_Source\PSoC4/Timer.c **** }
 646              		.loc 1 691 0
 647              		@ sp needed for prologue
 687:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 648              		.loc 1 687 0
 649 000e 0A40     		and	r2, r1
 650 0010 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 651              		.loc 1 688 0
 652 0012 1968     		ldr	r1, [r3]
 653 0014 0C43     		orr	r4, r1
 654              	.LVL43:
 655 0016 1C60     		str	r4, [r3]
 690:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 656              		.loc 1 690 0
 657 0018 FFF7FEFF 		bl	CyExitCriticalSection
 658              	.LVL44:
 691:.\Generated_Source\PSoC4/Timer.c **** }
 659              		.loc 1 691 0
 660 001c 10BD     		pop	{r4, pc}
 661              	.L42:
 662 001e C046     		.align	2
 663              	.L41:
 664 0020 00010540 		.word	1074069760
 665 0024 FFFFFCFF 		.word	-196609
 666              		.cfi_endproc
 667              	.LFE15:
 668              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 669              		.section	.text.Timer_WritePeriod,"ax",%progbits
 670              		.align	1
 671              		.global	Timer_WritePeriod
 672              		.code	16
 673              		.thumb_func
 674              		.type	Timer_WritePeriod, %function
 675              	Timer_WritePeriod:
 676              	.LFB16:
 711:.\Generated_Source\PSoC4/Timer.c **** {
 677              		.loc 1 711 0
 678              		.cfi_startproc
 679              	.LVL45:
 712:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 680              		.loc 1 712 0
 681 0000 014B     		ldr	r3, .L44
 682 0002 80B2     		uxth	r0, r0
 683              	.LVL46:
 684 0004 1860     		str	r0, [r3]
 713:.\Generated_Source\PSoC4/Timer.c **** }
 685              		.loc 1 713 0
 686              		@ sp needed for prologue
 687 0006 7047     		bx	lr
 688              	.L45:
 689              		.align	2
 690              	.L44:
 691 0008 14010540 		.word	1074069780
 692              		.cfi_endproc
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 38


 693              	.LFE16:
 694              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 695              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 696              		.align	1
 697              		.global	Timer_ReadPeriod
 698              		.code	16
 699              		.thumb_func
 700              		.type	Timer_ReadPeriod, %function
 701              	Timer_ReadPeriod:
 702              	.LFB17:
 731:.\Generated_Source\PSoC4/Timer.c **** {
 703              		.loc 1 731 0
 704              		.cfi_startproc
 732:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 705              		.loc 1 732 0
 706 0000 014B     		ldr	r3, .L47
 733:.\Generated_Source\PSoC4/Timer.c **** }
 707              		.loc 1 733 0
 708              		@ sp needed for prologue
 732:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 709              		.loc 1 732 0
 710 0002 1868     		ldr	r0, [r3]
 711 0004 80B2     		uxth	r0, r0
 733:.\Generated_Source\PSoC4/Timer.c **** }
 712              		.loc 1 733 0
 713 0006 7047     		bx	lr
 714              	.L48:
 715              		.align	2
 716              	.L47:
 717 0008 14010540 		.word	1074069780
 718              		.cfi_endproc
 719              	.LFE17:
 720              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 721              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 722              		.align	1
 723              		.global	Timer_SetCompareSwap
 724              		.code	16
 725              		.thumb_func
 726              		.type	Timer_SetCompareSwap, %function
 727              	Timer_SetCompareSwap:
 728              	.LFB18:
 757:.\Generated_Source\PSoC4/Timer.c **** {
 729              		.loc 1 757 0
 730              		.cfi_startproc
 731              	.LVL47:
 732 0000 10B5     		push	{r4, lr}
 733              	.LCFI10:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 4, -8
 736              		.cfi_offset 14, -4
 757:.\Generated_Source\PSoC4/Timer.c **** {
 737              		.loc 1 757 0
 738 0002 041C     		mov	r4, r0
 760:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 739              		.loc 1 760 0
 740 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 741              	.LVL48:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 39


 762:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 742              		.loc 1 762 0
 743 0008 054B     		ldr	r3, .L50
 744 000a 0122     		mov	r2, #1
 745 000c 1968     		ldr	r1, [r3]
 766:.\Generated_Source\PSoC4/Timer.c **** }
 746              		.loc 1 766 0
 747              		@ sp needed for prologue
 762:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 748              		.loc 1 762 0
 749 000e 9143     		bic	r1, r2
 750 0010 1960     		str	r1, [r3]
 763:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 751              		.loc 1 763 0
 752 0012 1968     		ldr	r1, [r3]
 753 0014 2240     		and	r2, r4
 754 0016 0A43     		orr	r2, r1
 755 0018 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 756              		.loc 1 765 0
 757 001a FFF7FEFF 		bl	CyExitCriticalSection
 758              	.LVL49:
 759              	.LVL50:
 766:.\Generated_Source\PSoC4/Timer.c **** }
 760              		.loc 1 766 0
 761 001e 10BD     		pop	{r4, pc}
 762              	.L51:
 763              		.align	2
 764              	.L50:
 765 0020 00010540 		.word	1074069760
 766              		.cfi_endproc
 767              	.LFE18:
 768              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 769              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 770              		.align	1
 771              		.global	Timer_WritePeriodBuf
 772              		.code	16
 773              		.thumb_func
 774              		.type	Timer_WritePeriodBuf, %function
 775              	Timer_WritePeriodBuf:
 776              	.LFB19:
 784:.\Generated_Source\PSoC4/Timer.c **** {
 777              		.loc 1 784 0
 778              		.cfi_startproc
 779              	.LVL51:
 785:.\Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 780              		.loc 1 785 0
 781 0000 014B     		ldr	r3, .L53
 782 0002 80B2     		uxth	r0, r0
 783              	.LVL52:
 784 0004 1860     		str	r0, [r3]
 786:.\Generated_Source\PSoC4/Timer.c **** }
 785              		.loc 1 786 0
 786              		@ sp needed for prologue
 787 0006 7047     		bx	lr
 788              	.L54:
 789              		.align	2
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 40


 790              	.L53:
 791 0008 18010540 		.word	1074069784
 792              		.cfi_endproc
 793              	.LFE19:
 794              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 795              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 796              		.align	1
 797              		.global	Timer_ReadPeriodBuf
 798              		.code	16
 799              		.thumb_func
 800              		.type	Timer_ReadPeriodBuf, %function
 801              	Timer_ReadPeriodBuf:
 802              	.LFB20:
 804:.\Generated_Source\PSoC4/Timer.c **** {
 803              		.loc 1 804 0
 804              		.cfi_startproc
 805:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 805              		.loc 1 805 0
 806 0000 014B     		ldr	r3, .L56
 806:.\Generated_Source\PSoC4/Timer.c **** }
 807              		.loc 1 806 0
 808              		@ sp needed for prologue
 805:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 809              		.loc 1 805 0
 810 0002 1868     		ldr	r0, [r3]
 811 0004 80B2     		uxth	r0, r0
 806:.\Generated_Source\PSoC4/Timer.c **** }
 812              		.loc 1 806 0
 813 0006 7047     		bx	lr
 814              	.L57:
 815              		.align	2
 816              	.L56:
 817 0008 18010540 		.word	1074069784
 818              		.cfi_endproc
 819              	.LFE20:
 820              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 821              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 822              		.align	1
 823              		.global	Timer_SetPeriodSwap
 824              		.code	16
 825              		.thumb_func
 826              		.type	Timer_SetPeriodSwap, %function
 827              	Timer_SetPeriodSwap:
 828              	.LFB21:
 830:.\Generated_Source\PSoC4/Timer.c **** {
 829              		.loc 1 830 0
 830              		.cfi_startproc
 831              	.LVL53:
 832 0000 10B5     		push	{r4, lr}
 833              	.LCFI11:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 4, -8
 836              		.cfi_offset 14, -4
 830:.\Generated_Source\PSoC4/Timer.c **** {
 837              		.loc 1 830 0
 838 0002 041C     		mov	r4, r0
 833:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 41


 839              		.loc 1 833 0
 840 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 841              	.LVL54:
 835:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 842              		.loc 1 835 0
 843 0008 064B     		ldr	r3, .L59
 844 000a 0221     		mov	r1, #2
 845 000c 1A68     		ldr	r2, [r3]
 840:.\Generated_Source\PSoC4/Timer.c **** }
 846              		.loc 1 840 0
 847              		@ sp needed for prologue
 835:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 848              		.loc 1 835 0
 849 000e 8A43     		bic	r2, r1
 850 0010 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 851              		.loc 1 836 0
 852 0012 0121     		mov	r1, #1
 853 0014 1A68     		ldr	r2, [r3]
 854 0016 0C40     		and	r4, r1
 855              	.LVL55:
 856 0018 8C40     		lsl	r4, r4, r1
 857 001a 1443     		orr	r4, r2
 858 001c 1C60     		str	r4, [r3]
 839:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 859              		.loc 1 839 0
 860 001e FFF7FEFF 		bl	CyExitCriticalSection
 861              	.LVL56:
 840:.\Generated_Source\PSoC4/Timer.c **** }
 862              		.loc 1 840 0
 863 0022 10BD     		pop	{r4, pc}
 864              	.L60:
 865              		.align	2
 866              	.L59:
 867 0024 00010540 		.word	1074069760
 868              		.cfi_endproc
 869              	.LFE21:
 870              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 871              		.section	.text.Timer_WriteCompare,"ax",%progbits
 872              		.align	1
 873              		.global	Timer_WriteCompare
 874              		.code	16
 875              		.thumb_func
 876              		.type	Timer_WriteCompare, %function
 877              	Timer_WriteCompare:
 878              	.LFB22:
 859:.\Generated_Source\PSoC4/Timer.c **** {
 879              		.loc 1 859 0
 880              		.cfi_startproc
 881              	.LVL57:
 880:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 882              		.loc 1 880 0
 883 0000 014B     		ldr	r3, .L62
 884 0002 80B2     		uxth	r0, r0
 885              	.LVL58:
 886 0004 1860     		str	r0, [r3]
 882:.\Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 42


 887              		.loc 1 882 0
 888              		@ sp needed for prologue
 889 0006 7047     		bx	lr
 890              	.L63:
 891              		.align	2
 892              	.L62:
 893 0008 0C010540 		.word	1074069772
 894              		.cfi_endproc
 895              	.LFE22:
 896              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 897              		.section	.text.Timer_ReadCompare,"ax",%progbits
 898              		.align	1
 899              		.global	Timer_ReadCompare
 900              		.code	16
 901              		.thumb_func
 902              		.type	Timer_ReadCompare, %function
 903              	Timer_ReadCompare:
 904              	.LFB23:
 901:.\Generated_Source\PSoC4/Timer.c **** {
 905              		.loc 1 901 0
 906              		.cfi_startproc
 924:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 907              		.loc 1 924 0
 908 0000 014B     		ldr	r3, .L65
 926:.\Generated_Source\PSoC4/Timer.c **** }
 909              		.loc 1 926 0
 910              		@ sp needed for prologue
 924:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 911              		.loc 1 924 0
 912 0002 1868     		ldr	r0, [r3]
 913 0004 80B2     		uxth	r0, r0
 926:.\Generated_Source\PSoC4/Timer.c **** }
 914              		.loc 1 926 0
 915 0006 7047     		bx	lr
 916              	.L66:
 917              		.align	2
 918              	.L65:
 919 0008 0C010540 		.word	1074069772
 920              		.cfi_endproc
 921              	.LFE23:
 922              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 923              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 924              		.align	1
 925              		.global	Timer_WriteCompareBuf
 926              		.code	16
 927              		.thumb_func
 928              		.type	Timer_WriteCompareBuf, %function
 929              	Timer_WriteCompareBuf:
 930              	.LFB24:
 945:.\Generated_Source\PSoC4/Timer.c **** {
 931              		.loc 1 945 0
 932              		.cfi_startproc
 933              	.LVL59:
 966:.\Generated_Source\PSoC4/Timer.c ****         Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 934              		.loc 1 966 0
 935 0000 014B     		ldr	r3, .L68
 936 0002 80B2     		uxth	r0, r0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 43


 937              	.LVL60:
 938 0004 1860     		str	r0, [r3]
 968:.\Generated_Source\PSoC4/Timer.c **** }
 939              		.loc 1 968 0
 940              		@ sp needed for prologue
 941 0006 7047     		bx	lr
 942              	.L69:
 943              		.align	2
 944              	.L68:
 945 0008 10010540 		.word	1074069776
 946              		.cfi_endproc
 947              	.LFE24:
 948              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 949              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 950              		.align	1
 951              		.global	Timer_ReadCompareBuf
 952              		.code	16
 953              		.thumb_func
 954              		.type	Timer_ReadCompareBuf, %function
 955              	Timer_ReadCompareBuf:
 956              	.LFB25:
 987:.\Generated_Source\PSoC4/Timer.c **** {
 957              		.loc 1 987 0
 958              		.cfi_startproc
1010:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 959              		.loc 1 1010 0
 960 0000 014B     		ldr	r3, .L71
1012:.\Generated_Source\PSoC4/Timer.c **** }
 961              		.loc 1 1012 0
 962              		@ sp needed for prologue
1010:.\Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 963              		.loc 1 1010 0
 964 0002 1868     		ldr	r0, [r3]
 965 0004 80B2     		uxth	r0, r0
1012:.\Generated_Source\PSoC4/Timer.c **** }
 966              		.loc 1 1012 0
 967 0006 7047     		bx	lr
 968              	.L72:
 969              		.align	2
 970              	.L71:
 971 0008 10010540 		.word	1074069776
 972              		.cfi_endproc
 973              	.LFE25:
 974              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 975              		.section	.text.Timer_ReadCapture,"ax",%progbits
 976              		.align	1
 977              		.global	Timer_ReadCapture
 978              		.code	16
 979              		.thumb_func
 980              		.type	Timer_ReadCapture, %function
 981              	Timer_ReadCapture:
 982              	.LFB26:
1031:.\Generated_Source\PSoC4/Timer.c **** {
 983              		.loc 1 1031 0
 984              		.cfi_startproc
1032:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 985              		.loc 1 1032 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 44


 986 0000 014B     		ldr	r3, .L74
1033:.\Generated_Source\PSoC4/Timer.c **** }
 987              		.loc 1 1033 0
 988              		@ sp needed for prologue
1032:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 989              		.loc 1 1032 0
 990 0002 1868     		ldr	r0, [r3]
 991 0004 80B2     		uxth	r0, r0
1033:.\Generated_Source\PSoC4/Timer.c **** }
 992              		.loc 1 1033 0
 993 0006 7047     		bx	lr
 994              	.L75:
 995              		.align	2
 996              	.L74:
 997 0008 0C010540 		.word	1074069772
 998              		.cfi_endproc
 999              	.LFE26:
 1000              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 1001              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 1002              		.align	1
 1003              		.global	Timer_ReadCaptureBuf
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	Timer_ReadCaptureBuf, %function
 1007              	Timer_ReadCaptureBuf:
 1008              	.LFB27:
1052:.\Generated_Source\PSoC4/Timer.c **** {
 1009              		.loc 1 1052 0
 1010              		.cfi_startproc
1053:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1011              		.loc 1 1053 0
 1012 0000 014B     		ldr	r3, .L77
1054:.\Generated_Source\PSoC4/Timer.c **** }
 1013              		.loc 1 1054 0
 1014              		@ sp needed for prologue
1053:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1015              		.loc 1 1053 0
 1016 0002 1868     		ldr	r0, [r3]
 1017 0004 80B2     		uxth	r0, r0
1054:.\Generated_Source\PSoC4/Timer.c **** }
 1018              		.loc 1 1054 0
 1019 0006 7047     		bx	lr
 1020              	.L78:
 1021              		.align	2
 1022              	.L77:
 1023 0008 10010540 		.word	1074069776
 1024              		.cfi_endproc
 1025              	.LFE27:
 1026              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
 1027              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 1028              		.align	1
 1029              		.global	Timer_SetCaptureMode
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	Timer_SetCaptureMode, %function
 1033              	Timer_SetCaptureMode:
 1034              	.LFB28:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 45


1079:.\Generated_Source\PSoC4/Timer.c **** {
 1035              		.loc 1 1079 0
 1036              		.cfi_startproc
 1037              	.LVL61:
 1038 0000 10B5     		push	{r4, lr}
 1039              	.LCFI12:
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 4, -8
 1042              		.cfi_offset 14, -4
1079:.\Generated_Source\PSoC4/Timer.c **** {
 1043              		.loc 1 1079 0
 1044 0002 041C     		mov	r4, r0
1082:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1045              		.loc 1 1082 0
 1046 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1047              	.LVL62:
1084:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1048              		.loc 1 1084 0
 1049 0008 054B     		ldr	r3, .L80
 1050 000a 0321     		mov	r1, #3
 1051 000c 1A68     		ldr	r2, [r3]
1088:.\Generated_Source\PSoC4/Timer.c **** }
 1052              		.loc 1 1088 0
 1053              		@ sp needed for prologue
1084:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1054              		.loc 1 1084 0
 1055 000e 8A43     		bic	r2, r1
 1056 0010 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1057              		.loc 1 1085 0
 1058 0012 1A68     		ldr	r2, [r3]
 1059 0014 1443     		orr	r4, r2
 1060              	.LVL63:
 1061 0016 1C60     		str	r4, [r3]
1087:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1062              		.loc 1 1087 0
 1063 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1064              	.LVL64:
1088:.\Generated_Source\PSoC4/Timer.c **** }
 1065              		.loc 1 1088 0
 1066 001c 10BD     		pop	{r4, pc}
 1067              	.L81:
 1068 001e C046     		.align	2
 1069              	.L80:
 1070 0020 24010540 		.word	1074069796
 1071              		.cfi_endproc
 1072              	.LFE28:
 1073              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1074              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1075              		.align	1
 1076              		.global	Timer_SetReloadMode
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	Timer_SetReloadMode, %function
 1080              	Timer_SetReloadMode:
 1081              	.LFB29:
1112:.\Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 46


 1082              		.loc 1 1112 0
 1083              		.cfi_startproc
 1084              	.LVL65:
 1085 0000 10B5     		push	{r4, lr}
 1086              	.LCFI13:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 4, -8
 1089              		.cfi_offset 14, -4
1112:.\Generated_Source\PSoC4/Timer.c **** {
 1090              		.loc 1 1112 0
 1091 0002 041C     		mov	r4, r0
1115:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1092              		.loc 1 1115 0
 1093 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1094              	.LVL66:
1117:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1095              		.loc 1 1117 0
 1096 0008 054B     		ldr	r3, .L83
 1097 000a 3021     		mov	r1, #48
 1098 000c 1A68     		ldr	r2, [r3]
1118:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1099              		.loc 1 1118 0
 1100 000e 2401     		lsl	r4, r4, #4
 1101              	.LVL67:
1117:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1102              		.loc 1 1117 0
 1103 0010 8A43     		bic	r2, r1
 1104 0012 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1105              		.loc 1 1118 0
 1106 0014 1A68     		ldr	r2, [r3]
1121:.\Generated_Source\PSoC4/Timer.c **** }
 1107              		.loc 1 1121 0
 1108              		@ sp needed for prologue
1118:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1109              		.loc 1 1118 0
 1110 0016 1443     		orr	r4, r2
 1111 0018 1C60     		str	r4, [r3]
1120:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1112              		.loc 1 1120 0
 1113 001a FFF7FEFF 		bl	CyExitCriticalSection
 1114              	.LVL68:
1121:.\Generated_Source\PSoC4/Timer.c **** }
 1115              		.loc 1 1121 0
 1116 001e 10BD     		pop	{r4, pc}
 1117              	.L84:
 1118              		.align	2
 1119              	.L83:
 1120 0020 24010540 		.word	1074069796
 1121              		.cfi_endproc
 1122              	.LFE29:
 1123              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1124              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1125              		.align	1
 1126              		.global	Timer_SetStartMode
 1127              		.code	16
 1128              		.thumb_func
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 47


 1129              		.type	Timer_SetStartMode, %function
 1130              	Timer_SetStartMode:
 1131              	.LFB30:
1145:.\Generated_Source\PSoC4/Timer.c **** {
 1132              		.loc 1 1145 0
 1133              		.cfi_startproc
 1134              	.LVL69:
 1135 0000 10B5     		push	{r4, lr}
 1136              	.LCFI14:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 4, -8
 1139              		.cfi_offset 14, -4
1145:.\Generated_Source\PSoC4/Timer.c **** {
 1140              		.loc 1 1145 0
 1141 0002 041C     		mov	r4, r0
1148:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1142              		.loc 1 1148 0
 1143 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1144              	.LVL70:
1150:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1145              		.loc 1 1150 0
 1146 0008 054B     		ldr	r3, .L86
 1147 000a 064A     		ldr	r2, .L86+4
 1148 000c 1968     		ldr	r1, [r3]
1151:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1149              		.loc 1 1151 0
 1150 000e 2402     		lsl	r4, r4, #8
 1151              	.LVL71:
1150:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1152              		.loc 1 1150 0
 1153 0010 0A40     		and	r2, r1
 1154 0012 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1155              		.loc 1 1151 0
 1156 0014 1968     		ldr	r1, [r3]
1154:.\Generated_Source\PSoC4/Timer.c **** }
 1157              		.loc 1 1154 0
 1158              		@ sp needed for prologue
1151:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1159              		.loc 1 1151 0
 1160 0016 0C43     		orr	r4, r1
 1161 0018 1C60     		str	r4, [r3]
1153:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1162              		.loc 1 1153 0
 1163 001a FFF7FEFF 		bl	CyExitCriticalSection
 1164              	.LVL72:
1154:.\Generated_Source\PSoC4/Timer.c **** }
 1165              		.loc 1 1154 0
 1166 001e 10BD     		pop	{r4, pc}
 1167              	.L87:
 1168              		.align	2
 1169              	.L86:
 1170 0020 24010540 		.word	1074069796
 1171 0024 FFFCFFFF 		.word	-769
 1172              		.cfi_endproc
 1173              	.LFE30:
 1174              		.size	Timer_SetStartMode, .-Timer_SetStartMode
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 48


 1175              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1176              		.align	1
 1177              		.global	Timer_SetStopMode
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	Timer_SetStopMode, %function
 1181              	Timer_SetStopMode:
 1182              	.LFB31:
1177:.\Generated_Source\PSoC4/Timer.c **** {
 1183              		.loc 1 1177 0
 1184              		.cfi_startproc
 1185              	.LVL73:
 1186 0000 10B5     		push	{r4, lr}
 1187              	.LCFI15:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 4, -8
 1190              		.cfi_offset 14, -4
1177:.\Generated_Source\PSoC4/Timer.c **** {
 1191              		.loc 1 1177 0
 1192 0002 041C     		mov	r4, r0
1180:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1193              		.loc 1 1180 0
 1194 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1195              	.LVL74:
1182:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1196              		.loc 1 1182 0
 1197 0008 054B     		ldr	r3, .L89
 1198 000a C021     		mov	r1, #192
 1199 000c 1A68     		ldr	r2, [r3]
1183:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1200              		.loc 1 1183 0
 1201 000e A401     		lsl	r4, r4, #6
 1202              	.LVL75:
1182:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1203              		.loc 1 1182 0
 1204 0010 8A43     		bic	r2, r1
 1205 0012 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1206              		.loc 1 1183 0
 1207 0014 1A68     		ldr	r2, [r3]
1186:.\Generated_Source\PSoC4/Timer.c **** }
 1208              		.loc 1 1186 0
 1209              		@ sp needed for prologue
1183:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1210              		.loc 1 1183 0
 1211 0016 1443     		orr	r4, r2
 1212 0018 1C60     		str	r4, [r3]
1185:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1213              		.loc 1 1185 0
 1214 001a FFF7FEFF 		bl	CyExitCriticalSection
 1215              	.LVL76:
1186:.\Generated_Source\PSoC4/Timer.c **** }
 1216              		.loc 1 1186 0
 1217 001e 10BD     		pop	{r4, pc}
 1218              	.L90:
 1219              		.align	2
 1220              	.L89:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 49


 1221 0020 24010540 		.word	1074069796
 1222              		.cfi_endproc
 1223              	.LFE31:
 1224              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1225              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1226              		.align	1
 1227              		.global	Timer_SetCountMode
 1228              		.code	16
 1229              		.thumb_func
 1230              		.type	Timer_SetCountMode, %function
 1231              	Timer_SetCountMode:
 1232              	.LFB32:
1210:.\Generated_Source\PSoC4/Timer.c **** {
 1233              		.loc 1 1210 0
 1234              		.cfi_startproc
 1235              	.LVL77:
 1236 0000 10B5     		push	{r4, lr}
 1237              	.LCFI16:
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 4, -8
 1240              		.cfi_offset 14, -4
1210:.\Generated_Source\PSoC4/Timer.c **** {
 1241              		.loc 1 1210 0
 1242 0002 041C     		mov	r4, r0
1213:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1243              		.loc 1 1213 0
 1244 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1245              	.LVL78:
1215:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1246              		.loc 1 1215 0
 1247 0008 054B     		ldr	r3, .L92
 1248 000a 0C21     		mov	r1, #12
 1249 000c 1A68     		ldr	r2, [r3]
1216:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1250              		.loc 1 1216 0
 1251 000e A400     		lsl	r4, r4, #2
 1252              	.LVL79:
1215:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1253              		.loc 1 1215 0
 1254 0010 8A43     		bic	r2, r1
 1255 0012 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1256              		.loc 1 1216 0
 1257 0014 1A68     		ldr	r2, [r3]
1219:.\Generated_Source\PSoC4/Timer.c **** }
 1258              		.loc 1 1219 0
 1259              		@ sp needed for prologue
1216:.\Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1260              		.loc 1 1216 0
 1261 0016 1443     		orr	r4, r2
 1262 0018 1C60     		str	r4, [r3]
1218:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1263              		.loc 1 1218 0
 1264 001a FFF7FEFF 		bl	CyExitCriticalSection
 1265              	.LVL80:
1219:.\Generated_Source\PSoC4/Timer.c **** }
 1266              		.loc 1 1219 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 50


 1267 001e 10BD     		pop	{r4, pc}
 1268              	.L93:
 1269              		.align	2
 1270              	.L92:
 1271 0020 24010540 		.word	1074069796
 1272              		.cfi_endproc
 1273              	.LFE32:
 1274              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1275              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1276              		.align	1
 1277              		.global	Timer_TriggerCommand
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	Timer_TriggerCommand, %function
 1281              	Timer_TriggerCommand:
 1282              	.LFB33:
1250:.\Generated_Source\PSoC4/Timer.c **** {
 1283              		.loc 1 1250 0
 1284              		.cfi_startproc
 1285              	.LVL81:
 1286 0000 38B5     		push	{r3, r4, r5, lr}
 1287              	.LCFI17:
 1288              		.cfi_def_cfa_offset 16
 1289              		.cfi_offset 3, -16
 1290              		.cfi_offset 4, -12
 1291              		.cfi_offset 5, -8
 1292              		.cfi_offset 14, -4
1250:.\Generated_Source\PSoC4/Timer.c **** {
 1293              		.loc 1 1250 0
 1294 0002 0C1C     		mov	r4, r1
 1295 0004 051C     		mov	r5, r0
1253:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1296              		.loc 1 1253 0
 1297 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1298              	.LVL82:
1255:.\Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
 1299              		.loc 1 1255 0
 1300 000a 034B     		ldr	r3, .L95
 1301 000c A540     		lsl	r5, r5, r4
 1302              	.LVL83:
 1303 000e 1D60     		str	r5, [r3]
1257:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1304              		.loc 1 1257 0
 1305 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1306              	.LVL84:
1258:.\Generated_Source\PSoC4/Timer.c **** }
 1307              		.loc 1 1258 0
 1308              		@ sp needed for prologue
 1309              	.LVL85:
 1310 0014 38BD     		pop	{r3, r4, r5, pc}
 1311              	.L96:
 1312 0016 C046     		.align	2
 1313              	.L95:
 1314 0018 08000540 		.word	1074069512
 1315              		.cfi_endproc
 1316              	.LFE33:
 1317              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 51


 1318              		.section	.text.Timer_Enable,"ax",%progbits
 1319              		.align	1
 1320              		.global	Timer_Enable
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	Timer_Enable, %function
 1324              	Timer_Enable:
 1325              	.LFB1:
 201:.\Generated_Source\PSoC4/Timer.c **** {
 1326              		.loc 1 201 0
 1327              		.cfi_startproc
 1328 0000 10B5     		push	{r4, lr}
 1329              	.LCFI18:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 4, -8
 1332              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1333              		.loc 1 204 0
 1334 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1335              	.LVL86:
 205:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 1336              		.loc 1 205 0
 1337 0006 064B     		ldr	r3, .L98
 1338 0008 0124     		mov	r4, #1
 1339 000a 1A68     		ldr	r2, [r3]
 220:.\Generated_Source\PSoC4/Timer.c **** }
 1340              		.loc 1 220 0
 1341              		@ sp needed for prologue
 205:.\Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 1342              		.loc 1 205 0
 1343 000c 2243     		orr	r2, r4
 1344 000e 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1345              		.loc 1 206 0
 1346 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1347              	.LVL87:
 217:.\Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 1348              		.loc 1 217 0
 1349 0014 201C     		mov	r0, r4
 1350 0016 1821     		mov	r1, #24
 1351 0018 FFF7FEFF 		bl	Timer_TriggerCommand
 1352              	.LVL88:
 220:.\Generated_Source\PSoC4/Timer.c **** }
 1353              		.loc 1 220 0
 1354 001c 10BD     		pop	{r4, pc}
 1355              	.L99:
 1356 001e C046     		.align	2
 1357              	.L98:
 1358 0020 00000540 		.word	1074069504
 1359              		.cfi_endproc
 1360              	.LFE1:
 1361              		.size	Timer_Enable, .-Timer_Enable
 1362              		.section	.text.Timer_Start,"ax",%progbits
 1363              		.align	1
 1364              		.global	Timer_Start
 1365              		.code	16
 1366              		.thumb_func
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 52


 1367              		.type	Timer_Start, %function
 1368              	Timer_Start:
 1369              	.LFB2:
 248:.\Generated_Source\PSoC4/Timer.c **** {
 1370              		.loc 1 248 0
 1371              		.cfi_startproc
 1372 0000 10B5     		push	{r4, lr}
 1373              	.LCFI19:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 4, -8
 1376              		.cfi_offset 14, -4
 249:.\Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 1377              		.loc 1 249 0
 1378 0002 054C     		ldr	r4, .L103
 1379 0004 2378     		ldrb	r3, [r4]
 1380 0006 002B     		cmp	r3, #0
 1381 0008 03D1     		bne	.L101
 251:.\Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 1382              		.loc 1 251 0
 1383 000a FFF7FEFF 		bl	Timer_Init
 1384              	.LVL89:
 252:.\Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 1385              		.loc 1 252 0
 1386 000e 0120     		mov	r0, #1
 1387 0010 2070     		strb	r0, [r4]
 1388              	.L101:
 255:.\Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 1389              		.loc 1 255 0
 1390 0012 FFF7FEFF 		bl	Timer_Enable
 1391              	.LVL90:
 256:.\Generated_Source\PSoC4/Timer.c **** }
 1392              		.loc 1 256 0
 1393              		@ sp needed for prologue
 1394 0016 10BD     		pop	{r4, pc}
 1395              	.L104:
 1396              		.align	2
 1397              	.L103:
 1398 0018 00000000 		.word	.LANCHOR0
 1399              		.cfi_endproc
 1400              	.LFE2:
 1401              		.size	Timer_Start, .-Timer_Start
 1402              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1403              		.align	1
 1404              		.global	Timer_ReadStatus
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	Timer_ReadStatus, %function
 1408              	Timer_ReadStatus:
 1409              	.LFB34:
1279:.\Generated_Source\PSoC4/Timer.c **** {
 1410              		.loc 1 1279 0
 1411              		.cfi_startproc
1280:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1412              		.loc 1 1280 0
 1413 0000 034B     		ldr	r3, .L106
1281:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1414              		.loc 1 1281 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 53


 1415 0002 0121     		mov	r1, #1
1280:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1416              		.loc 1 1280 0
 1417 0004 1A68     		ldr	r2, [r3]
1281:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1418              		.loc 1 1281 0
 1419 0006 1868     		ldr	r0, [r3]
1280:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1420              		.loc 1 1280 0
 1421 0008 930F     		lsr	r3, r2, #30
1281:.\Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1422              		.loc 1 1281 0
 1423 000a 0840     		and	r0, r1
1280:.\Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1424              		.loc 1 1280 0
 1425 000c 1843     		orr	r0, r3
1282:.\Generated_Source\PSoC4/Timer.c **** }
 1426              		.loc 1 1282 0
 1427              		@ sp needed for prologue
 1428 000e 7047     		bx	lr
 1429              	.L107:
 1430              		.align	2
 1431              	.L106:
 1432 0010 04010540 		.word	1074069764
 1433              		.cfi_endproc
 1434              	.LFE34:
 1435              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1436              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1437              		.align	1
 1438              		.global	Timer_SetInterruptMode
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	Timer_SetInterruptMode, %function
 1442              	Timer_SetInterruptMode:
 1443              	.LFB35:
1304:.\Generated_Source\PSoC4/Timer.c **** {
 1444              		.loc 1 1304 0
 1445              		.cfi_startproc
 1446              	.LVL91:
 1447              		.loc 1 1305 0
 1448 0000 014B     		ldr	r3, .L109
1306:.\Generated_Source\PSoC4/Timer.c **** }
 1449              		.loc 1 1306 0
 1450              		@ sp needed for prologue
1305:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1451              		.loc 1 1305 0
 1452 0002 1860     		str	r0, [r3]
 1453              		.loc 1 1306 0
 1454 0004 7047     		bx	lr
 1455              	.L110:
 1456 0006 C046     		.align	2
 1457              	.L109:
 1458 0008 38010540 		.word	1074069816
 1459              		.cfi_endproc
 1460              	.LFE35:
 1461              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1462              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 54


 1463              		.align	1
 1464              		.global	Timer_GetInterruptSourceMasked
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	Timer_GetInterruptSourceMasked, %function
 1468              	Timer_GetInterruptSourceMasked:
 1469              	.LFB36:
1307:.\Generated_Source\PSoC4/Timer.c **** 
1308:.\Generated_Source\PSoC4/Timer.c **** 
1309:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/Timer.c **** *
1313:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1314:.\Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/Timer.c **** *
1316:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1317:.\Generated_Source\PSoC4/Timer.c **** *   None
1318:.\Generated_Source\PSoC4/Timer.c **** *
1319:.\Generated_Source\PSoC4/Timer.c **** * Return:
1320:.\Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1322:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/Timer.c **** *
1325:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/Timer.c **** {
 1470              		.loc 1 1327 0
 1471              		.cfi_startproc
1328:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1472              		.loc 1 1328 0
 1473 0000 014B     		ldr	r3, .L112
1329:.\Generated_Source\PSoC4/Timer.c **** }
 1474              		.loc 1 1329 0
 1475              		@ sp needed for prologue
1328:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1476              		.loc 1 1328 0
 1477 0002 1868     		ldr	r0, [r3]
 1478              		.loc 1 1329 0
 1479 0004 7047     		bx	lr
 1480              	.L113:
 1481 0006 C046     		.align	2
 1482              	.L112:
 1483 0008 3C010540 		.word	1074069820
 1484              		.cfi_endproc
 1485              	.LFE36:
 1486              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1487              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1488              		.align	1
 1489              		.global	Timer_GetInterruptSource
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	Timer_GetInterruptSource, %function
 1493              	Timer_GetInterruptSource:
 1494              	.LFB37:
1330:.\Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 55


1331:.\Generated_Source\PSoC4/Timer.c **** 
1332:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1334:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/Timer.c **** *
1336:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1337:.\Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/Timer.c **** *
1339:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1340:.\Generated_Source\PSoC4/Timer.c **** *  None
1341:.\Generated_Source\PSoC4/Timer.c **** *
1342:.\Generated_Source\PSoC4/Timer.c **** * Return:
1343:.\Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1345:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/Timer.c **** *
1348:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/Timer.c **** {
 1495              		.loc 1 1350 0
 1496              		.cfi_startproc
1351:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1497              		.loc 1 1351 0
 1498 0000 014B     		ldr	r3, .L115
1352:.\Generated_Source\PSoC4/Timer.c **** }
 1499              		.loc 1 1352 0
 1500              		@ sp needed for prologue
1351:.\Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1501              		.loc 1 1351 0
 1502 0002 1868     		ldr	r0, [r3]
 1503              		.loc 1 1352 0
 1504 0004 7047     		bx	lr
 1505              	.L116:
 1506 0006 C046     		.align	2
 1507              	.L115:
 1508 0008 30010540 		.word	1074069808
 1509              		.cfi_endproc
 1510              	.LFE37:
 1511              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1512              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1513              		.align	1
 1514              		.global	Timer_ClearInterrupt
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	Timer_ClearInterrupt, %function
 1518              	Timer_ClearInterrupt:
 1519              	.LFB38:
1353:.\Generated_Source\PSoC4/Timer.c **** 
1354:.\Generated_Source\PSoC4/Timer.c **** 
1355:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1357:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/Timer.c **** *
1359:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1360:.\Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 56


1362:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1363:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1365:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/Timer.c **** *
1368:.\Generated_Source\PSoC4/Timer.c **** * Return:
1369:.\Generated_Source\PSoC4/Timer.c **** *  None
1370:.\Generated_Source\PSoC4/Timer.c **** *
1371:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/Timer.c **** {
 1520              		.loc 1 1373 0
 1521              		.cfi_startproc
 1522              	.LVL92:
1374:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1523              		.loc 1 1374 0
 1524 0000 014B     		ldr	r3, .L118
1375:.\Generated_Source\PSoC4/Timer.c **** }
 1525              		.loc 1 1375 0
 1526              		@ sp needed for prologue
1374:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1527              		.loc 1 1374 0
 1528 0002 1860     		str	r0, [r3]
 1529              		.loc 1 1375 0
 1530 0004 7047     		bx	lr
 1531              	.L119:
 1532 0006 C046     		.align	2
 1533              	.L118:
 1534 0008 30010540 		.word	1074069808
 1535              		.cfi_endproc
 1536              	.LFE38:
 1537              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1538              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1539              		.align	1
 1540              		.global	Timer_SetInterrupt
 1541              		.code	16
 1542              		.thumb_func
 1543              		.type	Timer_SetInterrupt, %function
 1544              	Timer_SetInterrupt:
 1545              	.LFB39:
1376:.\Generated_Source\PSoC4/Timer.c **** 
1377:.\Generated_Source\PSoC4/Timer.c **** 
1378:.\Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1380:.\Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/Timer.c **** *
1382:.\Generated_Source\PSoC4/Timer.c **** * Summary:
1383:.\Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/Timer.c **** *
1385:.\Generated_Source\PSoC4/Timer.c **** * Parameters:
1386:.\Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/Timer.c **** *   Values:
1388:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/Timer.c **** *
1391:.\Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 57


1392:.\Generated_Source\PSoC4/Timer.c **** *  None
1393:.\Generated_Source\PSoC4/Timer.c **** *
1394:.\Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/Timer.c **** {
 1546              		.loc 1 1396 0
 1547              		.cfi_startproc
 1548              	.LVL93:
1397:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1549              		.loc 1 1397 0
 1550 0000 014B     		ldr	r3, .L121
1398:.\Generated_Source\PSoC4/Timer.c **** }
 1551              		.loc 1 1398 0
 1552              		@ sp needed for prologue
1397:.\Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1553              		.loc 1 1397 0
 1554 0002 1860     		str	r0, [r3]
 1555              		.loc 1 1398 0
 1556 0004 7047     		bx	lr
 1557              	.L122:
 1558 0006 C046     		.align	2
 1559              	.L121:
 1560 0008 34010540 		.word	1074069812
 1561              		.cfi_endproc
 1562              	.LFE39:
 1563              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1564              		.global	Timer_initVar
 1565              		.bss
 1566              		.set	.LANCHOR0,. + 0
 1567              		.type	Timer_initVar, %object
 1568              		.size	Timer_initVar, 1
 1569              	Timer_initVar:
 1570 0000 00       		.space	1
 1571              		.text
 1572              	.Letext0:
 1573              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1574              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1575              		.section	.debug_info,"",%progbits
 1576              	.Ldebug_info0:
 1577 0000 ED090000 		.4byte	0x9ed
 1578 0004 0200     		.2byte	0x2
 1579 0006 00000000 		.4byte	.Ldebug_abbrev0
 1580 000a 04       		.byte	0x4
 1581 000b 01       		.uleb128 0x1
 1582 000c E8030000 		.4byte	.LASF76
 1583 0010 01       		.byte	0x1
 1584 0011 C9010000 		.4byte	.LASF77
 1585 0015 D4020000 		.4byte	.LASF78
 1586 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 1587 001d 00000000 		.4byte	0
 1588 0021 00000000 		.4byte	0
 1589 0025 00000000 		.4byte	.Ldebug_line0
 1590 0029 02       		.uleb128 0x2
 1591 002a 01       		.byte	0x1
 1592 002b 06       		.byte	0x6
 1593 002c EA000000 		.4byte	.LASF0
 1594 0030 02       		.uleb128 0x2
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 58


 1595 0031 01       		.byte	0x1
 1596 0032 08       		.byte	0x8
 1597 0033 31040000 		.4byte	.LASF1
 1598 0037 02       		.uleb128 0x2
 1599 0038 02       		.byte	0x2
 1600 0039 05       		.byte	0x5
 1601 003a 50040000 		.4byte	.LASF2
 1602 003e 02       		.uleb128 0x2
 1603 003f 02       		.byte	0x2
 1604 0040 07       		.byte	0x7
 1605 0041 4A020000 		.4byte	.LASF3
 1606 0045 02       		.uleb128 0x2
 1607 0046 04       		.byte	0x4
 1608 0047 05       		.byte	0x5
 1609 0048 19010000 		.4byte	.LASF4
 1610 004c 02       		.uleb128 0x2
 1611 004d 04       		.byte	0x4
 1612 004e 07       		.byte	0x7
 1613 004f 0B020000 		.4byte	.LASF5
 1614 0053 02       		.uleb128 0x2
 1615 0054 08       		.byte	0x8
 1616 0055 05       		.byte	0x5
 1617 0056 DC000000 		.4byte	.LASF6
 1618 005a 02       		.uleb128 0x2
 1619 005b 08       		.byte	0x8
 1620 005c 07       		.byte	0x7
 1621 005d 94000000 		.4byte	.LASF7
 1622 0061 03       		.uleb128 0x3
 1623 0062 04       		.byte	0x4
 1624 0063 05       		.byte	0x5
 1625 0064 696E7400 		.ascii	"int\000"
 1626 0068 02       		.uleb128 0x2
 1627 0069 04       		.byte	0x4
 1628 006a 07       		.byte	0x7
 1629 006b EA010000 		.4byte	.LASF8
 1630 006f 04       		.uleb128 0x4
 1631 0070 49010000 		.4byte	.LASF9
 1632 0074 02       		.byte	0x2
 1633 0075 5B       		.byte	0x5b
 1634 0076 30000000 		.4byte	0x30
 1635 007a 04       		.uleb128 0x4
 1636 007b 6D010000 		.4byte	.LASF10
 1637 007f 02       		.byte	0x2
 1638 0080 5D       		.byte	0x5d
 1639 0081 4C000000 		.4byte	0x4c
 1640 0085 02       		.uleb128 0x2
 1641 0086 04       		.byte	0x4
 1642 0087 04       		.byte	0x4
 1643 0088 8C030000 		.4byte	.LASF11
 1644 008c 02       		.uleb128 0x2
 1645 008d 08       		.byte	0x8
 1646 008e 04       		.byte	0x4
 1647 008f 4F010000 		.4byte	.LASF12
 1648 0093 02       		.uleb128 0x2
 1649 0094 01       		.byte	0x1
 1650 0095 08       		.byte	0x8
 1651 0096 9B040000 		.4byte	.LASF13
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 59


 1652 009a 04       		.uleb128 0x4
 1653 009b BA020000 		.4byte	.LASF14
 1654 009f 02       		.byte	0x2
 1655 00a0 F2       		.byte	0xf2
 1656 00a1 A5000000 		.4byte	0xa5
 1657 00a5 05       		.uleb128 0x5
 1658 00a6 7A000000 		.4byte	0x7a
 1659 00aa 02       		.uleb128 0x2
 1660 00ab 04       		.byte	0x4
 1661 00ac 07       		.byte	0x7
 1662 00ad 31030000 		.4byte	.LASF15
 1663 00b1 06       		.uleb128 0x6
 1664 00b2 01       		.byte	0x1
 1665 00b3 56010000 		.4byte	.LASF16
 1666 00b7 01       		.byte	0x1
 1667 00b8 1705     		.2byte	0x517
 1668 00ba 01       		.byte	0x1
 1669 00bb 01       		.byte	0x1
 1670 00bc CD000000 		.4byte	0xcd
 1671 00c0 07       		.uleb128 0x7
 1672 00c1 5A040000 		.4byte	.LASF18
 1673 00c5 01       		.byte	0x1
 1674 00c6 1705     		.2byte	0x517
 1675 00c8 7A000000 		.4byte	0x7a
 1676 00cc 00       		.byte	0
 1677 00cd 06       		.uleb128 0x6
 1678 00ce 01       		.byte	0x1
 1679 00cf 4C000000 		.4byte	.LASF17
 1680 00d3 01       		.byte	0x1
 1681 00d4 C602     		.2byte	0x2c6
 1682 00d6 01       		.byte	0x1
 1683 00d7 01       		.byte	0x1
 1684 00d8 E9000000 		.4byte	0xe9
 1685 00dc 07       		.uleb128 0x7
 1686 00dd 71000000 		.4byte	.LASF19
 1687 00e1 01       		.byte	0x1
 1688 00e2 C602     		.2byte	0x2c6
 1689 00e4 7A000000 		.4byte	0x7a
 1690 00e8 00       		.byte	0
 1691 00e9 06       		.uleb128 0x6
 1692 00ea 01       		.byte	0x1
 1693 00eb 74010000 		.4byte	.LASF20
 1694 00ef 01       		.byte	0x1
 1695 00f0 5A03     		.2byte	0x35a
 1696 00f2 01       		.byte	0x1
 1697 00f3 01       		.byte	0x1
 1698 00f4 05010000 		.4byte	0x105
 1699 00f8 07       		.uleb128 0x7
 1700 00f9 71030000 		.4byte	.LASF21
 1701 00fd 01       		.byte	0x1
 1702 00fe 5A03     		.2byte	0x35a
 1703 0100 7A000000 		.4byte	0x7a
 1704 0104 00       		.byte	0
 1705 0105 08       		.uleb128 0x8
 1706 0106 01       		.byte	0x1
 1707 0107 7B040000 		.4byte	.LASF22
 1708 010b 01       		.byte	0x1
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 60


 1709 010c 27       		.byte	0x27
 1710 010d 01       		.byte	0x1
 1711 010e 00000000 		.4byte	.LFB0
 1712 0112 34000000 		.4byte	.LFE0
 1713 0116 02       		.byte	0x2
 1714 0117 7D       		.byte	0x7d
 1715 0118 00       		.sleb128 0
 1716 0119 01       		.byte	0x1
 1717 011a 69010000 		.4byte	0x169
 1718 011e 09       		.uleb128 0x9
 1719 011f B1000000 		.4byte	0xb1
 1720 0123 08000000 		.4byte	.LBB8
 1721 0127 00000000 		.4byte	.Ldebug_ranges0+0
 1722 012b 01       		.byte	0x1
 1723 012c 7B       		.byte	0x7b
 1724 012d 38010000 		.4byte	0x138
 1725 0131 0A       		.uleb128 0xa
 1726 0132 C0000000 		.4byte	0xc0
 1727 0136 01       		.byte	0x1
 1728 0137 00       		.byte	0
 1729 0138 09       		.uleb128 0x9
 1730 0139 CD000000 		.4byte	0xcd
 1731 013d 12000000 		.4byte	.LBB14
 1732 0141 20000000 		.4byte	.Ldebug_ranges0+0x20
 1733 0145 01       		.byte	0x1
 1734 0146 80       		.byte	0x80
 1735 0147 52010000 		.4byte	0x152
 1736 014b 0A       		.uleb128 0xa
 1737 014c DC000000 		.4byte	0xdc
 1738 0150 64       		.byte	0x64
 1739 0151 00       		.byte	0
 1740 0152 0B       		.uleb128 0xb
 1741 0153 E9000000 		.4byte	0xe9
 1742 0157 14000000 		.4byte	.LBB18
 1743 015b 40000000 		.4byte	.Ldebug_ranges0+0x40
 1744 015f 01       		.byte	0x1
 1745 0160 87       		.byte	0x87
 1746 0161 0A       		.uleb128 0xa
 1747 0162 F8000000 		.4byte	0xf8
 1748 0166 32       		.byte	0x32
 1749 0167 00       		.byte	0
 1750 0168 00       		.byte	0
 1751 0169 0C       		.uleb128 0xc
 1752 016a 01       		.byte	0x1
 1753 016b 82020000 		.4byte	.LASF23
 1754 016f 01       		.byte	0x1
 1755 0170 1101     		.2byte	0x111
 1756 0172 01       		.byte	0x1
 1757 0173 00000000 		.4byte	.LFB3
 1758 0177 1C000000 		.4byte	.LFE3
 1759 017b 00000000 		.4byte	.LLST0
 1760 017f 01       		.byte	0x1
 1761 0180 A7010000 		.4byte	0x1a7
 1762 0184 0D       		.uleb128 0xd
 1763 0185 E1040000 		.4byte	.LASF25
 1764 0189 01       		.byte	0x1
 1765 018a 1301     		.2byte	0x113
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 61


 1766 018c 6F000000 		.4byte	0x6f
 1767 0190 20000000 		.4byte	.LLST1
 1768 0194 0E       		.uleb128 0xe
 1769 0195 06000000 		.4byte	.LVL3
 1770 0199 D2090000 		.4byte	0x9d2
 1771 019d 0E       		.uleb128 0xe
 1772 019e 14000000 		.4byte	.LVL4
 1773 01a2 E0090000 		.4byte	0x9e0
 1774 01a6 00       		.byte	0
 1775 01a7 0C       		.uleb128 0xc
 1776 01a8 01       		.byte	0x1
 1777 01a9 78000000 		.4byte	.LASF24
 1778 01ad 01       		.byte	0x1
 1779 01ae 3601     		.2byte	0x136
 1780 01b0 01       		.byte	0x1
 1781 01b1 00000000 		.4byte	.LFB4
 1782 01b5 28000000 		.4byte	.LFE4
 1783 01b9 33000000 		.4byte	.LLST2
 1784 01bd 01       		.byte	0x1
 1785 01be F5010000 		.4byte	0x1f5
 1786 01c2 0F       		.uleb128 0xf
 1787 01c3 A0040000 		.4byte	.LASF27
 1788 01c7 01       		.byte	0x1
 1789 01c8 3601     		.2byte	0x136
 1790 01ca 7A000000 		.4byte	0x7a
 1791 01ce 53000000 		.4byte	.LLST3
 1792 01d2 0D       		.uleb128 0xd
 1793 01d3 E1040000 		.4byte	.LASF25
 1794 01d7 01       		.byte	0x1
 1795 01d8 3801     		.2byte	0x138
 1796 01da 6F000000 		.4byte	0x6f
 1797 01de 7F000000 		.4byte	.LLST4
 1798 01e2 0E       		.uleb128 0xe
 1799 01e3 08000000 		.4byte	.LVL6
 1800 01e7 D2090000 		.4byte	0x9d2
 1801 01eb 0E       		.uleb128 0xe
 1802 01ec 1C000000 		.4byte	.LVL8
 1803 01f0 E0090000 		.4byte	0x9e0
 1804 01f4 00       		.byte	0
 1805 01f5 0C       		.uleb128 0xc
 1806 01f6 01       		.byte	0x1
 1807 01f7 F6000000 		.4byte	.LASF26
 1808 01fb 01       		.byte	0x1
 1809 01fc 5701     		.2byte	0x157
 1810 01fe 01       		.byte	0x1
 1811 01ff 00000000 		.4byte	.LFB5
 1812 0203 28000000 		.4byte	.LFE5
 1813 0207 92000000 		.4byte	.LLST5
 1814 020b 01       		.byte	0x1
 1815 020c 43020000 		.4byte	0x243
 1816 0210 0F       		.uleb128 0xf
 1817 0211 D5000000 		.4byte	.LASF28
 1818 0215 01       		.byte	0x1
 1819 0216 5701     		.2byte	0x157
 1820 0218 7A000000 		.4byte	0x7a
 1821 021c B2000000 		.4byte	.LLST6
 1822 0220 0D       		.uleb128 0xd
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 62


 1823 0221 E1040000 		.4byte	.LASF25
 1824 0225 01       		.byte	0x1
 1825 0226 5901     		.2byte	0x159
 1826 0228 6F000000 		.4byte	0x6f
 1827 022c DE000000 		.4byte	.LLST7
 1828 0230 0E       		.uleb128 0xe
 1829 0231 08000000 		.4byte	.LVL10
 1830 0235 D2090000 		.4byte	0x9d2
 1831 0239 0E       		.uleb128 0xe
 1832 023a 1C000000 		.4byte	.LVL12
 1833 023e E0090000 		.4byte	0x9e0
 1834 0242 00       		.byte	0
 1835 0243 0C       		.uleb128 0xc
 1836 0244 01       		.byte	0x1
 1837 0245 68040000 		.4byte	.LASF29
 1838 0249 01       		.byte	0x1
 1839 024a 7C01     		.2byte	0x17c
 1840 024c 01       		.byte	0x1
 1841 024d 00000000 		.4byte	.LFB6
 1842 0251 28000000 		.4byte	.LFE6
 1843 0255 F1000000 		.4byte	.LLST8
 1844 0259 01       		.byte	0x1
 1845 025a 91020000 		.4byte	0x291
 1846 025e 0F       		.uleb128 0xf
 1847 025f 92030000 		.4byte	.LASF30
 1848 0263 01       		.byte	0x1
 1849 0264 7C01     		.2byte	0x17c
 1850 0266 7A000000 		.4byte	0x7a
 1851 026a 11010000 		.4byte	.LLST9
 1852 026e 0D       		.uleb128 0xd
 1853 026f E1040000 		.4byte	.LASF25
 1854 0273 01       		.byte	0x1
 1855 0274 7E01     		.2byte	0x17e
 1856 0276 6F000000 		.4byte	0x6f
 1857 027a 3D010000 		.4byte	.LLST10
 1858 027e 0E       		.uleb128 0xe
 1859 027f 08000000 		.4byte	.LVL14
 1860 0283 D2090000 		.4byte	0x9d2
 1861 0287 0E       		.uleb128 0xe
 1862 0288 1C000000 		.4byte	.LVL16
 1863 028c E0090000 		.4byte	0x9e0
 1864 0290 00       		.byte	0
 1865 0291 0C       		.uleb128 0xc
 1866 0292 01       		.byte	0x1
 1867 0293 07050000 		.4byte	.LASF31
 1868 0297 01       		.byte	0x1
 1869 0298 9C01     		.2byte	0x19c
 1870 029a 01       		.byte	0x1
 1871 029b 00000000 		.4byte	.LFB7
 1872 029f 2C000000 		.4byte	.LFE7
 1873 02a3 50010000 		.4byte	.LLST11
 1874 02a7 01       		.byte	0x1
 1875 02a8 DF020000 		.4byte	0x2df
 1876 02ac 0F       		.uleb128 0xf
 1877 02ad 8D020000 		.4byte	.LASF32
 1878 02b1 01       		.byte	0x1
 1879 02b2 9C01     		.2byte	0x19c
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 63


 1880 02b4 7A000000 		.4byte	0x7a
 1881 02b8 70010000 		.4byte	.LLST12
 1882 02bc 0D       		.uleb128 0xd
 1883 02bd E1040000 		.4byte	.LASF25
 1884 02c1 01       		.byte	0x1
 1885 02c2 9E01     		.2byte	0x19e
 1886 02c4 6F000000 		.4byte	0x6f
 1887 02c8 9C010000 		.4byte	.LLST13
 1888 02cc 0E       		.uleb128 0xe
 1889 02cd 08000000 		.4byte	.LVL18
 1890 02d1 D2090000 		.4byte	0x9d2
 1891 02d5 0E       		.uleb128 0xe
 1892 02d6 22000000 		.4byte	.LVL20
 1893 02da E0090000 		.4byte	0x9e0
 1894 02de 00       		.byte	0
 1895 02df 10       		.uleb128 0x10
 1896 02e0 01       		.byte	0x1
 1897 02e1 42050000 		.4byte	.LASF33
 1898 02e5 01       		.byte	0x1
 1899 02e6 D201     		.2byte	0x1d2
 1900 02e8 01       		.byte	0x1
 1901 02e9 00000000 		.4byte	.LFB8
 1902 02ed 10000000 		.4byte	.LFE8
 1903 02f1 02       		.byte	0x2
 1904 02f2 7D       		.byte	0x7d
 1905 02f3 00       		.sleb128 0
 1906 02f4 01       		.byte	0x1
 1907 02f5 0A030000 		.4byte	0x30a
 1908 02f9 0F       		.uleb128 0xf
 1909 02fa 1D020000 		.4byte	.LASF34
 1910 02fe 01       		.byte	0x1
 1911 02ff D201     		.2byte	0x1d2
 1912 0301 7A000000 		.4byte	0x7a
 1913 0305 AF010000 		.4byte	.LLST14
 1914 0309 00       		.byte	0
 1915 030a 0C       		.uleb128 0xc
 1916 030b 01       		.byte	0x1
 1917 030c C0000000 		.4byte	.LASF35
 1918 0310 01       		.byte	0x1
 1919 0311 F601     		.2byte	0x1f6
 1920 0313 01       		.byte	0x1
 1921 0314 00000000 		.4byte	.LFB9
 1922 0318 28000000 		.4byte	.LFE9
 1923 031c D0010000 		.4byte	.LLST15
 1924 0320 01       		.byte	0x1
 1925 0321 58030000 		.4byte	0x358
 1926 0325 0F       		.uleb128 0xf
 1927 0326 4F030000 		.4byte	.LASF36
 1928 032a 01       		.byte	0x1
 1929 032b F601     		.2byte	0x1f6
 1930 032d 7A000000 		.4byte	0x7a
 1931 0331 F0010000 		.4byte	.LLST16
 1932 0335 0D       		.uleb128 0xd
 1933 0336 E1040000 		.4byte	.LASF25
 1934 033a 01       		.byte	0x1
 1935 033b F801     		.2byte	0x1f8
 1936 033d 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 64


 1937 0341 1C020000 		.4byte	.LLST17
 1938 0345 0E       		.uleb128 0xe
 1939 0346 08000000 		.4byte	.LVL24
 1940 034a D2090000 		.4byte	0x9d2
 1941 034e 0E       		.uleb128 0xe
 1942 034f 22000000 		.4byte	.LVL26
 1943 0353 E0090000 		.4byte	0x9e0
 1944 0357 00       		.byte	0
 1945 0358 0C       		.uleb128 0xc
 1946 0359 01       		.byte	0x1
 1947 035a 00000000 		.4byte	.LASF37
 1948 035e 01       		.byte	0x1
 1949 035f 1802     		.2byte	0x218
 1950 0361 01       		.byte	0x1
 1951 0362 00000000 		.4byte	.LFB10
 1952 0366 28000000 		.4byte	.LFE10
 1953 036a 2F020000 		.4byte	.LLST18
 1954 036e 01       		.byte	0x1
 1955 036f A6030000 		.4byte	0x3a6
 1956 0373 0F       		.uleb128 0xf
 1957 0374 3F040000 		.4byte	.LASF38
 1958 0378 01       		.byte	0x1
 1959 0379 1802     		.2byte	0x218
 1960 037b 7A000000 		.4byte	0x7a
 1961 037f 4F020000 		.4byte	.LLST19
 1962 0383 0D       		.uleb128 0xd
 1963 0384 E1040000 		.4byte	.LASF25
 1964 0388 01       		.byte	0x1
 1965 0389 1A02     		.2byte	0x21a
 1966 038b 6F000000 		.4byte	0x6f
 1967 038f 7B020000 		.4byte	.LLST20
 1968 0393 0E       		.uleb128 0xe
 1969 0394 08000000 		.4byte	.LVL28
 1970 0398 D2090000 		.4byte	0x9d2
 1971 039c 0E       		.uleb128 0xe
 1972 039d 22000000 		.4byte	.LVL30
 1973 03a1 E0090000 		.4byte	0x9e0
 1974 03a5 00       		.byte	0
 1975 03a6 0C       		.uleb128 0xc
 1976 03a7 01       		.byte	0x1
 1977 03a8 AB000000 		.4byte	.LASF39
 1978 03ac 01       		.byte	0x1
 1979 03ad 3902     		.2byte	0x239
 1980 03af 01       		.byte	0x1
 1981 03b0 00000000 		.4byte	.LFB11
 1982 03b4 2C000000 		.4byte	.LFE11
 1983 03b8 8E020000 		.4byte	.LLST21
 1984 03bc 01       		.byte	0x1
 1985 03bd F4030000 		.4byte	0x3f4
 1986 03c1 0F       		.uleb128 0xf
 1987 03c2 AA010000 		.4byte	.LASF40
 1988 03c6 01       		.byte	0x1
 1989 03c7 3902     		.2byte	0x239
 1990 03c9 7A000000 		.4byte	0x7a
 1991 03cd AE020000 		.4byte	.LLST22
 1992 03d1 0D       		.uleb128 0xd
 1993 03d2 E1040000 		.4byte	.LASF25
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 65


 1994 03d6 01       		.byte	0x1
 1995 03d7 3B02     		.2byte	0x23b
 1996 03d9 6F000000 		.4byte	0x6f
 1997 03dd DA020000 		.4byte	.LLST23
 1998 03e1 0E       		.uleb128 0xe
 1999 03e2 08000000 		.4byte	.LVL32
 2000 03e6 D2090000 		.4byte	0x9d2
 2001 03ea 0E       		.uleb128 0xe
 2002 03eb 20000000 		.4byte	.LVL34
 2003 03ef E0090000 		.4byte	0x9e0
 2004 03f3 00       		.byte	0
 2005 03f4 0C       		.uleb128 0xc
 2006 03f5 01       		.byte	0x1
 2007 03f6 5E030000 		.4byte	.LASF41
 2008 03fa 01       		.byte	0x1
 2009 03fb 5A02     		.2byte	0x25a
 2010 03fd 01       		.byte	0x1
 2011 03fe 00000000 		.4byte	.LFB12
 2012 0402 28000000 		.4byte	.LFE12
 2013 0406 ED020000 		.4byte	.LLST24
 2014 040a 01       		.byte	0x1
 2015 040b 42040000 		.4byte	0x442
 2016 040f 0F       		.uleb128 0xf
 2017 0410 93010000 		.4byte	.LASF42
 2018 0414 01       		.byte	0x1
 2019 0415 5A02     		.2byte	0x25a
 2020 0417 7A000000 		.4byte	0x7a
 2021 041b 0D030000 		.4byte	.LLST25
 2022 041f 0D       		.uleb128 0xd
 2023 0420 E1040000 		.4byte	.LASF25
 2024 0424 01       		.byte	0x1
 2025 0425 5C02     		.2byte	0x25c
 2026 0427 6F000000 		.4byte	0x6f
 2027 042b 39030000 		.4byte	.LLST26
 2028 042f 0E       		.uleb128 0xe
 2029 0430 08000000 		.4byte	.LVL36
 2030 0434 D2090000 		.4byte	0x9d2
 2031 0438 0E       		.uleb128 0xe
 2032 0439 1C000000 		.4byte	.LVL38
 2033 043d E0090000 		.4byte	0x9e0
 2034 0441 00       		.byte	0
 2035 0442 10       		.uleb128 0x10
 2036 0443 01       		.byte	0x1
 2037 0444 5D020000 		.4byte	.LASF43
 2038 0448 01       		.byte	0x1
 2039 0449 7802     		.2byte	0x278
 2040 044b 01       		.byte	0x1
 2041 044c 00000000 		.4byte	.LFB13
 2042 0450 0C000000 		.4byte	.LFE13
 2043 0454 02       		.byte	0x2
 2044 0455 7D       		.byte	0x7d
 2045 0456 00       		.sleb128 0
 2046 0457 01       		.byte	0x1
 2047 0458 6D040000 		.4byte	0x46d
 2048 045c 0F       		.uleb128 0xf
 2049 045d 17000000 		.4byte	.LASF44
 2050 0461 01       		.byte	0x1
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 66


 2051 0462 7802     		.2byte	0x278
 2052 0464 7A000000 		.4byte	0x7a
 2053 0468 4C030000 		.4byte	.LLST27
 2054 046c 00       		.byte	0
 2055 046d 11       		.uleb128 0x11
 2056 046e 01       		.byte	0x1
 2057 046f 70020000 		.4byte	.LASF47
 2058 0473 01       		.byte	0x1
 2059 0474 8C02     		.2byte	0x28c
 2060 0476 01       		.byte	0x1
 2061 0477 7A000000 		.4byte	0x7a
 2062 047b 00000000 		.4byte	.LFB14
 2063 047f 0C000000 		.4byte	.LFE14
 2064 0483 02       		.byte	0x2
 2065 0484 7D       		.byte	0x7d
 2066 0485 00       		.sleb128 0
 2067 0486 01       		.byte	0x1
 2068 0487 0C       		.uleb128 0xc
 2069 0488 01       		.byte	0x1
 2070 0489 86040000 		.4byte	.LASF45
 2071 048d 01       		.byte	0x1
 2072 048e A902     		.2byte	0x2a9
 2073 0490 01       		.byte	0x1
 2074 0491 00000000 		.4byte	.LFB15
 2075 0495 28000000 		.4byte	.LFE15
 2076 0499 6D030000 		.4byte	.LLST28
 2077 049d 01       		.byte	0x1
 2078 049e D5040000 		.4byte	0x4d5
 2079 04a2 0F       		.uleb128 0xf
 2080 04a3 B9040000 		.4byte	.LASF46
 2081 04a7 01       		.byte	0x1
 2082 04a8 A902     		.2byte	0x2a9
 2083 04aa 7A000000 		.4byte	0x7a
 2084 04ae 8D030000 		.4byte	.LLST29
 2085 04b2 0D       		.uleb128 0xd
 2086 04b3 E1040000 		.4byte	.LASF25
 2087 04b7 01       		.byte	0x1
 2088 04b8 AB02     		.2byte	0x2ab
 2089 04ba 6F000000 		.4byte	0x6f
 2090 04be B9030000 		.4byte	.LLST30
 2091 04c2 0E       		.uleb128 0xe
 2092 04c3 08000000 		.4byte	.LVL42
 2093 04c7 D2090000 		.4byte	0x9d2
 2094 04cb 0E       		.uleb128 0xe
 2095 04cc 1C000000 		.4byte	.LVL44
 2096 04d0 E0090000 		.4byte	0x9e0
 2097 04d4 00       		.byte	0
 2098 04d5 12       		.uleb128 0x12
 2099 04d6 CD000000 		.4byte	0xcd
 2100 04da 00000000 		.4byte	.LFB16
 2101 04de 0C000000 		.4byte	.LFE16
 2102 04e2 02       		.byte	0x2
 2103 04e3 7D       		.byte	0x7d
 2104 04e4 00       		.sleb128 0
 2105 04e5 01       		.byte	0x1
 2106 04e6 F4040000 		.4byte	0x4f4
 2107 04ea 13       		.uleb128 0x13
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 67


 2108 04eb DC000000 		.4byte	0xdc
 2109 04ef CC030000 		.4byte	.LLST31
 2110 04f3 00       		.byte	0
 2111 04f4 11       		.uleb128 0x11
 2112 04f5 01       		.byte	0x1
 2113 04f6 C5040000 		.4byte	.LASF48
 2114 04fa 01       		.byte	0x1
 2115 04fb DA02     		.2byte	0x2da
 2116 04fd 01       		.byte	0x1
 2117 04fe 7A000000 		.4byte	0x7a
 2118 0502 00000000 		.4byte	.LFB17
 2119 0506 0C000000 		.4byte	.LFE17
 2120 050a 02       		.byte	0x2
 2121 050b 7D       		.byte	0x7d
 2122 050c 00       		.sleb128 0
 2123 050d 01       		.byte	0x1
 2124 050e 0C       		.uleb128 0xc
 2125 050f 01       		.byte	0x1
 2126 0510 1C030000 		.4byte	.LASF49
 2127 0514 01       		.byte	0x1
 2128 0515 F402     		.2byte	0x2f4
 2129 0517 01       		.byte	0x1
 2130 0518 00000000 		.4byte	.LFB18
 2131 051c 24000000 		.4byte	.LFE18
 2132 0520 ED030000 		.4byte	.LLST32
 2133 0524 01       		.byte	0x1
 2134 0525 5C050000 		.4byte	0x55c
 2135 0529 0F       		.uleb128 0xf
 2136 052a 2D050000 		.4byte	.LASF50
 2137 052e 01       		.byte	0x1
 2138 052f F402     		.2byte	0x2f4
 2139 0531 7A000000 		.4byte	0x7a
 2140 0535 0D040000 		.4byte	.LLST33
 2141 0539 0D       		.uleb128 0xd
 2142 053a E1040000 		.4byte	.LASF25
 2143 053e 01       		.byte	0x1
 2144 053f F602     		.2byte	0x2f6
 2145 0541 6F000000 		.4byte	0x6f
 2146 0545 39040000 		.4byte	.LLST34
 2147 0549 0E       		.uleb128 0xe
 2148 054a 08000000 		.4byte	.LVL48
 2149 054e D2090000 		.4byte	0x9d2
 2150 0552 0E       		.uleb128 0xe
 2151 0553 1E000000 		.4byte	.LVL49
 2152 0557 E0090000 		.4byte	0x9e0
 2153 055b 00       		.byte	0
 2154 055c 10       		.uleb128 0x10
 2155 055d 01       		.byte	0x1
 2156 055e 3A030000 		.4byte	.LASF51
 2157 0562 01       		.byte	0x1
 2158 0563 0F03     		.2byte	0x30f
 2159 0565 01       		.byte	0x1
 2160 0566 00000000 		.4byte	.LFB19
 2161 056a 0C000000 		.4byte	.LFE19
 2162 056e 02       		.byte	0x2
 2163 056f 7D       		.byte	0x7d
 2164 0570 00       		.sleb128 0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 68


 2165 0571 01       		.byte	0x1
 2166 0572 87050000 		.4byte	0x587
 2167 0576 0F       		.uleb128 0xf
 2168 0577 38050000 		.4byte	.LASF52
 2169 057b 01       		.byte	0x1
 2170 057c 0F03     		.2byte	0x30f
 2171 057e 7A000000 		.4byte	0x7a
 2172 0582 4C040000 		.4byte	.LLST35
 2173 0586 00       		.byte	0
 2174 0587 11       		.uleb128 0x11
 2175 0588 01       		.byte	0x1
 2176 0589 C0020000 		.4byte	.LASF53
 2177 058d 01       		.byte	0x1
 2178 058e 2303     		.2byte	0x323
 2179 0590 01       		.byte	0x1
 2180 0591 7A000000 		.4byte	0x7a
 2181 0595 00000000 		.4byte	.LFB20
 2182 0599 0C000000 		.4byte	.LFE20
 2183 059d 02       		.byte	0x2
 2184 059e 7D       		.byte	0x7d
 2185 059f 00       		.sleb128 0
 2186 05a0 01       		.byte	0x1
 2187 05a1 0C       		.uleb128 0xc
 2188 05a2 01       		.byte	0x1
 2189 05a3 AE030000 		.4byte	.LASF54
 2190 05a7 01       		.byte	0x1
 2191 05a8 3D03     		.2byte	0x33d
 2192 05aa 01       		.byte	0x1
 2193 05ab 00000000 		.4byte	.LFB21
 2194 05af 28000000 		.4byte	.LFE21
 2195 05b3 6D040000 		.4byte	.LLST36
 2196 05b7 01       		.byte	0x1
 2197 05b8 EF050000 		.4byte	0x5ef
 2198 05bc 0F       		.uleb128 0xf
 2199 05bd 2D050000 		.4byte	.LASF50
 2200 05c1 01       		.byte	0x1
 2201 05c2 3D03     		.2byte	0x33d
 2202 05c4 7A000000 		.4byte	0x7a
 2203 05c8 8D040000 		.4byte	.LLST37
 2204 05cc 0D       		.uleb128 0xd
 2205 05cd E1040000 		.4byte	.LASF25
 2206 05d1 01       		.byte	0x1
 2207 05d2 3F03     		.2byte	0x33f
 2208 05d4 6F000000 		.4byte	0x6f
 2209 05d8 B9040000 		.4byte	.LLST38
 2210 05dc 0E       		.uleb128 0xe
 2211 05dd 08000000 		.4byte	.LVL54
 2212 05e1 D2090000 		.4byte	0x9d2
 2213 05e5 0E       		.uleb128 0xe
 2214 05e6 22000000 		.4byte	.LVL56
 2215 05ea E0090000 		.4byte	0x9e0
 2216 05ee 00       		.byte	0
 2217 05ef 12       		.uleb128 0x12
 2218 05f0 E9000000 		.4byte	0xe9
 2219 05f4 00000000 		.4byte	.LFB22
 2220 05f8 0C000000 		.4byte	.LFE22
 2221 05fc 02       		.byte	0x2
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 69


 2222 05fd 7D       		.byte	0x7d
 2223 05fe 00       		.sleb128 0
 2224 05ff 01       		.byte	0x1
 2225 0600 0E060000 		.4byte	0x60e
 2226 0604 13       		.uleb128 0x13
 2227 0605 F8000000 		.4byte	0xf8
 2228 0609 CC040000 		.4byte	.LLST39
 2229 060d 00       		.byte	0
 2230 060e 11       		.uleb128 0x11
 2231 060f 01       		.byte	0x1
 2232 0610 98010000 		.4byte	.LASF55
 2233 0614 01       		.byte	0x1
 2234 0615 8403     		.2byte	0x384
 2235 0617 01       		.byte	0x1
 2236 0618 7A000000 		.4byte	0x7a
 2237 061c 00000000 		.4byte	.LFB23
 2238 0620 0C000000 		.4byte	.LFE23
 2239 0624 02       		.byte	0x2
 2240 0625 7D       		.byte	0x7d
 2241 0626 00       		.sleb128 0
 2242 0627 01       		.byte	0x1
 2243 0628 10       		.uleb128 0x10
 2244 0629 01       		.byte	0x1
 2245 062a B3010000 		.4byte	.LASF56
 2246 062e 01       		.byte	0x1
 2247 062f B003     		.2byte	0x3b0
 2248 0631 01       		.byte	0x1
 2249 0632 00000000 		.4byte	.LFB24
 2250 0636 0C000000 		.4byte	.LFE24
 2251 063a 02       		.byte	0x2
 2252 063b 7D       		.byte	0x7d
 2253 063c 00       		.sleb128 0
 2254 063d 01       		.byte	0x1
 2255 063e 53060000 		.4byte	0x653
 2256 0642 0F       		.uleb128 0xf
 2257 0643 D6040000 		.4byte	.LASF57
 2258 0647 01       		.byte	0x1
 2259 0648 B003     		.2byte	0x3b0
 2260 064a 7A000000 		.4byte	0x7a
 2261 064e ED040000 		.4byte	.LLST40
 2262 0652 00       		.byte	0
 2263 0653 11       		.uleb128 0x11
 2264 0654 01       		.byte	0x1
 2265 0655 53050000 		.4byte	.LASF58
 2266 0659 01       		.byte	0x1
 2267 065a DA03     		.2byte	0x3da
 2268 065c 01       		.byte	0x1
 2269 065d 7A000000 		.4byte	0x7a
 2270 0661 00000000 		.4byte	.LFB25
 2271 0665 0C000000 		.4byte	.LFE25
 2272 0669 02       		.byte	0x2
 2273 066a 7D       		.byte	0x7d
 2274 066b 00       		.sleb128 0
 2275 066c 01       		.byte	0x1
 2276 066d 11       		.uleb128 0x11
 2277 066e 01       		.byte	0x1
 2278 066f 22010000 		.4byte	.LASF59
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 70


 2279 0673 01       		.byte	0x1
 2280 0674 0604     		.2byte	0x406
 2281 0676 01       		.byte	0x1
 2282 0677 7A000000 		.4byte	0x7a
 2283 067b 00000000 		.4byte	.LFB26
 2284 067f 0C000000 		.4byte	.LFE26
 2285 0683 02       		.byte	0x2
 2286 0684 7D       		.byte	0x7d
 2287 0685 00       		.sleb128 0
 2288 0686 01       		.byte	0x1
 2289 0687 11       		.uleb128 0x11
 2290 0688 01       		.byte	0x1
 2291 0689 C2030000 		.4byte	.LASF60
 2292 068d 01       		.byte	0x1
 2293 068e 1B04     		.2byte	0x41b
 2294 0690 01       		.byte	0x1
 2295 0691 7A000000 		.4byte	0x7a
 2296 0695 00000000 		.4byte	.LFB27
 2297 0699 0C000000 		.4byte	.LFE27
 2298 069d 02       		.byte	0x2
 2299 069e 7D       		.byte	0x7d
 2300 069f 00       		.sleb128 0
 2301 06a0 01       		.byte	0x1
 2302 06a1 0C       		.uleb128 0xc
 2303 06a2 01       		.byte	0x1
 2304 06a3 F2040000 		.4byte	.LASF61
 2305 06a7 01       		.byte	0x1
 2306 06a8 3604     		.2byte	0x436
 2307 06aa 01       		.byte	0x1
 2308 06ab 00000000 		.4byte	.LFB28
 2309 06af 24000000 		.4byte	.LFE28
 2310 06b3 0E050000 		.4byte	.LLST41
 2311 06b7 01       		.byte	0x1
 2312 06b8 EF060000 		.4byte	0x6ef
 2313 06bc 0F       		.uleb128 0xf
 2314 06bd 87010000 		.4byte	.LASF62
 2315 06c1 01       		.byte	0x1
 2316 06c2 3604     		.2byte	0x436
 2317 06c4 7A000000 		.4byte	0x7a
 2318 06c8 2E050000 		.4byte	.LLST42
 2319 06cc 0D       		.uleb128 0xd
 2320 06cd E1040000 		.4byte	.LASF25
 2321 06d1 01       		.byte	0x1
 2322 06d2 3804     		.2byte	0x438
 2323 06d4 6F000000 		.4byte	0x6f
 2324 06d8 5A050000 		.4byte	.LLST43
 2325 06dc 0E       		.uleb128 0xe
 2326 06dd 08000000 		.4byte	.LVL62
 2327 06e1 D2090000 		.4byte	0x9d2
 2328 06e5 0E       		.uleb128 0xe
 2329 06e6 1C000000 		.4byte	.LVL64
 2330 06ea E0090000 		.4byte	0x9e0
 2331 06ee 00       		.byte	0
 2332 06ef 0C       		.uleb128 0xc
 2333 06f0 01       		.byte	0x1
 2334 06f1 A5040000 		.4byte	.LASF63
 2335 06f5 01       		.byte	0x1
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 71


 2336 06f6 5704     		.2byte	0x457
 2337 06f8 01       		.byte	0x1
 2338 06f9 00000000 		.4byte	.LFB29
 2339 06fd 24000000 		.4byte	.LFE29
 2340 0701 6D050000 		.4byte	.LLST44
 2341 0705 01       		.byte	0x1
 2342 0706 3D070000 		.4byte	0x73d
 2343 070a 0F       		.uleb128 0xf
 2344 070b 87010000 		.4byte	.LASF62
 2345 070f 01       		.byte	0x1
 2346 0710 5704     		.2byte	0x457
 2347 0712 7A000000 		.4byte	0x7a
 2348 0716 8D050000 		.4byte	.LLST45
 2349 071a 0D       		.uleb128 0xd
 2350 071b E1040000 		.4byte	.LASF25
 2351 071f 01       		.byte	0x1
 2352 0720 5904     		.2byte	0x459
 2353 0722 6F000000 		.4byte	0x6f
 2354 0726 B9050000 		.4byte	.LLST46
 2355 072a 0E       		.uleb128 0xe
 2356 072b 08000000 		.4byte	.LVL66
 2357 072f D2090000 		.4byte	0x9d2
 2358 0733 0E       		.uleb128 0xe
 2359 0734 1E000000 		.4byte	.LVL68
 2360 0738 E0090000 		.4byte	0x9e0
 2361 073c 00       		.byte	0
 2362 073d 0C       		.uleb128 0xc
 2363 073e 01       		.byte	0x1
 2364 073f 79030000 		.4byte	.LASF64
 2365 0743 01       		.byte	0x1
 2366 0744 7804     		.2byte	0x478
 2367 0746 01       		.byte	0x1
 2368 0747 00000000 		.4byte	.LFB30
 2369 074b 28000000 		.4byte	.LFE30
 2370 074f CC050000 		.4byte	.LLST47
 2371 0753 01       		.byte	0x1
 2372 0754 8B070000 		.4byte	0x78b
 2373 0758 0F       		.uleb128 0xf
 2374 0759 87010000 		.4byte	.LASF62
 2375 075d 01       		.byte	0x1
 2376 075e 7804     		.2byte	0x478
 2377 0760 7A000000 		.4byte	0x7a
 2378 0764 EC050000 		.4byte	.LLST48
 2379 0768 0D       		.uleb128 0xd
 2380 0769 E1040000 		.4byte	.LASF25
 2381 076d 01       		.byte	0x1
 2382 076e 7A04     		.2byte	0x47a
 2383 0770 6F000000 		.4byte	0x6f
 2384 0774 18060000 		.4byte	.LLST49
 2385 0778 0E       		.uleb128 0xe
 2386 0779 08000000 		.4byte	.LVL70
 2387 077d D2090000 		.4byte	0x9d2
 2388 0781 0E       		.uleb128 0xe
 2389 0782 1E000000 		.4byte	.LVL72
 2390 0786 E0090000 		.4byte	0x9e0
 2391 078a 00       		.byte	0
 2392 078b 0C       		.uleb128 0xc
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 72


 2393 078c 01       		.byte	0x1
 2394 078d 9C030000 		.4byte	.LASF65
 2395 0791 01       		.byte	0x1
 2396 0792 9804     		.2byte	0x498
 2397 0794 01       		.byte	0x1
 2398 0795 00000000 		.4byte	.LFB31
 2399 0799 24000000 		.4byte	.LFE31
 2400 079d 2B060000 		.4byte	.LLST50
 2401 07a1 01       		.byte	0x1
 2402 07a2 D9070000 		.4byte	0x7d9
 2403 07a6 0F       		.uleb128 0xf
 2404 07a7 87010000 		.4byte	.LASF62
 2405 07ab 01       		.byte	0x1
 2406 07ac 9804     		.2byte	0x498
 2407 07ae 7A000000 		.4byte	0x7a
 2408 07b2 4B060000 		.4byte	.LLST51
 2409 07b6 0D       		.uleb128 0xd
 2410 07b7 E1040000 		.4byte	.LASF25
 2411 07bb 01       		.byte	0x1
 2412 07bc 9A04     		.2byte	0x49a
 2413 07be 6F000000 		.4byte	0x6f
 2414 07c2 77060000 		.4byte	.LLST52
 2415 07c6 0E       		.uleb128 0xe
 2416 07c7 08000000 		.4byte	.LVL74
 2417 07cb D2090000 		.4byte	0x9d2
 2418 07cf 0E       		.uleb128 0xe
 2419 07d0 1E000000 		.4byte	.LVL76
 2420 07d4 E0090000 		.4byte	0x9e0
 2421 07d8 00       		.byte	0
 2422 07d9 0C       		.uleb128 0xc
 2423 07da 01       		.byte	0x1
 2424 07db 06010000 		.4byte	.LASF66
 2425 07df 01       		.byte	0x1
 2426 07e0 B904     		.2byte	0x4b9
 2427 07e2 01       		.byte	0x1
 2428 07e3 00000000 		.4byte	.LFB32
 2429 07e7 24000000 		.4byte	.LFE32
 2430 07eb 8A060000 		.4byte	.LLST53
 2431 07ef 01       		.byte	0x1
 2432 07f0 27080000 		.4byte	0x827
 2433 07f4 0F       		.uleb128 0xf
 2434 07f5 87010000 		.4byte	.LASF62
 2435 07f9 01       		.byte	0x1
 2436 07fa B904     		.2byte	0x4b9
 2437 07fc 7A000000 		.4byte	0x7a
 2438 0800 AA060000 		.4byte	.LLST54
 2439 0804 0D       		.uleb128 0xd
 2440 0805 E1040000 		.4byte	.LASF25
 2441 0809 01       		.byte	0x1
 2442 080a BB04     		.2byte	0x4bb
 2443 080c 6F000000 		.4byte	0x6f
 2444 0810 D6060000 		.4byte	.LLST55
 2445 0814 0E       		.uleb128 0xe
 2446 0815 08000000 		.4byte	.LVL78
 2447 0819 D2090000 		.4byte	0x9d2
 2448 081d 0E       		.uleb128 0xe
 2449 081e 1E000000 		.4byte	.LVL80
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 73


 2450 0822 E0090000 		.4byte	0x9e0
 2451 0826 00       		.byte	0
 2452 0827 0C       		.uleb128 0xc
 2453 0828 01       		.byte	0x1
 2454 0829 34010000 		.4byte	.LASF67
 2455 082d 01       		.byte	0x1
 2456 082e E104     		.2byte	0x4e1
 2457 0830 01       		.byte	0x1
 2458 0831 00000000 		.4byte	.LFB33
 2459 0835 1C000000 		.4byte	.LFE33
 2460 0839 E9060000 		.4byte	.LLST56
 2461 083d 01       		.byte	0x1
 2462 083e 85080000 		.4byte	0x885
 2463 0842 0F       		.uleb128 0xf
 2464 0843 93010000 		.4byte	.LASF42
 2465 0847 01       		.byte	0x1
 2466 0848 E104     		.2byte	0x4e1
 2467 084a 7A000000 		.4byte	0x7a
 2468 084e 09070000 		.4byte	.LLST57
 2469 0852 0F       		.uleb128 0xf
 2470 0853 03020000 		.4byte	.LASF68
 2471 0857 01       		.byte	0x1
 2472 0858 E104     		.2byte	0x4e1
 2473 085a 7A000000 		.4byte	0x7a
 2474 085e 35070000 		.4byte	.LLST58
 2475 0862 0D       		.uleb128 0xd
 2476 0863 E1040000 		.4byte	.LASF25
 2477 0867 01       		.byte	0x1
 2478 0868 E304     		.2byte	0x4e3
 2479 086a 6F000000 		.4byte	0x6f
 2480 086e 61070000 		.4byte	.LLST59
 2481 0872 0E       		.uleb128 0xe
 2482 0873 0A000000 		.4byte	.LVL82
 2483 0877 D2090000 		.4byte	0x9d2
 2484 087b 0E       		.uleb128 0xe
 2485 087c 14000000 		.4byte	.LVL84
 2486 0880 E0090000 		.4byte	0x9e0
 2487 0884 00       		.byte	0
 2488 0885 14       		.uleb128 0x14
 2489 0886 01       		.byte	0x1
 2490 0887 26020000 		.4byte	.LASF69
 2491 088b 01       		.byte	0x1
 2492 088c C8       		.byte	0xc8
 2493 088d 01       		.byte	0x1
 2494 088e 00000000 		.4byte	.LFB1
 2495 0892 24000000 		.4byte	.LFE1
 2496 0896 74070000 		.4byte	.LLST60
 2497 089a 01       		.byte	0x1
 2498 089b D6080000 		.4byte	0x8d6
 2499 089f 15       		.uleb128 0x15
 2500 08a0 E1040000 		.4byte	.LASF25
 2501 08a4 01       		.byte	0x1
 2502 08a5 CA       		.byte	0xca
 2503 08a6 6F000000 		.4byte	0x6f
 2504 08aa 94070000 		.4byte	.LLST61
 2505 08ae 0E       		.uleb128 0xe
 2506 08af 06000000 		.4byte	.LVL86
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 74


 2507 08b3 D2090000 		.4byte	0x9d2
 2508 08b7 0E       		.uleb128 0xe
 2509 08b8 14000000 		.4byte	.LVL87
 2510 08bc E0090000 		.4byte	0x9e0
 2511 08c0 16       		.uleb128 0x16
 2512 08c1 1C000000 		.4byte	.LVL88
 2513 08c5 27080000 		.4byte	0x827
 2514 08c9 17       		.uleb128 0x17
 2515 08ca 01       		.byte	0x1
 2516 08cb 51       		.byte	0x51
 2517 08cc 01       		.byte	0x1
 2518 08cd 48       		.byte	0x48
 2519 08ce 17       		.uleb128 0x17
 2520 08cf 01       		.byte	0x1
 2521 08d0 50       		.byte	0x50
 2522 08d1 02       		.byte	0x2
 2523 08d2 74       		.byte	0x74
 2524 08d3 00       		.sleb128 0
 2525 08d4 00       		.byte	0
 2526 08d5 00       		.byte	0
 2527 08d6 14       		.uleb128 0x14
 2528 08d7 01       		.byte	0x1
 2529 08d8 F7010000 		.4byte	.LASF70
 2530 08dc 01       		.byte	0x1
 2531 08dd F7       		.byte	0xf7
 2532 08de 01       		.byte	0x1
 2533 08df 00000000 		.4byte	.LFB2
 2534 08e3 1C000000 		.4byte	.LFE2
 2535 08e7 A7070000 		.4byte	.LLST62
 2536 08eb 01       		.byte	0x1
 2537 08ec 03090000 		.4byte	0x903
 2538 08f0 0E       		.uleb128 0xe
 2539 08f1 0E000000 		.4byte	.LVL89
 2540 08f5 05010000 		.4byte	0x105
 2541 08f9 0E       		.uleb128 0xe
 2542 08fa 16000000 		.4byte	.LVL90
 2543 08fe 85080000 		.4byte	0x885
 2544 0902 00       		.byte	0
 2545 0903 11       		.uleb128 0x11
 2546 0904 01       		.byte	0x1
 2547 0905 D7030000 		.4byte	.LASF71
 2548 0909 01       		.byte	0x1
 2549 090a FE04     		.2byte	0x4fe
 2550 090c 01       		.byte	0x1
 2551 090d 7A000000 		.4byte	0x7a
 2552 0911 00000000 		.4byte	.LFB34
 2553 0915 14000000 		.4byte	.LFE34
 2554 0919 02       		.byte	0x2
 2555 091a 7D       		.byte	0x7d
 2556 091b 00       		.sleb128 0
 2557 091c 01       		.byte	0x1
 2558 091d 12       		.uleb128 0x12
 2559 091e B1000000 		.4byte	0xb1
 2560 0922 00000000 		.4byte	.LFB35
 2561 0926 0C000000 		.4byte	.LFE35
 2562 092a 02       		.byte	0x2
 2563 092b 7D       		.byte	0x7d
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 75


 2564 092c 00       		.sleb128 0
 2565 092d 01       		.byte	0x1
 2566 092e 3A090000 		.4byte	0x93a
 2567 0932 18       		.uleb128 0x18
 2568 0933 C0000000 		.4byte	0xc0
 2569 0937 01       		.byte	0x1
 2570 0938 50       		.byte	0x50
 2571 0939 00       		.byte	0
 2572 093a 11       		.uleb128 0x11
 2573 093b 01       		.byte	0x1
 2574 093c 9B020000 		.4byte	.LASF72
 2575 0940 01       		.byte	0x1
 2576 0941 2E05     		.2byte	0x52e
 2577 0943 01       		.byte	0x1
 2578 0944 7A000000 		.4byte	0x7a
 2579 0948 00000000 		.4byte	.LFB36
 2580 094c 0C000000 		.4byte	.LFE36
 2581 0950 02       		.byte	0x2
 2582 0951 7D       		.byte	0x7d
 2583 0952 00       		.sleb128 0
 2584 0953 01       		.byte	0x1
 2585 0954 11       		.uleb128 0x11
 2586 0955 01       		.byte	0x1
 2587 0956 1D000000 		.4byte	.LASF73
 2588 095a 01       		.byte	0x1
 2589 095b 4505     		.2byte	0x545
 2590 095d 01       		.byte	0x1
 2591 095e 7A000000 		.4byte	0x7a
 2592 0962 00000000 		.4byte	.LFB37
 2593 0966 0C000000 		.4byte	.LFE37
 2594 096a 02       		.byte	0x2
 2595 096b 7D       		.byte	0x7d
 2596 096c 00       		.sleb128 0
 2597 096d 01       		.byte	0x1
 2598 096e 10       		.uleb128 0x10
 2599 096f 01       		.byte	0x1
 2600 0970 18050000 		.4byte	.LASF74
 2601 0974 01       		.byte	0x1
 2602 0975 5C05     		.2byte	0x55c
 2603 0977 01       		.byte	0x1
 2604 0978 00000000 		.4byte	.LFB38
 2605 097c 0C000000 		.4byte	.LFE38
 2606 0980 02       		.byte	0x2
 2607 0981 7D       		.byte	0x7d
 2608 0982 00       		.sleb128 0
 2609 0983 01       		.byte	0x1
 2610 0984 97090000 		.4byte	0x997
 2611 0988 19       		.uleb128 0x19
 2612 0989 5A040000 		.4byte	.LASF18
 2613 098d 01       		.byte	0x1
 2614 098e 5C05     		.2byte	0x55c
 2615 0990 7A000000 		.4byte	0x7a
 2616 0994 01       		.byte	0x1
 2617 0995 50       		.byte	0x50
 2618 0996 00       		.byte	0
 2619 0997 10       		.uleb128 0x10
 2620 0998 01       		.byte	0x1
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 76


 2621 0999 5E000000 		.4byte	.LASF75
 2622 099d 01       		.byte	0x1
 2623 099e 7305     		.2byte	0x573
 2624 09a0 01       		.byte	0x1
 2625 09a1 00000000 		.4byte	.LFB39
 2626 09a5 0C000000 		.4byte	.LFE39
 2627 09a9 02       		.byte	0x2
 2628 09aa 7D       		.byte	0x7d
 2629 09ab 00       		.sleb128 0
 2630 09ac 01       		.byte	0x1
 2631 09ad C0090000 		.4byte	0x9c0
 2632 09b1 19       		.uleb128 0x19
 2633 09b2 5A040000 		.4byte	.LASF18
 2634 09b6 01       		.byte	0x1
 2635 09b7 7305     		.2byte	0x573
 2636 09b9 7A000000 		.4byte	0x7a
 2637 09bd 01       		.byte	0x1
 2638 09be 50       		.byte	0x50
 2639 09bf 00       		.byte	0
 2640 09c0 1A       		.uleb128 0x1a
 2641 09c1 86000000 		.4byte	.LASF79
 2642 09c5 01       		.byte	0x1
 2643 09c6 16       		.byte	0x16
 2644 09c7 6F000000 		.4byte	0x6f
 2645 09cb 01       		.byte	0x1
 2646 09cc 05       		.byte	0x5
 2647 09cd 03       		.byte	0x3
 2648 09ce 00000000 		.4byte	Timer_initVar
 2649 09d2 1B       		.uleb128 0x1b
 2650 09d3 01       		.byte	0x1
 2651 09d4 33020000 		.4byte	.LASF80
 2652 09d8 03       		.byte	0x3
 2653 09d9 73       		.byte	0x73
 2654 09da 01       		.byte	0x1
 2655 09db 6F000000 		.4byte	0x6f
 2656 09df 01       		.byte	0x1
 2657 09e0 1C       		.uleb128 0x1c
 2658 09e1 01       		.byte	0x1
 2659 09e2 36000000 		.4byte	.LASF81
 2660 09e6 03       		.byte	0x3
 2661 09e7 74       		.byte	0x74
 2662 09e8 01       		.byte	0x1
 2663 09e9 01       		.byte	0x1
 2664 09ea 1D       		.uleb128 0x1d
 2665 09eb 6F000000 		.4byte	0x6f
 2666 09ef 00       		.byte	0
 2667 09f0 00       		.byte	0
 2668              		.section	.debug_abbrev,"",%progbits
 2669              	.Ldebug_abbrev0:
 2670 0000 01       		.uleb128 0x1
 2671 0001 11       		.uleb128 0x11
 2672 0002 01       		.byte	0x1
 2673 0003 25       		.uleb128 0x25
 2674 0004 0E       		.uleb128 0xe
 2675 0005 13       		.uleb128 0x13
 2676 0006 0B       		.uleb128 0xb
 2677 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 77


 2678 0008 0E       		.uleb128 0xe
 2679 0009 1B       		.uleb128 0x1b
 2680 000a 0E       		.uleb128 0xe
 2681 000b 55       		.uleb128 0x55
 2682 000c 06       		.uleb128 0x6
 2683 000d 11       		.uleb128 0x11
 2684 000e 01       		.uleb128 0x1
 2685 000f 52       		.uleb128 0x52
 2686 0010 01       		.uleb128 0x1
 2687 0011 10       		.uleb128 0x10
 2688 0012 06       		.uleb128 0x6
 2689 0013 00       		.byte	0
 2690 0014 00       		.byte	0
 2691 0015 02       		.uleb128 0x2
 2692 0016 24       		.uleb128 0x24
 2693 0017 00       		.byte	0
 2694 0018 0B       		.uleb128 0xb
 2695 0019 0B       		.uleb128 0xb
 2696 001a 3E       		.uleb128 0x3e
 2697 001b 0B       		.uleb128 0xb
 2698 001c 03       		.uleb128 0x3
 2699 001d 0E       		.uleb128 0xe
 2700 001e 00       		.byte	0
 2701 001f 00       		.byte	0
 2702 0020 03       		.uleb128 0x3
 2703 0021 24       		.uleb128 0x24
 2704 0022 00       		.byte	0
 2705 0023 0B       		.uleb128 0xb
 2706 0024 0B       		.uleb128 0xb
 2707 0025 3E       		.uleb128 0x3e
 2708 0026 0B       		.uleb128 0xb
 2709 0027 03       		.uleb128 0x3
 2710 0028 08       		.uleb128 0x8
 2711 0029 00       		.byte	0
 2712 002a 00       		.byte	0
 2713 002b 04       		.uleb128 0x4
 2714 002c 16       		.uleb128 0x16
 2715 002d 00       		.byte	0
 2716 002e 03       		.uleb128 0x3
 2717 002f 0E       		.uleb128 0xe
 2718 0030 3A       		.uleb128 0x3a
 2719 0031 0B       		.uleb128 0xb
 2720 0032 3B       		.uleb128 0x3b
 2721 0033 0B       		.uleb128 0xb
 2722 0034 49       		.uleb128 0x49
 2723 0035 13       		.uleb128 0x13
 2724 0036 00       		.byte	0
 2725 0037 00       		.byte	0
 2726 0038 05       		.uleb128 0x5
 2727 0039 35       		.uleb128 0x35
 2728 003a 00       		.byte	0
 2729 003b 49       		.uleb128 0x49
 2730 003c 13       		.uleb128 0x13
 2731 003d 00       		.byte	0
 2732 003e 00       		.byte	0
 2733 003f 06       		.uleb128 0x6
 2734 0040 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 78


 2735 0041 01       		.byte	0x1
 2736 0042 3F       		.uleb128 0x3f
 2737 0043 0C       		.uleb128 0xc
 2738 0044 03       		.uleb128 0x3
 2739 0045 0E       		.uleb128 0xe
 2740 0046 3A       		.uleb128 0x3a
 2741 0047 0B       		.uleb128 0xb
 2742 0048 3B       		.uleb128 0x3b
 2743 0049 05       		.uleb128 0x5
 2744 004a 27       		.uleb128 0x27
 2745 004b 0C       		.uleb128 0xc
 2746 004c 20       		.uleb128 0x20
 2747 004d 0B       		.uleb128 0xb
 2748 004e 01       		.uleb128 0x1
 2749 004f 13       		.uleb128 0x13
 2750 0050 00       		.byte	0
 2751 0051 00       		.byte	0
 2752 0052 07       		.uleb128 0x7
 2753 0053 05       		.uleb128 0x5
 2754 0054 00       		.byte	0
 2755 0055 03       		.uleb128 0x3
 2756 0056 0E       		.uleb128 0xe
 2757 0057 3A       		.uleb128 0x3a
 2758 0058 0B       		.uleb128 0xb
 2759 0059 3B       		.uleb128 0x3b
 2760 005a 05       		.uleb128 0x5
 2761 005b 49       		.uleb128 0x49
 2762 005c 13       		.uleb128 0x13
 2763 005d 00       		.byte	0
 2764 005e 00       		.byte	0
 2765 005f 08       		.uleb128 0x8
 2766 0060 2E       		.uleb128 0x2e
 2767 0061 01       		.byte	0x1
 2768 0062 3F       		.uleb128 0x3f
 2769 0063 0C       		.uleb128 0xc
 2770 0064 03       		.uleb128 0x3
 2771 0065 0E       		.uleb128 0xe
 2772 0066 3A       		.uleb128 0x3a
 2773 0067 0B       		.uleb128 0xb
 2774 0068 3B       		.uleb128 0x3b
 2775 0069 0B       		.uleb128 0xb
 2776 006a 27       		.uleb128 0x27
 2777 006b 0C       		.uleb128 0xc
 2778 006c 11       		.uleb128 0x11
 2779 006d 01       		.uleb128 0x1
 2780 006e 12       		.uleb128 0x12
 2781 006f 01       		.uleb128 0x1
 2782 0070 40       		.uleb128 0x40
 2783 0071 0A       		.uleb128 0xa
 2784 0072 9742     		.uleb128 0x2117
 2785 0074 0C       		.uleb128 0xc
 2786 0075 01       		.uleb128 0x1
 2787 0076 13       		.uleb128 0x13
 2788 0077 00       		.byte	0
 2789 0078 00       		.byte	0
 2790 0079 09       		.uleb128 0x9
 2791 007a 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 79


 2792 007b 01       		.byte	0x1
 2793 007c 31       		.uleb128 0x31
 2794 007d 13       		.uleb128 0x13
 2795 007e 52       		.uleb128 0x52
 2796 007f 01       		.uleb128 0x1
 2797 0080 55       		.uleb128 0x55
 2798 0081 06       		.uleb128 0x6
 2799 0082 58       		.uleb128 0x58
 2800 0083 0B       		.uleb128 0xb
 2801 0084 59       		.uleb128 0x59
 2802 0085 0B       		.uleb128 0xb
 2803 0086 01       		.uleb128 0x1
 2804 0087 13       		.uleb128 0x13
 2805 0088 00       		.byte	0
 2806 0089 00       		.byte	0
 2807 008a 0A       		.uleb128 0xa
 2808 008b 05       		.uleb128 0x5
 2809 008c 00       		.byte	0
 2810 008d 31       		.uleb128 0x31
 2811 008e 13       		.uleb128 0x13
 2812 008f 1C       		.uleb128 0x1c
 2813 0090 0B       		.uleb128 0xb
 2814 0091 00       		.byte	0
 2815 0092 00       		.byte	0
 2816 0093 0B       		.uleb128 0xb
 2817 0094 1D       		.uleb128 0x1d
 2818 0095 01       		.byte	0x1
 2819 0096 31       		.uleb128 0x31
 2820 0097 13       		.uleb128 0x13
 2821 0098 52       		.uleb128 0x52
 2822 0099 01       		.uleb128 0x1
 2823 009a 55       		.uleb128 0x55
 2824 009b 06       		.uleb128 0x6
 2825 009c 58       		.uleb128 0x58
 2826 009d 0B       		.uleb128 0xb
 2827 009e 59       		.uleb128 0x59
 2828 009f 0B       		.uleb128 0xb
 2829 00a0 00       		.byte	0
 2830 00a1 00       		.byte	0
 2831 00a2 0C       		.uleb128 0xc
 2832 00a3 2E       		.uleb128 0x2e
 2833 00a4 01       		.byte	0x1
 2834 00a5 3F       		.uleb128 0x3f
 2835 00a6 0C       		.uleb128 0xc
 2836 00a7 03       		.uleb128 0x3
 2837 00a8 0E       		.uleb128 0xe
 2838 00a9 3A       		.uleb128 0x3a
 2839 00aa 0B       		.uleb128 0xb
 2840 00ab 3B       		.uleb128 0x3b
 2841 00ac 05       		.uleb128 0x5
 2842 00ad 27       		.uleb128 0x27
 2843 00ae 0C       		.uleb128 0xc
 2844 00af 11       		.uleb128 0x11
 2845 00b0 01       		.uleb128 0x1
 2846 00b1 12       		.uleb128 0x12
 2847 00b2 01       		.uleb128 0x1
 2848 00b3 40       		.uleb128 0x40
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 80


 2849 00b4 06       		.uleb128 0x6
 2850 00b5 9742     		.uleb128 0x2117
 2851 00b7 0C       		.uleb128 0xc
 2852 00b8 01       		.uleb128 0x1
 2853 00b9 13       		.uleb128 0x13
 2854 00ba 00       		.byte	0
 2855 00bb 00       		.byte	0
 2856 00bc 0D       		.uleb128 0xd
 2857 00bd 34       		.uleb128 0x34
 2858 00be 00       		.byte	0
 2859 00bf 03       		.uleb128 0x3
 2860 00c0 0E       		.uleb128 0xe
 2861 00c1 3A       		.uleb128 0x3a
 2862 00c2 0B       		.uleb128 0xb
 2863 00c3 3B       		.uleb128 0x3b
 2864 00c4 05       		.uleb128 0x5
 2865 00c5 49       		.uleb128 0x49
 2866 00c6 13       		.uleb128 0x13
 2867 00c7 02       		.uleb128 0x2
 2868 00c8 06       		.uleb128 0x6
 2869 00c9 00       		.byte	0
 2870 00ca 00       		.byte	0
 2871 00cb 0E       		.uleb128 0xe
 2872 00cc 898201   		.uleb128 0x4109
 2873 00cf 00       		.byte	0
 2874 00d0 11       		.uleb128 0x11
 2875 00d1 01       		.uleb128 0x1
 2876 00d2 31       		.uleb128 0x31
 2877 00d3 13       		.uleb128 0x13
 2878 00d4 00       		.byte	0
 2879 00d5 00       		.byte	0
 2880 00d6 0F       		.uleb128 0xf
 2881 00d7 05       		.uleb128 0x5
 2882 00d8 00       		.byte	0
 2883 00d9 03       		.uleb128 0x3
 2884 00da 0E       		.uleb128 0xe
 2885 00db 3A       		.uleb128 0x3a
 2886 00dc 0B       		.uleb128 0xb
 2887 00dd 3B       		.uleb128 0x3b
 2888 00de 05       		.uleb128 0x5
 2889 00df 49       		.uleb128 0x49
 2890 00e0 13       		.uleb128 0x13
 2891 00e1 02       		.uleb128 0x2
 2892 00e2 06       		.uleb128 0x6
 2893 00e3 00       		.byte	0
 2894 00e4 00       		.byte	0
 2895 00e5 10       		.uleb128 0x10
 2896 00e6 2E       		.uleb128 0x2e
 2897 00e7 01       		.byte	0x1
 2898 00e8 3F       		.uleb128 0x3f
 2899 00e9 0C       		.uleb128 0xc
 2900 00ea 03       		.uleb128 0x3
 2901 00eb 0E       		.uleb128 0xe
 2902 00ec 3A       		.uleb128 0x3a
 2903 00ed 0B       		.uleb128 0xb
 2904 00ee 3B       		.uleb128 0x3b
 2905 00ef 05       		.uleb128 0x5
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 81


 2906 00f0 27       		.uleb128 0x27
 2907 00f1 0C       		.uleb128 0xc
 2908 00f2 11       		.uleb128 0x11
 2909 00f3 01       		.uleb128 0x1
 2910 00f4 12       		.uleb128 0x12
 2911 00f5 01       		.uleb128 0x1
 2912 00f6 40       		.uleb128 0x40
 2913 00f7 0A       		.uleb128 0xa
 2914 00f8 9742     		.uleb128 0x2117
 2915 00fa 0C       		.uleb128 0xc
 2916 00fb 01       		.uleb128 0x1
 2917 00fc 13       		.uleb128 0x13
 2918 00fd 00       		.byte	0
 2919 00fe 00       		.byte	0
 2920 00ff 11       		.uleb128 0x11
 2921 0100 2E       		.uleb128 0x2e
 2922 0101 00       		.byte	0
 2923 0102 3F       		.uleb128 0x3f
 2924 0103 0C       		.uleb128 0xc
 2925 0104 03       		.uleb128 0x3
 2926 0105 0E       		.uleb128 0xe
 2927 0106 3A       		.uleb128 0x3a
 2928 0107 0B       		.uleb128 0xb
 2929 0108 3B       		.uleb128 0x3b
 2930 0109 05       		.uleb128 0x5
 2931 010a 27       		.uleb128 0x27
 2932 010b 0C       		.uleb128 0xc
 2933 010c 49       		.uleb128 0x49
 2934 010d 13       		.uleb128 0x13
 2935 010e 11       		.uleb128 0x11
 2936 010f 01       		.uleb128 0x1
 2937 0110 12       		.uleb128 0x12
 2938 0111 01       		.uleb128 0x1
 2939 0112 40       		.uleb128 0x40
 2940 0113 0A       		.uleb128 0xa
 2941 0114 9742     		.uleb128 0x2117
 2942 0116 0C       		.uleb128 0xc
 2943 0117 00       		.byte	0
 2944 0118 00       		.byte	0
 2945 0119 12       		.uleb128 0x12
 2946 011a 2E       		.uleb128 0x2e
 2947 011b 01       		.byte	0x1
 2948 011c 31       		.uleb128 0x31
 2949 011d 13       		.uleb128 0x13
 2950 011e 11       		.uleb128 0x11
 2951 011f 01       		.uleb128 0x1
 2952 0120 12       		.uleb128 0x12
 2953 0121 01       		.uleb128 0x1
 2954 0122 40       		.uleb128 0x40
 2955 0123 0A       		.uleb128 0xa
 2956 0124 9742     		.uleb128 0x2117
 2957 0126 0C       		.uleb128 0xc
 2958 0127 01       		.uleb128 0x1
 2959 0128 13       		.uleb128 0x13
 2960 0129 00       		.byte	0
 2961 012a 00       		.byte	0
 2962 012b 13       		.uleb128 0x13
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 82


 2963 012c 05       		.uleb128 0x5
 2964 012d 00       		.byte	0
 2965 012e 31       		.uleb128 0x31
 2966 012f 13       		.uleb128 0x13
 2967 0130 02       		.uleb128 0x2
 2968 0131 06       		.uleb128 0x6
 2969 0132 00       		.byte	0
 2970 0133 00       		.byte	0
 2971 0134 14       		.uleb128 0x14
 2972 0135 2E       		.uleb128 0x2e
 2973 0136 01       		.byte	0x1
 2974 0137 3F       		.uleb128 0x3f
 2975 0138 0C       		.uleb128 0xc
 2976 0139 03       		.uleb128 0x3
 2977 013a 0E       		.uleb128 0xe
 2978 013b 3A       		.uleb128 0x3a
 2979 013c 0B       		.uleb128 0xb
 2980 013d 3B       		.uleb128 0x3b
 2981 013e 0B       		.uleb128 0xb
 2982 013f 27       		.uleb128 0x27
 2983 0140 0C       		.uleb128 0xc
 2984 0141 11       		.uleb128 0x11
 2985 0142 01       		.uleb128 0x1
 2986 0143 12       		.uleb128 0x12
 2987 0144 01       		.uleb128 0x1
 2988 0145 40       		.uleb128 0x40
 2989 0146 06       		.uleb128 0x6
 2990 0147 9742     		.uleb128 0x2117
 2991 0149 0C       		.uleb128 0xc
 2992 014a 01       		.uleb128 0x1
 2993 014b 13       		.uleb128 0x13
 2994 014c 00       		.byte	0
 2995 014d 00       		.byte	0
 2996 014e 15       		.uleb128 0x15
 2997 014f 34       		.uleb128 0x34
 2998 0150 00       		.byte	0
 2999 0151 03       		.uleb128 0x3
 3000 0152 0E       		.uleb128 0xe
 3001 0153 3A       		.uleb128 0x3a
 3002 0154 0B       		.uleb128 0xb
 3003 0155 3B       		.uleb128 0x3b
 3004 0156 0B       		.uleb128 0xb
 3005 0157 49       		.uleb128 0x49
 3006 0158 13       		.uleb128 0x13
 3007 0159 02       		.uleb128 0x2
 3008 015a 06       		.uleb128 0x6
 3009 015b 00       		.byte	0
 3010 015c 00       		.byte	0
 3011 015d 16       		.uleb128 0x16
 3012 015e 898201   		.uleb128 0x4109
 3013 0161 01       		.byte	0x1
 3014 0162 11       		.uleb128 0x11
 3015 0163 01       		.uleb128 0x1
 3016 0164 31       		.uleb128 0x31
 3017 0165 13       		.uleb128 0x13
 3018 0166 00       		.byte	0
 3019 0167 00       		.byte	0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 83


 3020 0168 17       		.uleb128 0x17
 3021 0169 8A8201   		.uleb128 0x410a
 3022 016c 00       		.byte	0
 3023 016d 02       		.uleb128 0x2
 3024 016e 0A       		.uleb128 0xa
 3025 016f 9142     		.uleb128 0x2111
 3026 0171 0A       		.uleb128 0xa
 3027 0172 00       		.byte	0
 3028 0173 00       		.byte	0
 3029 0174 18       		.uleb128 0x18
 3030 0175 05       		.uleb128 0x5
 3031 0176 00       		.byte	0
 3032 0177 31       		.uleb128 0x31
 3033 0178 13       		.uleb128 0x13
 3034 0179 02       		.uleb128 0x2
 3035 017a 0A       		.uleb128 0xa
 3036 017b 00       		.byte	0
 3037 017c 00       		.byte	0
 3038 017d 19       		.uleb128 0x19
 3039 017e 05       		.uleb128 0x5
 3040 017f 00       		.byte	0
 3041 0180 03       		.uleb128 0x3
 3042 0181 0E       		.uleb128 0xe
 3043 0182 3A       		.uleb128 0x3a
 3044 0183 0B       		.uleb128 0xb
 3045 0184 3B       		.uleb128 0x3b
 3046 0185 05       		.uleb128 0x5
 3047 0186 49       		.uleb128 0x49
 3048 0187 13       		.uleb128 0x13
 3049 0188 02       		.uleb128 0x2
 3050 0189 0A       		.uleb128 0xa
 3051 018a 00       		.byte	0
 3052 018b 00       		.byte	0
 3053 018c 1A       		.uleb128 0x1a
 3054 018d 34       		.uleb128 0x34
 3055 018e 00       		.byte	0
 3056 018f 03       		.uleb128 0x3
 3057 0190 0E       		.uleb128 0xe
 3058 0191 3A       		.uleb128 0x3a
 3059 0192 0B       		.uleb128 0xb
 3060 0193 3B       		.uleb128 0x3b
 3061 0194 0B       		.uleb128 0xb
 3062 0195 49       		.uleb128 0x49
 3063 0196 13       		.uleb128 0x13
 3064 0197 3F       		.uleb128 0x3f
 3065 0198 0C       		.uleb128 0xc
 3066 0199 02       		.uleb128 0x2
 3067 019a 0A       		.uleb128 0xa
 3068 019b 00       		.byte	0
 3069 019c 00       		.byte	0
 3070 019d 1B       		.uleb128 0x1b
 3071 019e 2E       		.uleb128 0x2e
 3072 019f 00       		.byte	0
 3073 01a0 3F       		.uleb128 0x3f
 3074 01a1 0C       		.uleb128 0xc
 3075 01a2 03       		.uleb128 0x3
 3076 01a3 0E       		.uleb128 0xe
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 84


 3077 01a4 3A       		.uleb128 0x3a
 3078 01a5 0B       		.uleb128 0xb
 3079 01a6 3B       		.uleb128 0x3b
 3080 01a7 0B       		.uleb128 0xb
 3081 01a8 27       		.uleb128 0x27
 3082 01a9 0C       		.uleb128 0xc
 3083 01aa 49       		.uleb128 0x49
 3084 01ab 13       		.uleb128 0x13
 3085 01ac 3C       		.uleb128 0x3c
 3086 01ad 0C       		.uleb128 0xc
 3087 01ae 00       		.byte	0
 3088 01af 00       		.byte	0
 3089 01b0 1C       		.uleb128 0x1c
 3090 01b1 2E       		.uleb128 0x2e
 3091 01b2 01       		.byte	0x1
 3092 01b3 3F       		.uleb128 0x3f
 3093 01b4 0C       		.uleb128 0xc
 3094 01b5 03       		.uleb128 0x3
 3095 01b6 0E       		.uleb128 0xe
 3096 01b7 3A       		.uleb128 0x3a
 3097 01b8 0B       		.uleb128 0xb
 3098 01b9 3B       		.uleb128 0x3b
 3099 01ba 0B       		.uleb128 0xb
 3100 01bb 27       		.uleb128 0x27
 3101 01bc 0C       		.uleb128 0xc
 3102 01bd 3C       		.uleb128 0x3c
 3103 01be 0C       		.uleb128 0xc
 3104 01bf 00       		.byte	0
 3105 01c0 00       		.byte	0
 3106 01c1 1D       		.uleb128 0x1d
 3107 01c2 05       		.uleb128 0x5
 3108 01c3 00       		.byte	0
 3109 01c4 49       		.uleb128 0x49
 3110 01c5 13       		.uleb128 0x13
 3111 01c6 00       		.byte	0
 3112 01c7 00       		.byte	0
 3113 01c8 00       		.byte	0
 3114              		.section	.debug_loc,"",%progbits
 3115              	.Ldebug_loc0:
 3116              	.LLST0:
 3117 0000 00000000 		.4byte	.LFB3
 3118 0004 02000000 		.4byte	.LCFI0
 3119 0008 0200     		.2byte	0x2
 3120 000a 7D       		.byte	0x7d
 3121 000b 00       		.sleb128 0
 3122 000c 02000000 		.4byte	.LCFI0
 3123 0010 1C000000 		.4byte	.LFE3
 3124 0014 0200     		.2byte	0x2
 3125 0016 7D       		.byte	0x7d
 3126 0017 08       		.sleb128 8
 3127 0018 00000000 		.4byte	0
 3128 001c 00000000 		.4byte	0
 3129              	.LLST1:
 3130 0020 06000000 		.4byte	.LVL3
 3131 0024 13000000 		.4byte	.LVL4-1
 3132 0028 0100     		.2byte	0x1
 3133 002a 50       		.byte	0x50
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 85


 3134 002b 00000000 		.4byte	0
 3135 002f 00000000 		.4byte	0
 3136              	.LLST2:
 3137 0033 00000000 		.4byte	.LFB4
 3138 0037 02000000 		.4byte	.LCFI1
 3139 003b 0200     		.2byte	0x2
 3140 003d 7D       		.byte	0x7d
 3141 003e 00       		.sleb128 0
 3142 003f 02000000 		.4byte	.LCFI1
 3143 0043 28000000 		.4byte	.LFE4
 3144 0047 0200     		.2byte	0x2
 3145 0049 7D       		.byte	0x7d
 3146 004a 08       		.sleb128 8
 3147 004b 00000000 		.4byte	0
 3148 004f 00000000 		.4byte	0
 3149              	.LLST3:
 3150 0053 00000000 		.4byte	.LVL5
 3151 0057 07000000 		.4byte	.LVL6-1
 3152 005b 0100     		.2byte	0x1
 3153 005d 50       		.byte	0x50
 3154 005e 07000000 		.4byte	.LVL6-1
 3155 0062 16000000 		.4byte	.LVL7
 3156 0066 0100     		.2byte	0x1
 3157 0068 54       		.byte	0x54
 3158 0069 16000000 		.4byte	.LVL7
 3159 006d 28000000 		.4byte	.LFE4
 3160 0071 0400     		.2byte	0x4
 3161 0073 F3       		.byte	0xf3
 3162 0074 01       		.uleb128 0x1
 3163 0075 50       		.byte	0x50
 3164 0076 9F       		.byte	0x9f
 3165 0077 00000000 		.4byte	0
 3166 007b 00000000 		.4byte	0
 3167              	.LLST4:
 3168 007f 08000000 		.4byte	.LVL6
 3169 0083 1B000000 		.4byte	.LVL8-1
 3170 0087 0100     		.2byte	0x1
 3171 0089 50       		.byte	0x50
 3172 008a 00000000 		.4byte	0
 3173 008e 00000000 		.4byte	0
 3174              	.LLST5:
 3175 0092 00000000 		.4byte	.LFB5
 3176 0096 02000000 		.4byte	.LCFI2
 3177 009a 0200     		.2byte	0x2
 3178 009c 7D       		.byte	0x7d
 3179 009d 00       		.sleb128 0
 3180 009e 02000000 		.4byte	.LCFI2
 3181 00a2 28000000 		.4byte	.LFE5
 3182 00a6 0200     		.2byte	0x2
 3183 00a8 7D       		.byte	0x7d
 3184 00a9 08       		.sleb128 8
 3185 00aa 00000000 		.4byte	0
 3186 00ae 00000000 		.4byte	0
 3187              	.LLST6:
 3188 00b2 00000000 		.4byte	.LVL9
 3189 00b6 07000000 		.4byte	.LVL10-1
 3190 00ba 0100     		.2byte	0x1
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 86


 3191 00bc 50       		.byte	0x50
 3192 00bd 07000000 		.4byte	.LVL10-1
 3193 00c1 16000000 		.4byte	.LVL11
 3194 00c5 0100     		.2byte	0x1
 3195 00c7 54       		.byte	0x54
 3196 00c8 16000000 		.4byte	.LVL11
 3197 00cc 28000000 		.4byte	.LFE5
 3198 00d0 0400     		.2byte	0x4
 3199 00d2 F3       		.byte	0xf3
 3200 00d3 01       		.uleb128 0x1
 3201 00d4 50       		.byte	0x50
 3202 00d5 9F       		.byte	0x9f
 3203 00d6 00000000 		.4byte	0
 3204 00da 00000000 		.4byte	0
 3205              	.LLST7:
 3206 00de 08000000 		.4byte	.LVL10
 3207 00e2 1B000000 		.4byte	.LVL12-1
 3208 00e6 0100     		.2byte	0x1
 3209 00e8 50       		.byte	0x50
 3210 00e9 00000000 		.4byte	0
 3211 00ed 00000000 		.4byte	0
 3212              	.LLST8:
 3213 00f1 00000000 		.4byte	.LFB6
 3214 00f5 02000000 		.4byte	.LCFI3
 3215 00f9 0200     		.2byte	0x2
 3216 00fb 7D       		.byte	0x7d
 3217 00fc 00       		.sleb128 0
 3218 00fd 02000000 		.4byte	.LCFI3
 3219 0101 28000000 		.4byte	.LFE6
 3220 0105 0200     		.2byte	0x2
 3221 0107 7D       		.byte	0x7d
 3222 0108 08       		.sleb128 8
 3223 0109 00000000 		.4byte	0
 3224 010d 00000000 		.4byte	0
 3225              	.LLST9:
 3226 0111 00000000 		.4byte	.LVL13
 3227 0115 07000000 		.4byte	.LVL14-1
 3228 0119 0100     		.2byte	0x1
 3229 011b 50       		.byte	0x50
 3230 011c 07000000 		.4byte	.LVL14-1
 3231 0120 16000000 		.4byte	.LVL15
 3232 0124 0100     		.2byte	0x1
 3233 0126 54       		.byte	0x54
 3234 0127 16000000 		.4byte	.LVL15
 3235 012b 28000000 		.4byte	.LFE6
 3236 012f 0400     		.2byte	0x4
 3237 0131 F3       		.byte	0xf3
 3238 0132 01       		.uleb128 0x1
 3239 0133 50       		.byte	0x50
 3240 0134 9F       		.byte	0x9f
 3241 0135 00000000 		.4byte	0
 3242 0139 00000000 		.4byte	0
 3243              	.LLST10:
 3244 013d 08000000 		.4byte	.LVL14
 3245 0141 1B000000 		.4byte	.LVL16-1
 3246 0145 0100     		.2byte	0x1
 3247 0147 50       		.byte	0x50
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 87


 3248 0148 00000000 		.4byte	0
 3249 014c 00000000 		.4byte	0
 3250              	.LLST11:
 3251 0150 00000000 		.4byte	.LFB7
 3252 0154 02000000 		.4byte	.LCFI4
 3253 0158 0200     		.2byte	0x2
 3254 015a 7D       		.byte	0x7d
 3255 015b 00       		.sleb128 0
 3256 015c 02000000 		.4byte	.LCFI4
 3257 0160 2C000000 		.4byte	.LFE7
 3258 0164 0200     		.2byte	0x2
 3259 0166 7D       		.byte	0x7d
 3260 0167 08       		.sleb128 8
 3261 0168 00000000 		.4byte	0
 3262 016c 00000000 		.4byte	0
 3263              	.LLST12:
 3264 0170 00000000 		.4byte	.LVL17
 3265 0174 07000000 		.4byte	.LVL18-1
 3266 0178 0100     		.2byte	0x1
 3267 017a 50       		.byte	0x50
 3268 017b 07000000 		.4byte	.LVL18-1
 3269 017f 18000000 		.4byte	.LVL19
 3270 0183 0100     		.2byte	0x1
 3271 0185 54       		.byte	0x54
 3272 0186 18000000 		.4byte	.LVL19
 3273 018a 2C000000 		.4byte	.LFE7
 3274 018e 0400     		.2byte	0x4
 3275 0190 F3       		.byte	0xf3
 3276 0191 01       		.uleb128 0x1
 3277 0192 50       		.byte	0x50
 3278 0193 9F       		.byte	0x9f
 3279 0194 00000000 		.4byte	0
 3280 0198 00000000 		.4byte	0
 3281              	.LLST13:
 3282 019c 08000000 		.4byte	.LVL18
 3283 01a0 21000000 		.4byte	.LVL20-1
 3284 01a4 0100     		.2byte	0x1
 3285 01a6 50       		.byte	0x50
 3286 01a7 00000000 		.4byte	0
 3287 01ab 00000000 		.4byte	0
 3288              	.LLST14:
 3289 01af 00000000 		.4byte	.LVL21
 3290 01b3 06000000 		.4byte	.LVL22
 3291 01b7 0100     		.2byte	0x1
 3292 01b9 50       		.byte	0x50
 3293 01ba 06000000 		.4byte	.LVL22
 3294 01be 10000000 		.4byte	.LFE8
 3295 01c2 0400     		.2byte	0x4
 3296 01c4 F3       		.byte	0xf3
 3297 01c5 01       		.uleb128 0x1
 3298 01c6 50       		.byte	0x50
 3299 01c7 9F       		.byte	0x9f
 3300 01c8 00000000 		.4byte	0
 3301 01cc 00000000 		.4byte	0
 3302              	.LLST15:
 3303 01d0 00000000 		.4byte	.LFB9
 3304 01d4 02000000 		.4byte	.LCFI5
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 88


 3305 01d8 0200     		.2byte	0x2
 3306 01da 7D       		.byte	0x7d
 3307 01db 00       		.sleb128 0
 3308 01dc 02000000 		.4byte	.LCFI5
 3309 01e0 28000000 		.4byte	.LFE9
 3310 01e4 0200     		.2byte	0x2
 3311 01e6 7D       		.byte	0x7d
 3312 01e7 08       		.sleb128 8
 3313 01e8 00000000 		.4byte	0
 3314 01ec 00000000 		.4byte	0
 3315              	.LLST16:
 3316 01f0 00000000 		.4byte	.LVL23
 3317 01f4 07000000 		.4byte	.LVL24-1
 3318 01f8 0100     		.2byte	0x1
 3319 01fa 50       		.byte	0x50
 3320 01fb 07000000 		.4byte	.LVL24-1
 3321 01ff 18000000 		.4byte	.LVL25
 3322 0203 0100     		.2byte	0x1
 3323 0205 54       		.byte	0x54
 3324 0206 18000000 		.4byte	.LVL25
 3325 020a 28000000 		.4byte	.LFE9
 3326 020e 0400     		.2byte	0x4
 3327 0210 F3       		.byte	0xf3
 3328 0211 01       		.uleb128 0x1
 3329 0212 50       		.byte	0x50
 3330 0213 9F       		.byte	0x9f
 3331 0214 00000000 		.4byte	0
 3332 0218 00000000 		.4byte	0
 3333              	.LLST17:
 3334 021c 08000000 		.4byte	.LVL24
 3335 0220 21000000 		.4byte	.LVL26-1
 3336 0224 0100     		.2byte	0x1
 3337 0226 50       		.byte	0x50
 3338 0227 00000000 		.4byte	0
 3339 022b 00000000 		.4byte	0
 3340              	.LLST18:
 3341 022f 00000000 		.4byte	.LFB10
 3342 0233 02000000 		.4byte	.LCFI6
 3343 0237 0200     		.2byte	0x2
 3344 0239 7D       		.byte	0x7d
 3345 023a 00       		.sleb128 0
 3346 023b 02000000 		.4byte	.LCFI6
 3347 023f 28000000 		.4byte	.LFE10
 3348 0243 0200     		.2byte	0x2
 3349 0245 7D       		.byte	0x7d
 3350 0246 08       		.sleb128 8
 3351 0247 00000000 		.4byte	0
 3352 024b 00000000 		.4byte	0
 3353              	.LLST19:
 3354 024f 00000000 		.4byte	.LVL27
 3355 0253 07000000 		.4byte	.LVL28-1
 3356 0257 0100     		.2byte	0x1
 3357 0259 50       		.byte	0x50
 3358 025a 07000000 		.4byte	.LVL28-1
 3359 025e 18000000 		.4byte	.LVL29
 3360 0262 0100     		.2byte	0x1
 3361 0264 54       		.byte	0x54
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 89


 3362 0265 18000000 		.4byte	.LVL29
 3363 0269 28000000 		.4byte	.LFE10
 3364 026d 0400     		.2byte	0x4
 3365 026f F3       		.byte	0xf3
 3366 0270 01       		.uleb128 0x1
 3367 0271 50       		.byte	0x50
 3368 0272 9F       		.byte	0x9f
 3369 0273 00000000 		.4byte	0
 3370 0277 00000000 		.4byte	0
 3371              	.LLST20:
 3372 027b 08000000 		.4byte	.LVL28
 3373 027f 21000000 		.4byte	.LVL30-1
 3374 0283 0100     		.2byte	0x1
 3375 0285 50       		.byte	0x50
 3376 0286 00000000 		.4byte	0
 3377 028a 00000000 		.4byte	0
 3378              	.LLST21:
 3379 028e 00000000 		.4byte	.LFB11
 3380 0292 02000000 		.4byte	.LCFI7
 3381 0296 0200     		.2byte	0x2
 3382 0298 7D       		.byte	0x7d
 3383 0299 00       		.sleb128 0
 3384 029a 02000000 		.4byte	.LCFI7
 3385 029e 2C000000 		.4byte	.LFE11
 3386 02a2 0200     		.2byte	0x2
 3387 02a4 7D       		.byte	0x7d
 3388 02a5 08       		.sleb128 8
 3389 02a6 00000000 		.4byte	0
 3390 02aa 00000000 		.4byte	0
 3391              	.LLST22:
 3392 02ae 00000000 		.4byte	.LVL31
 3393 02b2 07000000 		.4byte	.LVL32-1
 3394 02b6 0100     		.2byte	0x1
 3395 02b8 50       		.byte	0x50
 3396 02b9 07000000 		.4byte	.LVL32-1
 3397 02bd 10000000 		.4byte	.LVL33
 3398 02c1 0100     		.2byte	0x1
 3399 02c3 54       		.byte	0x54
 3400 02c4 10000000 		.4byte	.LVL33
 3401 02c8 2C000000 		.4byte	.LFE11
 3402 02cc 0400     		.2byte	0x4
 3403 02ce F3       		.byte	0xf3
 3404 02cf 01       		.uleb128 0x1
 3405 02d0 50       		.byte	0x50
 3406 02d1 9F       		.byte	0x9f
 3407 02d2 00000000 		.4byte	0
 3408 02d6 00000000 		.4byte	0
 3409              	.LLST23:
 3410 02da 08000000 		.4byte	.LVL32
 3411 02de 1F000000 		.4byte	.LVL34-1
 3412 02e2 0100     		.2byte	0x1
 3413 02e4 50       		.byte	0x50
 3414 02e5 00000000 		.4byte	0
 3415 02e9 00000000 		.4byte	0
 3416              	.LLST24:
 3417 02ed 00000000 		.4byte	.LFB12
 3418 02f1 02000000 		.4byte	.LCFI8
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 90


 3419 02f5 0200     		.2byte	0x2
 3420 02f7 7D       		.byte	0x7d
 3421 02f8 00       		.sleb128 0
 3422 02f9 02000000 		.4byte	.LCFI8
 3423 02fd 28000000 		.4byte	.LFE12
 3424 0301 0200     		.2byte	0x2
 3425 0303 7D       		.byte	0x7d
 3426 0304 08       		.sleb128 8
 3427 0305 00000000 		.4byte	0
 3428 0309 00000000 		.4byte	0
 3429              	.LLST25:
 3430 030d 00000000 		.4byte	.LVL35
 3431 0311 07000000 		.4byte	.LVL36-1
 3432 0315 0100     		.2byte	0x1
 3433 0317 50       		.byte	0x50
 3434 0318 07000000 		.4byte	.LVL36-1
 3435 031c 16000000 		.4byte	.LVL37
 3436 0320 0100     		.2byte	0x1
 3437 0322 54       		.byte	0x54
 3438 0323 16000000 		.4byte	.LVL37
 3439 0327 28000000 		.4byte	.LFE12
 3440 032b 0400     		.2byte	0x4
 3441 032d F3       		.byte	0xf3
 3442 032e 01       		.uleb128 0x1
 3443 032f 50       		.byte	0x50
 3444 0330 9F       		.byte	0x9f
 3445 0331 00000000 		.4byte	0
 3446 0335 00000000 		.4byte	0
 3447              	.LLST26:
 3448 0339 08000000 		.4byte	.LVL36
 3449 033d 1B000000 		.4byte	.LVL38-1
 3450 0341 0100     		.2byte	0x1
 3451 0343 50       		.byte	0x50
 3452 0344 00000000 		.4byte	0
 3453 0348 00000000 		.4byte	0
 3454              	.LLST27:
 3455 034c 00000000 		.4byte	.LVL39
 3456 0350 04000000 		.4byte	.LVL40
 3457 0354 0100     		.2byte	0x1
 3458 0356 50       		.byte	0x50
 3459 0357 04000000 		.4byte	.LVL40
 3460 035b 0C000000 		.4byte	.LFE13
 3461 035f 0400     		.2byte	0x4
 3462 0361 F3       		.byte	0xf3
 3463 0362 01       		.uleb128 0x1
 3464 0363 50       		.byte	0x50
 3465 0364 9F       		.byte	0x9f
 3466 0365 00000000 		.4byte	0
 3467 0369 00000000 		.4byte	0
 3468              	.LLST28:
 3469 036d 00000000 		.4byte	.LFB15
 3470 0371 02000000 		.4byte	.LCFI9
 3471 0375 0200     		.2byte	0x2
 3472 0377 7D       		.byte	0x7d
 3473 0378 00       		.sleb128 0
 3474 0379 02000000 		.4byte	.LCFI9
 3475 037d 28000000 		.4byte	.LFE15
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 91


 3476 0381 0200     		.2byte	0x2
 3477 0383 7D       		.byte	0x7d
 3478 0384 08       		.sleb128 8
 3479 0385 00000000 		.4byte	0
 3480 0389 00000000 		.4byte	0
 3481              	.LLST29:
 3482 038d 00000000 		.4byte	.LVL41
 3483 0391 07000000 		.4byte	.LVL42-1
 3484 0395 0100     		.2byte	0x1
 3485 0397 50       		.byte	0x50
 3486 0398 07000000 		.4byte	.LVL42-1
 3487 039c 16000000 		.4byte	.LVL43
 3488 03a0 0100     		.2byte	0x1
 3489 03a2 54       		.byte	0x54
 3490 03a3 16000000 		.4byte	.LVL43
 3491 03a7 28000000 		.4byte	.LFE15
 3492 03ab 0400     		.2byte	0x4
 3493 03ad F3       		.byte	0xf3
 3494 03ae 01       		.uleb128 0x1
 3495 03af 50       		.byte	0x50
 3496 03b0 9F       		.byte	0x9f
 3497 03b1 00000000 		.4byte	0
 3498 03b5 00000000 		.4byte	0
 3499              	.LLST30:
 3500 03b9 08000000 		.4byte	.LVL42
 3501 03bd 1B000000 		.4byte	.LVL44-1
 3502 03c1 0100     		.2byte	0x1
 3503 03c3 50       		.byte	0x50
 3504 03c4 00000000 		.4byte	0
 3505 03c8 00000000 		.4byte	0
 3506              	.LLST31:
 3507 03cc 00000000 		.4byte	.LVL45
 3508 03d0 04000000 		.4byte	.LVL46
 3509 03d4 0100     		.2byte	0x1
 3510 03d6 50       		.byte	0x50
 3511 03d7 04000000 		.4byte	.LVL46
 3512 03db 0C000000 		.4byte	.LFE16
 3513 03df 0400     		.2byte	0x4
 3514 03e1 F3       		.byte	0xf3
 3515 03e2 01       		.uleb128 0x1
 3516 03e3 50       		.byte	0x50
 3517 03e4 9F       		.byte	0x9f
 3518 03e5 00000000 		.4byte	0
 3519 03e9 00000000 		.4byte	0
 3520              	.LLST32:
 3521 03ed 00000000 		.4byte	.LFB18
 3522 03f1 02000000 		.4byte	.LCFI10
 3523 03f5 0200     		.2byte	0x2
 3524 03f7 7D       		.byte	0x7d
 3525 03f8 00       		.sleb128 0
 3526 03f9 02000000 		.4byte	.LCFI10
 3527 03fd 24000000 		.4byte	.LFE18
 3528 0401 0200     		.2byte	0x2
 3529 0403 7D       		.byte	0x7d
 3530 0404 08       		.sleb128 8
 3531 0405 00000000 		.4byte	0
 3532 0409 00000000 		.4byte	0
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 92


 3533              	.LLST33:
 3534 040d 00000000 		.4byte	.LVL47
 3535 0411 07000000 		.4byte	.LVL48-1
 3536 0415 0100     		.2byte	0x1
 3537 0417 50       		.byte	0x50
 3538 0418 07000000 		.4byte	.LVL48-1
 3539 041c 1E000000 		.4byte	.LVL50
 3540 0420 0100     		.2byte	0x1
 3541 0422 54       		.byte	0x54
 3542 0423 1E000000 		.4byte	.LVL50
 3543 0427 24000000 		.4byte	.LFE18
 3544 042b 0400     		.2byte	0x4
 3545 042d F3       		.byte	0xf3
 3546 042e 01       		.uleb128 0x1
 3547 042f 50       		.byte	0x50
 3548 0430 9F       		.byte	0x9f
 3549 0431 00000000 		.4byte	0
 3550 0435 00000000 		.4byte	0
 3551              	.LLST34:
 3552 0439 08000000 		.4byte	.LVL48
 3553 043d 1D000000 		.4byte	.LVL49-1
 3554 0441 0100     		.2byte	0x1
 3555 0443 50       		.byte	0x50
 3556 0444 00000000 		.4byte	0
 3557 0448 00000000 		.4byte	0
 3558              	.LLST35:
 3559 044c 00000000 		.4byte	.LVL51
 3560 0450 04000000 		.4byte	.LVL52
 3561 0454 0100     		.2byte	0x1
 3562 0456 50       		.byte	0x50
 3563 0457 04000000 		.4byte	.LVL52
 3564 045b 0C000000 		.4byte	.LFE19
 3565 045f 0400     		.2byte	0x4
 3566 0461 F3       		.byte	0xf3
 3567 0462 01       		.uleb128 0x1
 3568 0463 50       		.byte	0x50
 3569 0464 9F       		.byte	0x9f
 3570 0465 00000000 		.4byte	0
 3571 0469 00000000 		.4byte	0
 3572              	.LLST36:
 3573 046d 00000000 		.4byte	.LFB21
 3574 0471 02000000 		.4byte	.LCFI11
 3575 0475 0200     		.2byte	0x2
 3576 0477 7D       		.byte	0x7d
 3577 0478 00       		.sleb128 0
 3578 0479 02000000 		.4byte	.LCFI11
 3579 047d 28000000 		.4byte	.LFE21
 3580 0481 0200     		.2byte	0x2
 3581 0483 7D       		.byte	0x7d
 3582 0484 08       		.sleb128 8
 3583 0485 00000000 		.4byte	0
 3584 0489 00000000 		.4byte	0
 3585              	.LLST37:
 3586 048d 00000000 		.4byte	.LVL53
 3587 0491 07000000 		.4byte	.LVL54-1
 3588 0495 0100     		.2byte	0x1
 3589 0497 50       		.byte	0x50
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 93


 3590 0498 07000000 		.4byte	.LVL54-1
 3591 049c 18000000 		.4byte	.LVL55
 3592 04a0 0100     		.2byte	0x1
 3593 04a2 54       		.byte	0x54
 3594 04a3 18000000 		.4byte	.LVL55
 3595 04a7 28000000 		.4byte	.LFE21
 3596 04ab 0400     		.2byte	0x4
 3597 04ad F3       		.byte	0xf3
 3598 04ae 01       		.uleb128 0x1
 3599 04af 50       		.byte	0x50
 3600 04b0 9F       		.byte	0x9f
 3601 04b1 00000000 		.4byte	0
 3602 04b5 00000000 		.4byte	0
 3603              	.LLST38:
 3604 04b9 08000000 		.4byte	.LVL54
 3605 04bd 21000000 		.4byte	.LVL56-1
 3606 04c1 0100     		.2byte	0x1
 3607 04c3 50       		.byte	0x50
 3608 04c4 00000000 		.4byte	0
 3609 04c8 00000000 		.4byte	0
 3610              	.LLST39:
 3611 04cc 00000000 		.4byte	.LVL57
 3612 04d0 04000000 		.4byte	.LVL58
 3613 04d4 0100     		.2byte	0x1
 3614 04d6 50       		.byte	0x50
 3615 04d7 04000000 		.4byte	.LVL58
 3616 04db 0C000000 		.4byte	.LFE22
 3617 04df 0400     		.2byte	0x4
 3618 04e1 F3       		.byte	0xf3
 3619 04e2 01       		.uleb128 0x1
 3620 04e3 50       		.byte	0x50
 3621 04e4 9F       		.byte	0x9f
 3622 04e5 00000000 		.4byte	0
 3623 04e9 00000000 		.4byte	0
 3624              	.LLST40:
 3625 04ed 00000000 		.4byte	.LVL59
 3626 04f1 04000000 		.4byte	.LVL60
 3627 04f5 0100     		.2byte	0x1
 3628 04f7 50       		.byte	0x50
 3629 04f8 04000000 		.4byte	.LVL60
 3630 04fc 0C000000 		.4byte	.LFE24
 3631 0500 0400     		.2byte	0x4
 3632 0502 F3       		.byte	0xf3
 3633 0503 01       		.uleb128 0x1
 3634 0504 50       		.byte	0x50
 3635 0505 9F       		.byte	0x9f
 3636 0506 00000000 		.4byte	0
 3637 050a 00000000 		.4byte	0
 3638              	.LLST41:
 3639 050e 00000000 		.4byte	.LFB28
 3640 0512 02000000 		.4byte	.LCFI12
 3641 0516 0200     		.2byte	0x2
 3642 0518 7D       		.byte	0x7d
 3643 0519 00       		.sleb128 0
 3644 051a 02000000 		.4byte	.LCFI12
 3645 051e 24000000 		.4byte	.LFE28
 3646 0522 0200     		.2byte	0x2
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 94


 3647 0524 7D       		.byte	0x7d
 3648 0525 08       		.sleb128 8
 3649 0526 00000000 		.4byte	0
 3650 052a 00000000 		.4byte	0
 3651              	.LLST42:
 3652 052e 00000000 		.4byte	.LVL61
 3653 0532 07000000 		.4byte	.LVL62-1
 3654 0536 0100     		.2byte	0x1
 3655 0538 50       		.byte	0x50
 3656 0539 07000000 		.4byte	.LVL62-1
 3657 053d 16000000 		.4byte	.LVL63
 3658 0541 0100     		.2byte	0x1
 3659 0543 54       		.byte	0x54
 3660 0544 16000000 		.4byte	.LVL63
 3661 0548 24000000 		.4byte	.LFE28
 3662 054c 0400     		.2byte	0x4
 3663 054e F3       		.byte	0xf3
 3664 054f 01       		.uleb128 0x1
 3665 0550 50       		.byte	0x50
 3666 0551 9F       		.byte	0x9f
 3667 0552 00000000 		.4byte	0
 3668 0556 00000000 		.4byte	0
 3669              	.LLST43:
 3670 055a 08000000 		.4byte	.LVL62
 3671 055e 1B000000 		.4byte	.LVL64-1
 3672 0562 0100     		.2byte	0x1
 3673 0564 50       		.byte	0x50
 3674 0565 00000000 		.4byte	0
 3675 0569 00000000 		.4byte	0
 3676              	.LLST44:
 3677 056d 00000000 		.4byte	.LFB29
 3678 0571 02000000 		.4byte	.LCFI13
 3679 0575 0200     		.2byte	0x2
 3680 0577 7D       		.byte	0x7d
 3681 0578 00       		.sleb128 0
 3682 0579 02000000 		.4byte	.LCFI13
 3683 057d 24000000 		.4byte	.LFE29
 3684 0581 0200     		.2byte	0x2
 3685 0583 7D       		.byte	0x7d
 3686 0584 08       		.sleb128 8
 3687 0585 00000000 		.4byte	0
 3688 0589 00000000 		.4byte	0
 3689              	.LLST45:
 3690 058d 00000000 		.4byte	.LVL65
 3691 0591 07000000 		.4byte	.LVL66-1
 3692 0595 0100     		.2byte	0x1
 3693 0597 50       		.byte	0x50
 3694 0598 07000000 		.4byte	.LVL66-1
 3695 059c 10000000 		.4byte	.LVL67
 3696 05a0 0100     		.2byte	0x1
 3697 05a2 54       		.byte	0x54
 3698 05a3 10000000 		.4byte	.LVL67
 3699 05a7 24000000 		.4byte	.LFE29
 3700 05ab 0400     		.2byte	0x4
 3701 05ad F3       		.byte	0xf3
 3702 05ae 01       		.uleb128 0x1
 3703 05af 50       		.byte	0x50
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 95


 3704 05b0 9F       		.byte	0x9f
 3705 05b1 00000000 		.4byte	0
 3706 05b5 00000000 		.4byte	0
 3707              	.LLST46:
 3708 05b9 08000000 		.4byte	.LVL66
 3709 05bd 1D000000 		.4byte	.LVL68-1
 3710 05c1 0100     		.2byte	0x1
 3711 05c3 50       		.byte	0x50
 3712 05c4 00000000 		.4byte	0
 3713 05c8 00000000 		.4byte	0
 3714              	.LLST47:
 3715 05cc 00000000 		.4byte	.LFB30
 3716 05d0 02000000 		.4byte	.LCFI14
 3717 05d4 0200     		.2byte	0x2
 3718 05d6 7D       		.byte	0x7d
 3719 05d7 00       		.sleb128 0
 3720 05d8 02000000 		.4byte	.LCFI14
 3721 05dc 28000000 		.4byte	.LFE30
 3722 05e0 0200     		.2byte	0x2
 3723 05e2 7D       		.byte	0x7d
 3724 05e3 08       		.sleb128 8
 3725 05e4 00000000 		.4byte	0
 3726 05e8 00000000 		.4byte	0
 3727              	.LLST48:
 3728 05ec 00000000 		.4byte	.LVL69
 3729 05f0 07000000 		.4byte	.LVL70-1
 3730 05f4 0100     		.2byte	0x1
 3731 05f6 50       		.byte	0x50
 3732 05f7 07000000 		.4byte	.LVL70-1
 3733 05fb 10000000 		.4byte	.LVL71
 3734 05ff 0100     		.2byte	0x1
 3735 0601 54       		.byte	0x54
 3736 0602 10000000 		.4byte	.LVL71
 3737 0606 28000000 		.4byte	.LFE30
 3738 060a 0400     		.2byte	0x4
 3739 060c F3       		.byte	0xf3
 3740 060d 01       		.uleb128 0x1
 3741 060e 50       		.byte	0x50
 3742 060f 9F       		.byte	0x9f
 3743 0610 00000000 		.4byte	0
 3744 0614 00000000 		.4byte	0
 3745              	.LLST49:
 3746 0618 08000000 		.4byte	.LVL70
 3747 061c 1D000000 		.4byte	.LVL72-1
 3748 0620 0100     		.2byte	0x1
 3749 0622 50       		.byte	0x50
 3750 0623 00000000 		.4byte	0
 3751 0627 00000000 		.4byte	0
 3752              	.LLST50:
 3753 062b 00000000 		.4byte	.LFB31
 3754 062f 02000000 		.4byte	.LCFI15
 3755 0633 0200     		.2byte	0x2
 3756 0635 7D       		.byte	0x7d
 3757 0636 00       		.sleb128 0
 3758 0637 02000000 		.4byte	.LCFI15
 3759 063b 24000000 		.4byte	.LFE31
 3760 063f 0200     		.2byte	0x2
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 96


 3761 0641 7D       		.byte	0x7d
 3762 0642 08       		.sleb128 8
 3763 0643 00000000 		.4byte	0
 3764 0647 00000000 		.4byte	0
 3765              	.LLST51:
 3766 064b 00000000 		.4byte	.LVL73
 3767 064f 07000000 		.4byte	.LVL74-1
 3768 0653 0100     		.2byte	0x1
 3769 0655 50       		.byte	0x50
 3770 0656 07000000 		.4byte	.LVL74-1
 3771 065a 10000000 		.4byte	.LVL75
 3772 065e 0100     		.2byte	0x1
 3773 0660 54       		.byte	0x54
 3774 0661 10000000 		.4byte	.LVL75
 3775 0665 24000000 		.4byte	.LFE31
 3776 0669 0400     		.2byte	0x4
 3777 066b F3       		.byte	0xf3
 3778 066c 01       		.uleb128 0x1
 3779 066d 50       		.byte	0x50
 3780 066e 9F       		.byte	0x9f
 3781 066f 00000000 		.4byte	0
 3782 0673 00000000 		.4byte	0
 3783              	.LLST52:
 3784 0677 08000000 		.4byte	.LVL74
 3785 067b 1D000000 		.4byte	.LVL76-1
 3786 067f 0100     		.2byte	0x1
 3787 0681 50       		.byte	0x50
 3788 0682 00000000 		.4byte	0
 3789 0686 00000000 		.4byte	0
 3790              	.LLST53:
 3791 068a 00000000 		.4byte	.LFB32
 3792 068e 02000000 		.4byte	.LCFI16
 3793 0692 0200     		.2byte	0x2
 3794 0694 7D       		.byte	0x7d
 3795 0695 00       		.sleb128 0
 3796 0696 02000000 		.4byte	.LCFI16
 3797 069a 24000000 		.4byte	.LFE32
 3798 069e 0200     		.2byte	0x2
 3799 06a0 7D       		.byte	0x7d
 3800 06a1 08       		.sleb128 8
 3801 06a2 00000000 		.4byte	0
 3802 06a6 00000000 		.4byte	0
 3803              	.LLST54:
 3804 06aa 00000000 		.4byte	.LVL77
 3805 06ae 07000000 		.4byte	.LVL78-1
 3806 06b2 0100     		.2byte	0x1
 3807 06b4 50       		.byte	0x50
 3808 06b5 07000000 		.4byte	.LVL78-1
 3809 06b9 10000000 		.4byte	.LVL79
 3810 06bd 0100     		.2byte	0x1
 3811 06bf 54       		.byte	0x54
 3812 06c0 10000000 		.4byte	.LVL79
 3813 06c4 24000000 		.4byte	.LFE32
 3814 06c8 0400     		.2byte	0x4
 3815 06ca F3       		.byte	0xf3
 3816 06cb 01       		.uleb128 0x1
 3817 06cc 50       		.byte	0x50
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 97


 3818 06cd 9F       		.byte	0x9f
 3819 06ce 00000000 		.4byte	0
 3820 06d2 00000000 		.4byte	0
 3821              	.LLST55:
 3822 06d6 08000000 		.4byte	.LVL78
 3823 06da 1D000000 		.4byte	.LVL80-1
 3824 06de 0100     		.2byte	0x1
 3825 06e0 50       		.byte	0x50
 3826 06e1 00000000 		.4byte	0
 3827 06e5 00000000 		.4byte	0
 3828              	.LLST56:
 3829 06e9 00000000 		.4byte	.LFB33
 3830 06ed 02000000 		.4byte	.LCFI17
 3831 06f1 0200     		.2byte	0x2
 3832 06f3 7D       		.byte	0x7d
 3833 06f4 00       		.sleb128 0
 3834 06f5 02000000 		.4byte	.LCFI17
 3835 06f9 1C000000 		.4byte	.LFE33
 3836 06fd 0200     		.2byte	0x2
 3837 06ff 7D       		.byte	0x7d
 3838 0700 10       		.sleb128 16
 3839 0701 00000000 		.4byte	0
 3840 0705 00000000 		.4byte	0
 3841              	.LLST57:
 3842 0709 00000000 		.4byte	.LVL81
 3843 070d 09000000 		.4byte	.LVL82-1
 3844 0711 0100     		.2byte	0x1
 3845 0713 50       		.byte	0x50
 3846 0714 09000000 		.4byte	.LVL82-1
 3847 0718 0E000000 		.4byte	.LVL83
 3848 071c 0100     		.2byte	0x1
 3849 071e 55       		.byte	0x55
 3850 071f 0E000000 		.4byte	.LVL83
 3851 0723 1C000000 		.4byte	.LFE33
 3852 0727 0400     		.2byte	0x4
 3853 0729 F3       		.byte	0xf3
 3854 072a 01       		.uleb128 0x1
 3855 072b 50       		.byte	0x50
 3856 072c 9F       		.byte	0x9f
 3857 072d 00000000 		.4byte	0
 3858 0731 00000000 		.4byte	0
 3859              	.LLST58:
 3860 0735 00000000 		.4byte	.LVL81
 3861 0739 09000000 		.4byte	.LVL82-1
 3862 073d 0100     		.2byte	0x1
 3863 073f 51       		.byte	0x51
 3864 0740 09000000 		.4byte	.LVL82-1
 3865 0744 14000000 		.4byte	.LVL85
 3866 0748 0100     		.2byte	0x1
 3867 074a 54       		.byte	0x54
 3868 074b 14000000 		.4byte	.LVL85
 3869 074f 1C000000 		.4byte	.LFE33
 3870 0753 0400     		.2byte	0x4
 3871 0755 F3       		.byte	0xf3
 3872 0756 01       		.uleb128 0x1
 3873 0757 51       		.byte	0x51
 3874 0758 9F       		.byte	0x9f
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 98


 3875 0759 00000000 		.4byte	0
 3876 075d 00000000 		.4byte	0
 3877              	.LLST59:
 3878 0761 0A000000 		.4byte	.LVL82
 3879 0765 13000000 		.4byte	.LVL84-1
 3880 0769 0100     		.2byte	0x1
 3881 076b 50       		.byte	0x50
 3882 076c 00000000 		.4byte	0
 3883 0770 00000000 		.4byte	0
 3884              	.LLST60:
 3885 0774 00000000 		.4byte	.LFB1
 3886 0778 02000000 		.4byte	.LCFI18
 3887 077c 0200     		.2byte	0x2
 3888 077e 7D       		.byte	0x7d
 3889 077f 00       		.sleb128 0
 3890 0780 02000000 		.4byte	.LCFI18
 3891 0784 24000000 		.4byte	.LFE1
 3892 0788 0200     		.2byte	0x2
 3893 078a 7D       		.byte	0x7d
 3894 078b 08       		.sleb128 8
 3895 078c 00000000 		.4byte	0
 3896 0790 00000000 		.4byte	0
 3897              	.LLST61:
 3898 0794 06000000 		.4byte	.LVL86
 3899 0798 13000000 		.4byte	.LVL87-1
 3900 079c 0100     		.2byte	0x1
 3901 079e 50       		.byte	0x50
 3902 079f 00000000 		.4byte	0
 3903 07a3 00000000 		.4byte	0
 3904              	.LLST62:
 3905 07a7 00000000 		.4byte	.LFB2
 3906 07ab 02000000 		.4byte	.LCFI19
 3907 07af 0200     		.2byte	0x2
 3908 07b1 7D       		.byte	0x7d
 3909 07b2 00       		.sleb128 0
 3910 07b3 02000000 		.4byte	.LCFI19
 3911 07b7 1C000000 		.4byte	.LFE2
 3912 07bb 0200     		.2byte	0x2
 3913 07bd 7D       		.byte	0x7d
 3914 07be 08       		.sleb128 8
 3915 07bf 00000000 		.4byte	0
 3916 07c3 00000000 		.4byte	0
 3917              		.section	.debug_aranges,"",%progbits
 3918 0000 54010000 		.4byte	0x154
 3919 0004 0200     		.2byte	0x2
 3920 0006 00000000 		.4byte	.Ldebug_info0
 3921 000a 04       		.byte	0x4
 3922 000b 00       		.byte	0
 3923 000c 0000     		.2byte	0
 3924 000e 0000     		.2byte	0
 3925 0010 00000000 		.4byte	.LFB0
 3926 0014 34000000 		.4byte	.LFE0-.LFB0
 3927 0018 00000000 		.4byte	.LFB3
 3928 001c 1C000000 		.4byte	.LFE3-.LFB3
 3929 0020 00000000 		.4byte	.LFB4
 3930 0024 28000000 		.4byte	.LFE4-.LFB4
 3931 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 99


 3932 002c 28000000 		.4byte	.LFE5-.LFB5
 3933 0030 00000000 		.4byte	.LFB6
 3934 0034 28000000 		.4byte	.LFE6-.LFB6
 3935 0038 00000000 		.4byte	.LFB7
 3936 003c 2C000000 		.4byte	.LFE7-.LFB7
 3937 0040 00000000 		.4byte	.LFB8
 3938 0044 10000000 		.4byte	.LFE8-.LFB8
 3939 0048 00000000 		.4byte	.LFB9
 3940 004c 28000000 		.4byte	.LFE9-.LFB9
 3941 0050 00000000 		.4byte	.LFB10
 3942 0054 28000000 		.4byte	.LFE10-.LFB10
 3943 0058 00000000 		.4byte	.LFB11
 3944 005c 2C000000 		.4byte	.LFE11-.LFB11
 3945 0060 00000000 		.4byte	.LFB12
 3946 0064 28000000 		.4byte	.LFE12-.LFB12
 3947 0068 00000000 		.4byte	.LFB13
 3948 006c 0C000000 		.4byte	.LFE13-.LFB13
 3949 0070 00000000 		.4byte	.LFB14
 3950 0074 0C000000 		.4byte	.LFE14-.LFB14
 3951 0078 00000000 		.4byte	.LFB15
 3952 007c 28000000 		.4byte	.LFE15-.LFB15
 3953 0080 00000000 		.4byte	.LFB16
 3954 0084 0C000000 		.4byte	.LFE16-.LFB16
 3955 0088 00000000 		.4byte	.LFB17
 3956 008c 0C000000 		.4byte	.LFE17-.LFB17
 3957 0090 00000000 		.4byte	.LFB18
 3958 0094 24000000 		.4byte	.LFE18-.LFB18
 3959 0098 00000000 		.4byte	.LFB19
 3960 009c 0C000000 		.4byte	.LFE19-.LFB19
 3961 00a0 00000000 		.4byte	.LFB20
 3962 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3963 00a8 00000000 		.4byte	.LFB21
 3964 00ac 28000000 		.4byte	.LFE21-.LFB21
 3965 00b0 00000000 		.4byte	.LFB22
 3966 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3967 00b8 00000000 		.4byte	.LFB23
 3968 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3969 00c0 00000000 		.4byte	.LFB24
 3970 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3971 00c8 00000000 		.4byte	.LFB25
 3972 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3973 00d0 00000000 		.4byte	.LFB26
 3974 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3975 00d8 00000000 		.4byte	.LFB27
 3976 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3977 00e0 00000000 		.4byte	.LFB28
 3978 00e4 24000000 		.4byte	.LFE28-.LFB28
 3979 00e8 00000000 		.4byte	.LFB29
 3980 00ec 24000000 		.4byte	.LFE29-.LFB29
 3981 00f0 00000000 		.4byte	.LFB30
 3982 00f4 28000000 		.4byte	.LFE30-.LFB30
 3983 00f8 00000000 		.4byte	.LFB31
 3984 00fc 24000000 		.4byte	.LFE31-.LFB31
 3985 0100 00000000 		.4byte	.LFB32
 3986 0104 24000000 		.4byte	.LFE32-.LFB32
 3987 0108 00000000 		.4byte	.LFB33
 3988 010c 1C000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 100


 3989 0110 00000000 		.4byte	.LFB1
 3990 0114 24000000 		.4byte	.LFE1-.LFB1
 3991 0118 00000000 		.4byte	.LFB2
 3992 011c 1C000000 		.4byte	.LFE2-.LFB2
 3993 0120 00000000 		.4byte	.LFB34
 3994 0124 14000000 		.4byte	.LFE34-.LFB34
 3995 0128 00000000 		.4byte	.LFB35
 3996 012c 0C000000 		.4byte	.LFE35-.LFB35
 3997 0130 00000000 		.4byte	.LFB36
 3998 0134 0C000000 		.4byte	.LFE36-.LFB36
 3999 0138 00000000 		.4byte	.LFB37
 4000 013c 0C000000 		.4byte	.LFE37-.LFB37
 4001 0140 00000000 		.4byte	.LFB38
 4002 0144 0C000000 		.4byte	.LFE38-.LFB38
 4003 0148 00000000 		.4byte	.LFB39
 4004 014c 0C000000 		.4byte	.LFE39-.LFB39
 4005 0150 00000000 		.4byte	0
 4006 0154 00000000 		.4byte	0
 4007              		.section	.debug_ranges,"",%progbits
 4008              	.Ldebug_ranges0:
 4009 0000 08000000 		.4byte	.LBB8
 4010 0004 0A000000 		.4byte	.LBE8
 4011 0008 0C000000 		.4byte	.LBB12
 4012 000c 0E000000 		.4byte	.LBE12
 4013 0010 10000000 		.4byte	.LBB13
 4014 0014 12000000 		.4byte	.LBE13
 4015 0018 00000000 		.4byte	0
 4016 001c 00000000 		.4byte	0
 4017 0020 12000000 		.4byte	.LBB14
 4018 0024 14000000 		.4byte	.LBE14
 4019 0028 16000000 		.4byte	.LBB22
 4020 002c 18000000 		.4byte	.LBE22
 4021 0030 1A000000 		.4byte	.LBB24
 4022 0034 1C000000 		.4byte	.LBE24
 4023 0038 00000000 		.4byte	0
 4024 003c 00000000 		.4byte	0
 4025 0040 14000000 		.4byte	.LBB18
 4026 0044 16000000 		.4byte	.LBE18
 4027 0048 18000000 		.4byte	.LBB23
 4028 004c 1A000000 		.4byte	.LBE23
 4029 0050 1C000000 		.4byte	.LBB25
 4030 0054 1E000000 		.4byte	.LBE25
 4031 0058 00000000 		.4byte	0
 4032 005c 00000000 		.4byte	0
 4033 0060 00000000 		.4byte	.LFB0
 4034 0064 34000000 		.4byte	.LFE0
 4035 0068 00000000 		.4byte	.LFB3
 4036 006c 1C000000 		.4byte	.LFE3
 4037 0070 00000000 		.4byte	.LFB4
 4038 0074 28000000 		.4byte	.LFE4
 4039 0078 00000000 		.4byte	.LFB5
 4040 007c 28000000 		.4byte	.LFE5
 4041 0080 00000000 		.4byte	.LFB6
 4042 0084 28000000 		.4byte	.LFE6
 4043 0088 00000000 		.4byte	.LFB7
 4044 008c 2C000000 		.4byte	.LFE7
 4045 0090 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 101


 4046 0094 10000000 		.4byte	.LFE8
 4047 0098 00000000 		.4byte	.LFB9
 4048 009c 28000000 		.4byte	.LFE9
 4049 00a0 00000000 		.4byte	.LFB10
 4050 00a4 28000000 		.4byte	.LFE10
 4051 00a8 00000000 		.4byte	.LFB11
 4052 00ac 2C000000 		.4byte	.LFE11
 4053 00b0 00000000 		.4byte	.LFB12
 4054 00b4 28000000 		.4byte	.LFE12
 4055 00b8 00000000 		.4byte	.LFB13
 4056 00bc 0C000000 		.4byte	.LFE13
 4057 00c0 00000000 		.4byte	.LFB14
 4058 00c4 0C000000 		.4byte	.LFE14
 4059 00c8 00000000 		.4byte	.LFB15
 4060 00cc 28000000 		.4byte	.LFE15
 4061 00d0 00000000 		.4byte	.LFB16
 4062 00d4 0C000000 		.4byte	.LFE16
 4063 00d8 00000000 		.4byte	.LFB17
 4064 00dc 0C000000 		.4byte	.LFE17
 4065 00e0 00000000 		.4byte	.LFB18
 4066 00e4 24000000 		.4byte	.LFE18
 4067 00e8 00000000 		.4byte	.LFB19
 4068 00ec 0C000000 		.4byte	.LFE19
 4069 00f0 00000000 		.4byte	.LFB20
 4070 00f4 0C000000 		.4byte	.LFE20
 4071 00f8 00000000 		.4byte	.LFB21
 4072 00fc 28000000 		.4byte	.LFE21
 4073 0100 00000000 		.4byte	.LFB22
 4074 0104 0C000000 		.4byte	.LFE22
 4075 0108 00000000 		.4byte	.LFB23
 4076 010c 0C000000 		.4byte	.LFE23
 4077 0110 00000000 		.4byte	.LFB24
 4078 0114 0C000000 		.4byte	.LFE24
 4079 0118 00000000 		.4byte	.LFB25
 4080 011c 0C000000 		.4byte	.LFE25
 4081 0120 00000000 		.4byte	.LFB26
 4082 0124 0C000000 		.4byte	.LFE26
 4083 0128 00000000 		.4byte	.LFB27
 4084 012c 0C000000 		.4byte	.LFE27
 4085 0130 00000000 		.4byte	.LFB28
 4086 0134 24000000 		.4byte	.LFE28
 4087 0138 00000000 		.4byte	.LFB29
 4088 013c 24000000 		.4byte	.LFE29
 4089 0140 00000000 		.4byte	.LFB30
 4090 0144 28000000 		.4byte	.LFE30
 4091 0148 00000000 		.4byte	.LFB31
 4092 014c 24000000 		.4byte	.LFE31
 4093 0150 00000000 		.4byte	.LFB32
 4094 0154 24000000 		.4byte	.LFE32
 4095 0158 00000000 		.4byte	.LFB33
 4096 015c 1C000000 		.4byte	.LFE33
 4097 0160 00000000 		.4byte	.LFB1
 4098 0164 24000000 		.4byte	.LFE1
 4099 0168 00000000 		.4byte	.LFB2
 4100 016c 1C000000 		.4byte	.LFE2
 4101 0170 00000000 		.4byte	.LFB34
 4102 0174 14000000 		.4byte	.LFE34
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 102


 4103 0178 00000000 		.4byte	.LFB35
 4104 017c 0C000000 		.4byte	.LFE35
 4105 0180 00000000 		.4byte	.LFB36
 4106 0184 0C000000 		.4byte	.LFE36
 4107 0188 00000000 		.4byte	.LFB37
 4108 018c 0C000000 		.4byte	.LFE37
 4109 0190 00000000 		.4byte	.LFB38
 4110 0194 0C000000 		.4byte	.LFE38
 4111 0198 00000000 		.4byte	.LFB39
 4112 019c 0C000000 		.4byte	.LFE39
 4113 01a0 00000000 		.4byte	0
 4114 01a4 00000000 		.4byte	0
 4115              		.section	.debug_line,"",%progbits
 4116              	.Ldebug_line0:
 4117 0000 FF030000 		.section	.debug_str,"MS",%progbits,1
 4117      02004F00 
 4117      00000201 
 4117      FB0E0D00 
 4117      01010101 
 4118              	.LASF37:
 4119 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 4119      725F5365 
 4119      7450574D 
 4119      53746F70 
 4119      4F6E4B69 
 4120              	.LASF44:
 4121 0017 636F756E 		.ascii	"count\000"
 4121      7400
 4122              	.LASF73:
 4123 001d 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 4123      725F4765 
 4123      74496E74 
 4123      65727275 
 4123      7074536F 
 4124              	.LASF81:
 4125 0036 43794578 		.ascii	"CyExitCriticalSection\000"
 4125      69744372 
 4125      69746963 
 4125      616C5365 
 4125      6374696F 
 4126              	.LASF17:
 4127 004c 54696D65 		.ascii	"Timer_WritePeriod\000"
 4127      725F5772 
 4127      69746550 
 4127      6572696F 
 4127      6400
 4128              	.LASF75:
 4129 005e 54696D65 		.ascii	"Timer_SetInterrupt\000"
 4129      725F5365 
 4129      74496E74 
 4129      65727275 
 4129      707400
 4130              	.LASF19:
 4131 0071 70657269 		.ascii	"period\000"
 4131      6F6400
 4132              	.LASF24:
 4133 0078 54696D65 		.ascii	"Timer_SetMode\000"
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 103


 4133      725F5365 
 4133      744D6F64 
 4133      6500
 4134              	.LASF79:
 4135 0086 54696D65 		.ascii	"Timer_initVar\000"
 4135      725F696E 
 4135      69745661 
 4135      7200
 4136              	.LASF7:
 4137 0094 6C6F6E67 		.ascii	"long long unsigned int\000"
 4137      206C6F6E 
 4137      6720756E 
 4137      7369676E 
 4137      65642069 
 4138              	.LASF39:
 4139 00ab 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 4139      725F5365 
 4139      7450574D 
 4139      44656164 
 4139      54696D65 
 4140              	.LASF35:
 4141 00c0 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 4141      725F5365 
 4141      7450574D 
 4141      53796E63 
 4141      4B696C6C 
 4142              	.LASF28:
 4143 00d5 71644D6F 		.ascii	"qdMode\000"
 4143      646500
 4144              	.LASF6:
 4145 00dc 6C6F6E67 		.ascii	"long long int\000"
 4145      206C6F6E 
 4145      6720696E 
 4145      7400
 4146              	.LASF0:
 4147 00ea 7369676E 		.ascii	"signed char\000"
 4147      65642063 
 4147      68617200 
 4148              	.LASF26:
 4149 00f6 54696D65 		.ascii	"Timer_SetQDMode\000"
 4149      725F5365 
 4149      7451444D 
 4149      6F646500 
 4150              	.LASF66:
 4151 0106 54696D65 		.ascii	"Timer_SetCountMode\000"
 4151      725F5365 
 4151      74436F75 
 4151      6E744D6F 
 4151      646500
 4152              	.LASF4:
 4153 0119 6C6F6E67 		.ascii	"long int\000"
 4153      20696E74 
 4153      00
 4154              	.LASF59:
 4155 0122 54696D65 		.ascii	"Timer_ReadCapture\000"
 4155      725F5265 
 4155      61644361 
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 104


 4155      70747572 
 4155      6500
 4156              	.LASF67:
 4157 0134 54696D65 		.ascii	"Timer_TriggerCommand\000"
 4157      725F5472 
 4157      69676765 
 4157      72436F6D 
 4157      6D616E64 
 4158              	.LASF9:
 4159 0149 75696E74 		.ascii	"uint8\000"
 4159      3800
 4160              	.LASF12:
 4161 014f 646F7562 		.ascii	"double\000"
 4161      6C6500
 4162              	.LASF16:
 4163 0156 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 4163      725F5365 
 4163      74496E74 
 4163      65727275 
 4163      70744D6F 
 4164              	.LASF10:
 4165 016d 75696E74 		.ascii	"uint32\000"
 4165      333200
 4166              	.LASF20:
 4167 0174 54696D65 		.ascii	"Timer_WriteCompare\000"
 4167      725F5772 
 4167      69746543 
 4167      6F6D7061 
 4167      726500
 4168              	.LASF62:
 4169 0187 74726967 		.ascii	"triggerMode\000"
 4169      6765724D 
 4169      6F646500 
 4170              	.LASF42:
 4171 0193 6D61736B 		.ascii	"mask\000"
 4171      00
 4172              	.LASF55:
 4173 0198 54696D65 		.ascii	"Timer_ReadCompare\000"
 4173      725F5265 
 4173      6164436F 
 4173      6D706172 
 4173      6500
 4174              	.LASF40:
 4175 01aa 64656164 		.ascii	"deadTime\000"
 4175      54696D65 
 4175      00
 4176              	.LASF56:
 4177 01b3 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 4177      725F5772 
 4177      69746543 
 4177      6F6D7061 
 4177      72654275 
 4178              	.LASF77:
 4179 01c9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Timer.c\000"
 4179      6E657261 
 4179      7465645F 
 4179      536F7572 
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 105


 4179      63655C50 
 4180              	.LASF8:
 4181 01ea 756E7369 		.ascii	"unsigned int\000"
 4181      676E6564 
 4181      20696E74 
 4181      00
 4182              	.LASF70:
 4183 01f7 54696D65 		.ascii	"Timer_Start\000"
 4183      725F5374 
 4183      61727400 
 4184              	.LASF68:
 4185 0203 636F6D6D 		.ascii	"command\000"
 4185      616E6400 
 4186              	.LASF5:
 4187 020b 6C6F6E67 		.ascii	"long unsigned int\000"
 4187      20756E73 
 4187      69676E65 
 4187      6420696E 
 4187      7400
 4188              	.LASF34:
 4189 021d 6D6F6465 		.ascii	"modeMask\000"
 4189      4D61736B 
 4189      00
 4190              	.LASF69:
 4191 0226 54696D65 		.ascii	"Timer_Enable\000"
 4191      725F456E 
 4191      61626C65 
 4191      00
 4192              	.LASF80:
 4193 0233 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4193      74657243 
 4193      72697469 
 4193      63616C53 
 4193      65637469 
 4194              	.LASF3:
 4195 024a 73686F72 		.ascii	"short unsigned int\000"
 4195      7420756E 
 4195      7369676E 
 4195      65642069 
 4195      6E7400
 4196              	.LASF43:
 4197 025d 54696D65 		.ascii	"Timer_WriteCounter\000"
 4197      725F5772 
 4197      69746543 
 4197      6F756E74 
 4197      657200
 4198              	.LASF47:
 4199 0270 54696D65 		.ascii	"Timer_ReadCounter\000"
 4199      725F5265 
 4199      6164436F 
 4199      756E7465 
 4199      7200
 4200              	.LASF23:
 4201 0282 54696D65 		.ascii	"Timer_Stop\000"
 4201      725F5374 
 4201      6F7000
 4202              	.LASF32:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 106


 4203 028d 6F6E6553 		.ascii	"oneShotEnable\000"
 4203      686F7445 
 4203      6E61626C 
 4203      6500
 4204              	.LASF72:
 4205 029b 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 4205      725F4765 
 4205      74496E74 
 4205      65727275 
 4205      7074536F 
 4206              	.LASF14:
 4207 02ba 72656733 		.ascii	"reg32\000"
 4207      3200
 4208              	.LASF53:
 4209 02c0 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 4209      725F5265 
 4209      61645065 
 4209      72696F64 
 4209      42756600 
 4210              	.LASF78:
 4211 02d4 453A5C63 		.ascii	"E:\\code\\wifi\\1.6\\UartBootloader\\UART_Bootloade"
 4211      6F64655C 
 4211      77696669 
 4211      5C312E36 
 4211      5C556172 
 4212 0302 725C5541 		.ascii	"r\\UART_Bootloadable.cydsn\000"
 4212      52545F42 
 4212      6F6F746C 
 4212      6F616461 
 4212      626C652E 
 4213              	.LASF49:
 4214 031c 54696D65 		.ascii	"Timer_SetCompareSwap\000"
 4214      725F5365 
 4214      74436F6D 
 4214      70617265 
 4214      53776170 
 4215              	.LASF15:
 4216 0331 73697A65 		.ascii	"sizetype\000"
 4216      74797065 
 4216      00
 4217              	.LASF51:
 4218 033a 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 4218      725F5772 
 4218      69746550 
 4218      6572696F 
 4218      64427566 
 4219              	.LASF36:
 4220 034f 73796E63 		.ascii	"syncKillEnable\000"
 4220      4B696C6C 
 4220      456E6162 
 4220      6C6500
 4221              	.LASF41:
 4222 035e 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 4222      725F5365 
 4222      7450574D 
 4222      496E7665 
 4222      727400
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 107


 4223              	.LASF21:
 4224 0371 636F6D70 		.ascii	"compare\000"
 4224      61726500 
 4225              	.LASF64:
 4226 0379 54696D65 		.ascii	"Timer_SetStartMode\000"
 4226      725F5365 
 4226      74537461 
 4226      72744D6F 
 4226      646500
 4227              	.LASF11:
 4228 038c 666C6F61 		.ascii	"float\000"
 4228      7400
 4229              	.LASF30:
 4230 0392 70726573 		.ascii	"prescaler\000"
 4230      63616C65 
 4230      7200
 4231              	.LASF65:
 4232 039c 54696D65 		.ascii	"Timer_SetStopMode\000"
 4232      725F5365 
 4232      7453746F 
 4232      704D6F64 
 4232      6500
 4233              	.LASF54:
 4234 03ae 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 4234      725F5365 
 4234      74506572 
 4234      696F6453 
 4234      77617000 
 4235              	.LASF60:
 4236 03c2 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 4236      725F5265 
 4236      61644361 
 4236      70747572 
 4236      65427566 
 4237              	.LASF71:
 4238 03d7 54696D65 		.ascii	"Timer_ReadStatus\000"
 4238      725F5265 
 4238      61645374 
 4238      61747573 
 4238      00
 4239              	.LASF76:
 4240 03e8 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4240      4320342E 
 4240      372E3320 
 4240      32303133 
 4240      30333132 
 4241 041b 616E6368 		.ascii	"anch revision 196615]\000"
 4241      20726576 
 4241      6973696F 
 4241      6E203139 
 4241      36363135 
 4242              	.LASF1:
 4243 0431 756E7369 		.ascii	"unsigned char\000"
 4243      676E6564 
 4243      20636861 
 4243      7200
 4244              	.LASF38:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 108


 4245 043f 73746F70 		.ascii	"stopOnKillEnable\000"
 4245      4F6E4B69 
 4245      6C6C456E 
 4245      61626C65 
 4245      00
 4246              	.LASF2:
 4247 0450 73686F72 		.ascii	"short int\000"
 4247      7420696E 
 4247      7400
 4248              	.LASF18:
 4249 045a 696E7465 		.ascii	"interruptMask\000"
 4249      72727570 
 4249      744D6173 
 4249      6B00
 4250              	.LASF29:
 4251 0468 54696D65 		.ascii	"Timer_SetPrescaler\000"
 4251      725F5365 
 4251      74507265 
 4251      7363616C 
 4251      657200
 4252              	.LASF22:
 4253 047b 54696D65 		.ascii	"Timer_Init\000"
 4253      725F496E 
 4253      697400
 4254              	.LASF45:
 4255 0486 54696D65 		.ascii	"Timer_SetCounterMode\000"
 4255      725F5365 
 4255      74436F75 
 4255      6E746572 
 4255      4D6F6465 
 4256              	.LASF13:
 4257 049b 63686172 		.ascii	"char\000"
 4257      00
 4258              	.LASF27:
 4259 04a0 6D6F6465 		.ascii	"mode\000"
 4259      00
 4260              	.LASF63:
 4261 04a5 54696D65 		.ascii	"Timer_SetReloadMode\000"
 4261      725F5365 
 4261      7452656C 
 4261      6F61644D 
 4261      6F646500 
 4262              	.LASF46:
 4263 04b9 636F756E 		.ascii	"counterMode\000"
 4263      7465724D 
 4263      6F646500 
 4264              	.LASF48:
 4265 04c5 54696D65 		.ascii	"Timer_ReadPeriod\000"
 4265      725F5265 
 4265      61645065 
 4265      72696F64 
 4265      00
 4266              	.LASF57:
 4267 04d6 636F6D70 		.ascii	"compareBuf\000"
 4267      61726542 
 4267      756600
 4268              	.LASF25:
ARM GAS  C:\Users\ZHANGM~1\AppData\Local\Temp\ccaX3Pq4.s 			page 109


 4269 04e1 656E6162 		.ascii	"enableInterrupts\000"
 4269      6C65496E 
 4269      74657272 
 4269      75707473 
 4269      00
 4270              	.LASF61:
 4271 04f2 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 4271      725F5365 
 4271      74436170 
 4271      74757265 
 4271      4D6F6465 
 4272              	.LASF31:
 4273 0507 54696D65 		.ascii	"Timer_SetOneShot\000"
 4273      725F5365 
 4273      744F6E65 
 4273      53686F74 
 4273      00
 4274              	.LASF74:
 4275 0518 54696D65 		.ascii	"Timer_ClearInterrupt\000"
 4275      725F436C 
 4275      65617249 
 4275      6E746572 
 4275      72757074 
 4276              	.LASF50:
 4277 052d 73776170 		.ascii	"swapEnable\000"
 4277      456E6162 
 4277      6C6500
 4278              	.LASF52:
 4279 0538 70657269 		.ascii	"periodBuf\000"
 4279      6F644275 
 4279      6600
 4280              	.LASF33:
 4281 0542 54696D65 		.ascii	"Timer_SetPWMMode\000"
 4281      725F5365 
 4281      7450574D 
 4281      4D6F6465 
 4281      00
 4282              	.LASF58:
 4283 0553 54696D65 		.ascii	"Timer_ReadCompareBuf\000"
 4283      725F5265 
 4283      6164436F 
 4283      6D706172 
 4283      65427566 
 4284              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
